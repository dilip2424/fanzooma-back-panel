{"version":3,"file":"ng2-completer.umd.js","sources":["../../tslib/tslib.es6.js","../../rxjs/src/internal/util/isFunction.ts","../../rxjs/src/internal/config.ts","../../rxjs/src/internal/util/hostReportError.ts","../../rxjs/src/internal/Observer.ts","../../rxjs/src/internal/util/isArray.ts","../../rxjs/src/internal/util/isObject.ts","../../rxjs/src/internal/util/UnsubscriptionError.ts","../../rxjs/src/internal/Subscription.ts","../../rxjs/src/internal/symbol/rxSubscriber.ts","../../rxjs/src/internal/Subscriber.ts","../../rxjs/src/internal/util/canReportError.ts","../../rxjs/src/internal/util/toSubscriber.ts","../../rxjs/src/internal/symbol/observable.ts","../../rxjs/src/internal/util/identity.ts","../../rxjs/src/internal/util/pipe.ts","../../rxjs/src/internal/Observable.ts","../../rxjs/src/internal/util/ObjectUnsubscribedError.ts","../../rxjs/src/internal/SubjectSubscription.ts","../../rxjs/src/internal/Subject.ts","../../rxjs/src/internal/scheduler/Action.ts","../../rxjs/src/internal/scheduler/AsyncAction.ts","../../rxjs/src/internal/Scheduler.ts","../../rxjs/src/internal/scheduler/AsyncScheduler.ts","../../rxjs/src/internal/util/isScheduler.ts","../../rxjs/src/internal/scheduler/async.ts","../../rxjs/src/internal/util/isNumeric.ts","../../rxjs/src/internal/observable/timer.ts","../../../src/globals.ts","../../../src/services/completer-base-data.ts","../../../src/services/local-data.ts","../../../src/services/remote-data.ts","../../../src/services/local-data-factory.ts","../../../src/services/remote-data-factory.ts","../../../src/services/completer-service.ts","../../../src/directives/ctr-completer.ts","../../../src/directives/ctr-dropdown.ts","../../../src/directives/ctr-input.ts","../../../src/directives/ctr-list.ts","../../../src/directives/ctr-row.ts","../../../src/components/completer-list-item-cmp.ts","../../../src/components/completer-cmp.ts","../../../src/modules/ng2-completer.module.ts"],"names":["tslib_1.__extends","EventEmitter","catchError","map","Injectable","HttpClient","Output","Directive","HostListener","Host","ElementRef","NgZone","take","Input","NgModel","TemplateRef","ViewContainerRef","ChangeDetectorRef","Renderer2","Component","NG_VALUE_ACCESSOR","forwardRef","FormControl","ViewChild","NgModule","CommonModule","FormsModule"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","export function isFunction(x: any): x is Function {\n  return typeof x === 'function';\n}\n","let _enable_super_gross_mode_that_will_cause_bad_things = false;\n\n/**\n * The global configuration object for RxJS, used to configure things\n * like what Promise contructor should used to create Promises\n */\nexport const config = {\n  /**\n   * The promise constructor used by default for methods such as\n   * {@link toPromise} and {@link forEach}\n   */\n  Promise: undefined as PromiseConstructorLike,\n\n  /**\n   * If true, turns on synchronous error rethrowing, which is a deprecated behavior\n   * in v6 and higher. This behavior enables bad patterns like wrapping a subscribe\n   * call in a try/catch block. It also enables producer interference, a nasty bug\n   * where a multicast can be broken for all observers by a downstream consumer with\n   * an unhandled error. DO NOT USE THIS FLAG UNLESS IT'S NEEDED TO BY TIME\n   * FOR MIGRATION REASONS.\n   */\n  set useDeprecatedSynchronousErrorHandling(value: boolean) {\n    if (value) {\n      const error = new Error();\n      console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \\n' + error.stack);\n    } else if (_enable_super_gross_mode_that_will_cause_bad_things) {\n      console.log('RxJS: Back to a better error behavior. Thank you. <3');\n    }\n    _enable_super_gross_mode_that_will_cause_bad_things = value;\n  },\n\n  get useDeprecatedSynchronousErrorHandling() {\n    return _enable_super_gross_mode_that_will_cause_bad_things;\n  },\n};\n","/**\n * Throws an error on another job so that it's picked up by the runtime's\n * uncaught error handling mechanism.\n * @param err the error to throw\n */\nexport function hostReportError(err: any) {\n  setTimeout(() => { throw err; }, 0);\n}","import { Observer } from './types';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\nexport const empty: Observer<any> = {\n  closed: true,\n  next(value: any): void { /* noop */},\n  error(err: any): void {\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      throw err;\n    } else {\n      hostReportError(err);\n    }\n  },\n  complete(): void { /*noop*/ }\n};\n","export const isArray = (() => Array.isArray || (<T>(x: any): x is T[] => x && typeof x.length === 'number'))();\n","export function isObject(x: any): x is Object {\n  return x !== null && typeof x === 'object';\n}\n","export interface UnsubscriptionError extends Error {\n  readonly errors: any[];\n}\n\nexport interface UnsubscriptionErrorCtor {\n  new(errors: any[]): UnsubscriptionError;\n}\n\nconst UnsubscriptionErrorImpl = (() => {\n  function UnsubscriptionErrorImpl(this: any, errors: any[]) {\n    Error.call(this);\n    this.message = errors ?\n      `${errors.length} errors occurred during unsubscription:\n${errors.map((err, i) => `${i + 1}) ${err.toString()}`).join('\\n  ')}` : '';\n    this.name = 'UnsubscriptionError';\n    this.errors = errors;\n    return this;\n  }\n\n  UnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);\n\n  return UnsubscriptionErrorImpl;\n})();\n\n/**\n * An error thrown when one or more errors have occurred during the\n * `unsubscribe` of a {@link Subscription}.\n */\nexport const UnsubscriptionError: UnsubscriptionErrorCtor = UnsubscriptionErrorImpl as any;","import { isArray } from './util/isArray';\nimport { isObject } from './util/isObject';\nimport { isFunction } from './util/isFunction';\nimport { UnsubscriptionError } from './util/UnsubscriptionError';\nimport { SubscriptionLike, TeardownLogic } from './types';\n\n/**\n * Represents a disposable resource, such as the execution of an Observable. A\n * Subscription has one important method, `unsubscribe`, that takes no argument\n * and just disposes the resource held by the subscription.\n *\n * Additionally, subscriptions may be grouped together through the `add()`\n * method, which will attach a child Subscription to the current Subscription.\n * When a Subscription is unsubscribed, all its children (and its grandchildren)\n * will be unsubscribed as well.\n *\n * @class Subscription\n */\nexport class Subscription implements SubscriptionLike {\n  /** @nocollapse */\n  public static EMPTY: Subscription = (function(empty: any) {\n    empty.closed = true;\n    return empty;\n  }(new Subscription()));\n\n  /**\n   * A flag to indicate whether this Subscription has already been unsubscribed.\n   * @type {boolean}\n   */\n  public closed: boolean = false;\n\n  /** @internal */\n  protected _parentOrParents: Subscription | Subscription[] = null;\n  /** @internal */\n  private _subscriptions: SubscriptionLike[] = null;\n\n  /**\n   * @param {function(): void} [unsubscribe] A function describing how to\n   * perform the disposal of resources when the `unsubscribe` method is called.\n   */\n  constructor(unsubscribe?: () => void) {\n    if (unsubscribe) {\n      (<any> this)._unsubscribe = unsubscribe;\n    }\n  }\n\n  /**\n   * Disposes the resources held by the subscription. May, for instance, cancel\n   * an ongoing Observable execution or cancel any other type of work that\n   * started when the Subscription was created.\n   * @return {void}\n   */\n  unsubscribe(): void {\n    let errors: any[];\n\n    if (this.closed) {\n      return;\n    }\n\n    let { _parentOrParents, _unsubscribe, _subscriptions } = (<any> this);\n\n    this.closed = true;\n    this._parentOrParents = null;\n    // null out _subscriptions first so any child subscriptions that attempt\n    // to remove themselves from this subscription will noop\n    this._subscriptions = null;\n\n    if (_parentOrParents instanceof Subscription) {\n      _parentOrParents.remove(this);\n    } else if (_parentOrParents !== null) {\n      for (let index = 0; index < _parentOrParents.length; ++index) {\n        const parent = _parentOrParents[index];\n        parent.remove(this);\n      }\n    }\n\n    if (isFunction(_unsubscribe)) {\n      try {\n        _unsubscribe.call(this);\n      } catch (e) {\n        errors = e instanceof UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];\n      }\n    }\n\n    if (isArray(_subscriptions)) {\n      let index = -1;\n      let len = _subscriptions.length;\n\n      while (++index < len) {\n        const sub = _subscriptions[index];\n        if (isObject(sub)) {\n          try {\n            sub.unsubscribe();\n          } catch (e) {\n            errors = errors || [];\n            if (e instanceof UnsubscriptionError) {\n              errors = errors.concat(flattenUnsubscriptionErrors(e.errors));\n            } else {\n              errors.push(e);\n            }\n          }\n        }\n      }\n    }\n\n    if (errors) {\n      throw new UnsubscriptionError(errors);\n    }\n  }\n\n  /**\n   * Adds a tear down to be called during the unsubscribe() of this\n   * Subscription. Can also be used to add a child subscription.\n   *\n   * If the tear down being added is a subscription that is already\n   * unsubscribed, is the same reference `add` is being called on, or is\n   * `Subscription.EMPTY`, it will not be added.\n   *\n   * If this subscription is already in an `closed` state, the passed\n   * tear down logic will be executed immediately.\n   *\n   * When a parent subscription is unsubscribed, any child subscriptions that were added to it are also unsubscribed.\n   *\n   * @param {TeardownLogic} teardown The additional logic to execute on\n   * teardown.\n   * @return {Subscription} Returns the Subscription used or created to be\n   * added to the inner subscriptions list. This Subscription can be used with\n   * `remove()` to remove the passed teardown logic from the inner subscriptions\n   * list.\n   */\n  add(teardown: TeardownLogic): Subscription {\n    let subscription = (<Subscription>teardown);\n\n    if (!(<any>teardown)) {\n      return Subscription.EMPTY;\n    }\n\n    switch (typeof teardown) {\n      case 'function':\n        subscription = new Subscription(<(() => void)>teardown);\n      case 'object':\n        if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {\n          // This also covers the case where `subscription` is `Subscription.EMPTY`, which is always in `closed` state.\n          return subscription;\n        } else if (this.closed) {\n          subscription.unsubscribe();\n          return subscription;\n        } else if (!(subscription instanceof Subscription)) {\n          const tmp = subscription;\n          subscription = new Subscription();\n          subscription._subscriptions = [tmp];\n        }\n        break;\n      default: {\n        throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');\n      }\n    }\n\n    // Add `this` as parent of `subscription` if that's not already the case.\n    let { _parentOrParents } = subscription;\n    if (_parentOrParents === null) {\n      // If we don't have a parent, then set `subscription._parents` to\n      // the `this`, which is the common case that we optimize for.\n      subscription._parentOrParents = this;\n    } else if (_parentOrParents instanceof Subscription) {\n      if (_parentOrParents === this) {\n        // The `subscription` already has `this` as a parent.\n        return subscription;\n      }\n      // If there's already one parent, but not multiple, allocate an\n      // Array to store the rest of the parent Subscriptions.\n      subscription._parentOrParents = [_parentOrParents, this];\n    } else if (_parentOrParents.indexOf(this) === -1) {\n      // Only add `this` to the _parentOrParents list if it's not already there.\n      _parentOrParents.push(this);\n    } else {\n      // The `subscription` already has `this` as a parent.\n      return subscription;\n    }\n\n    // Optimize for the common case when adding the first subscription.\n    const subscriptions = this._subscriptions;\n    if (subscriptions === null) {\n      this._subscriptions = [subscription];\n    } else {\n      subscriptions.push(subscription);\n    }\n\n    return subscription;\n  }\n\n  /**\n   * Removes a Subscription from the internal list of subscriptions that will\n   * unsubscribe during the unsubscribe process of this Subscription.\n   * @param {Subscription} subscription The subscription to remove.\n   * @return {void}\n   */\n  remove(subscription: Subscription): void {\n    const subscriptions = this._subscriptions;\n    if (subscriptions) {\n      const subscriptionIndex = subscriptions.indexOf(subscription);\n      if (subscriptionIndex !== -1) {\n        subscriptions.splice(subscriptionIndex, 1);\n      }\n    }\n  }\n}\n\nfunction flattenUnsubscriptionErrors(errors: any[]) {\n return errors.reduce((errs, err) => errs.concat((err instanceof UnsubscriptionError) ? err.errors : err), []);\n}\n","/** @deprecated do not use, this is no longer checked by RxJS internals */\nexport const rxSubscriber = (() =>\n  typeof Symbol === 'function'\n    ? Symbol('rxSubscriber')\n    : '@@rxSubscriber_' + Math.random())();\n\n/**\n * @deprecated use rxSubscriber instead\n */\nexport const $$rxSubscriber = rxSubscriber;\n","import { isFunction } from './util/isFunction';\nimport { empty as emptyObserver } from './Observer';\nimport { Observer, PartialObserver, TeardownLogic } from './types';\nimport { Subscription } from './Subscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\nimport { config } from './config';\nimport { hostReportError } from './util/hostReportError';\n\n/**\n * Implements the {@link Observer} interface and extends the\n * {@link Subscription} class. While the {@link Observer} is the public API for\n * consuming the values of an {@link Observable}, all Observers get converted to\n * a Subscriber, in order to provide Subscription-like capabilities such as\n * `unsubscribe`. Subscriber is a common type in RxJS, and crucial for\n * implementing operators, but it is rarely used as a public API.\n *\n * @class Subscriber<T>\n */\nexport class Subscriber<T> extends Subscription implements Observer<T> {\n\n  [rxSubscriberSymbol]() { return this; }\n\n  /**\n   * A static factory for a Subscriber, given a (potentially partial) definition\n   * of an Observer.\n   * @param {function(x: ?T): void} [next] The `next` callback of an Observer.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   * @return {Subscriber<T>} A Subscriber wrapping the (partially defined)\n   * Observer represented by the given arguments.\n   * @nocollapse\n   */\n  static create<T>(next?: (x?: T) => void,\n                   error?: (e?: any) => void,\n                   complete?: () => void): Subscriber<T> {\n    const subscriber = new Subscriber(next, error, complete);\n    subscriber.syncErrorThrowable = false;\n    return subscriber;\n  }\n\n  /** @internal */ syncErrorValue: any = null;\n  /** @internal */ syncErrorThrown: boolean = false;\n  /** @internal */ syncErrorThrowable: boolean = false;\n\n  protected isStopped: boolean = false;\n  protected destination: PartialObserver<any> | Subscriber<any>; // this `any` is the escape hatch to erase extra type param (e.g. R)\n\n  /**\n   * @param {Observer|function(value: T): void} [destinationOrNext] A partially\n   * defined Observer or a `next` callback function.\n   * @param {function(e: ?any): void} [error] The `error` callback of an\n   * Observer.\n   * @param {function(): void} [complete] The `complete` callback of an\n   * Observer.\n   */\n  constructor(destinationOrNext?: PartialObserver<any> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    switch (arguments.length) {\n      case 0:\n        this.destination = emptyObserver;\n        break;\n      case 1:\n        if (!destinationOrNext) {\n          this.destination = emptyObserver;\n          break;\n        }\n        if (typeof destinationOrNext === 'object') {\n          if (destinationOrNext instanceof Subscriber) {\n            this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;\n            this.destination = destinationOrNext;\n            destinationOrNext.add(this);\n          } else {\n            this.syncErrorThrowable = true;\n            this.destination = new SafeSubscriber<T>(this, <PartialObserver<any>> destinationOrNext);\n          }\n          break;\n        }\n      default:\n        this.syncErrorThrowable = true;\n        this.destination = new SafeSubscriber<T>(this, <((value: T) => void)> destinationOrNext, error, complete);\n        break;\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `next` from\n   * the Observable, with a value. The Observable may call this method 0 or more\n   * times.\n   * @param {T} [value] The `next` value.\n   * @return {void}\n   */\n  next(value?: T): void {\n    if (!this.isStopped) {\n      this._next(value);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive notifications of type `error` from\n   * the Observable, with an attached `Error`. Notifies the Observer that\n   * the Observable has experienced an error condition.\n   * @param {any} [err] The `error` exception.\n   * @return {void}\n   */\n  error(err?: any): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._error(err);\n    }\n  }\n\n  /**\n   * The {@link Observer} callback to receive a valueless notification of type\n   * `complete` from the Observable. Notifies the Observer that the Observable\n   * has finished sending push-based notifications.\n   * @return {void}\n   */\n  complete(): void {\n    if (!this.isStopped) {\n      this.isStopped = true;\n      this._complete();\n    }\n  }\n\n  unsubscribe(): void {\n    if (this.closed) {\n      return;\n    }\n    this.isStopped = true;\n    super.unsubscribe();\n  }\n\n  protected _next(value: T): void {\n    this.destination.next(value);\n  }\n\n  protected _error(err: any): void {\n    this.destination.error(err);\n    this.unsubscribe();\n  }\n\n  protected _complete(): void {\n    this.destination.complete();\n    this.unsubscribe();\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribeAndRecycle(): Subscriber<T> {\n    const {  _parentOrParents } = this;\n    this._parentOrParents = null;\n    this.unsubscribe();\n    this.closed = false;\n    this.isStopped = false;\n    this._parentOrParents = _parentOrParents;\n    return this;\n  }\n}\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SafeSubscriber<T> extends Subscriber<T> {\n\n  private _context: any;\n\n  constructor(private _parentSubscriber: Subscriber<T>,\n              observerOrNext?: PartialObserver<T> | ((value: T) => void),\n              error?: (e?: any) => void,\n              complete?: () => void) {\n    super();\n\n    let next: ((value: T) => void);\n    let context: any = this;\n\n    if (isFunction(observerOrNext)) {\n      next = (<((value: T) => void)> observerOrNext);\n    } else if (observerOrNext) {\n      next = (<PartialObserver<T>> observerOrNext).next;\n      error = (<PartialObserver<T>> observerOrNext).error;\n      complete = (<PartialObserver<T>> observerOrNext).complete;\n      if (observerOrNext !== emptyObserver) {\n        context = Object.create(observerOrNext);\n        if (isFunction(context.unsubscribe)) {\n          this.add(<() => void> context.unsubscribe.bind(context));\n        }\n        context.unsubscribe = this.unsubscribe.bind(this);\n      }\n    }\n\n    this._context = context;\n    this._next = next;\n    this._error = error;\n    this._complete = complete;\n  }\n\n  next(value?: T): void {\n    if (!this.isStopped && this._next) {\n      const { _parentSubscriber } = this;\n      if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n        this.__tryOrUnsub(this._next, value);\n      } else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  error(err?: any): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      const { useDeprecatedSynchronousErrorHandling } = config;\n      if (this._error) {\n        if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(this._error, err);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, this._error, err);\n          this.unsubscribe();\n        }\n      } else if (!_parentSubscriber.syncErrorThrowable) {\n        this.unsubscribe();\n        if (useDeprecatedSynchronousErrorHandling) {\n          throw err;\n        }\n        hostReportError(err);\n      } else {\n        if (useDeprecatedSynchronousErrorHandling) {\n          _parentSubscriber.syncErrorValue = err;\n          _parentSubscriber.syncErrorThrown = true;\n        } else {\n          hostReportError(err);\n        }\n        this.unsubscribe();\n      }\n    }\n  }\n\n  complete(): void {\n    if (!this.isStopped) {\n      const { _parentSubscriber } = this;\n      if (this._complete) {\n        const wrappedComplete = () => this._complete.call(this._context);\n\n        if (!config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {\n          this.__tryOrUnsub(wrappedComplete);\n          this.unsubscribe();\n        } else {\n          this.__tryOrSetError(_parentSubscriber, wrappedComplete);\n          this.unsubscribe();\n        }\n      } else {\n        this.unsubscribe();\n      }\n    }\n  }\n\n  private __tryOrUnsub(fn: Function, value?: any): void {\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      this.unsubscribe();\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        throw err;\n      } else {\n        hostReportError(err);\n      }\n    }\n  }\n\n  private __tryOrSetError(parent: Subscriber<T>, fn: Function, value?: any): boolean {\n    if (!config.useDeprecatedSynchronousErrorHandling) {\n      throw new Error('bad call');\n    }\n    try {\n      fn.call(this._context, value);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        parent.syncErrorValue = err;\n        parent.syncErrorThrown = true;\n        return true;\n      } else {\n        hostReportError(err);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _unsubscribe(): void {\n    const { _parentSubscriber } = this;\n    this._context = null;\n    this._parentSubscriber = null;\n    _parentSubscriber.unsubscribe();\n  }\n}\n","import { Subscriber } from '../Subscriber';\nimport { Subject } from '../Subject';\n\n/**\n * Determines whether the ErrorObserver is closed or stopped or has a\n * destination that is closed or stopped - in which case errors will\n * need to be reported via a different mechanism.\n * @param observer the observer\n */\nexport function canReportError(observer: Subscriber<any> | Subject<any>): boolean {\n  while (observer) {\n    const { closed, destination, isStopped } = observer as any;\n    if (closed || isStopped) {\n      return false;\n    } else if (destination && destination instanceof Subscriber) {\n      observer = destination;\n    } else {\n      observer = null;\n    }\n  }\n  return true;\n}\n","import { Subscriber } from '../Subscriber';\nimport { rxSubscriber as rxSubscriberSymbol } from '../symbol/rxSubscriber';\nimport { empty as emptyObserver } from '../Observer';\nimport { PartialObserver } from '../types';\n\nexport function toSubscriber<T>(\n  nextOrObserver?: PartialObserver<T> | ((value: T) => void),\n  error?: (error: any) => void,\n  complete?: () => void): Subscriber<T> {\n\n  if (nextOrObserver) {\n    if (nextOrObserver instanceof Subscriber) {\n      return (<Subscriber<T>> nextOrObserver);\n    }\n\n    if (nextOrObserver[rxSubscriberSymbol]) {\n      return nextOrObserver[rxSubscriberSymbol]();\n    }\n  }\n\n  if (!nextOrObserver && !error && !complete) {\n    return new Subscriber(emptyObserver);\n  }\n\n  return new Subscriber(nextOrObserver, error, complete);\n}\n","/** Symbol.observable addition */\n/* Note: This will add Symbol.observable globally for all TypeScript users,\n  however, we are no longer polyfilling Symbol.observable */\ndeclare global {\n  interface SymbolConstructor {\n    readonly observable: symbol;\n  }\n}\n\n/** Symbol.observable or a string \"@@observable\". Used for interop */\nexport const observable = (() => typeof Symbol === 'function' && Symbol.observable || '@@observable')();\n","export function identity<T>(x: T): T {\n  return x;\n}\n","import { noop } from './noop';\nimport { identity } from './identity';\nimport { UnaryFunction } from '../types';\n\n/* tslint:disable:max-line-length */\nexport function pipe<T>(): UnaryFunction<T, T>;\nexport function pipe<T, A>(fn1: UnaryFunction<T, A>): UnaryFunction<T, A>;\nexport function pipe<T, A, B>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>): UnaryFunction<T, B>;\nexport function pipe<T, A, B, C>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>): UnaryFunction<T, C>;\nexport function pipe<T, A, B, C, D>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>): UnaryFunction<T, D>;\nexport function pipe<T, A, B, C, D, E>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>): UnaryFunction<T, E>;\nexport function pipe<T, A, B, C, D, E, F>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>): UnaryFunction<T, F>;\nexport function pipe<T, A, B, C, D, E, F, G>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>): UnaryFunction<T, G>;\nexport function pipe<T, A, B, C, D, E, F, G, H>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>): UnaryFunction<T, H>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>): UnaryFunction<T, I>;\nexport function pipe<T, A, B, C, D, E, F, G, H, I>(fn1: UnaryFunction<T, A>, fn2: UnaryFunction<A, B>, fn3: UnaryFunction<B, C>, fn4: UnaryFunction<C, D>, fn5: UnaryFunction<D, E>, fn6: UnaryFunction<E, F>, fn7: UnaryFunction<F, G>, fn8: UnaryFunction<G, H>, fn9: UnaryFunction<H, I>, ...fns: UnaryFunction<any, any>[]): UnaryFunction<T, {}>;\n/* tslint:enable:max-line-length */\n\nexport function pipe(...fns: Array<UnaryFunction<any, any>>): UnaryFunction<any, any> {\n  return pipeFromArray(fns);\n}\n\n/** @internal */\nexport function pipeFromArray<T, R>(fns: Array<UnaryFunction<T, R>>): UnaryFunction<T, R> {\n  if (fns.length === 0) {\n    return identity as UnaryFunction<any, any>;\n  }\n\n  if (fns.length === 1) {\n    return fns[0];\n  }\n\n  return function piped(input: T): R {\n    return fns.reduce((prev: any, fn: UnaryFunction<T, R>) => fn(prev), input as any);\n  };\n}\n","import { Operator } from './Operator';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { TeardownLogic, OperatorFunction, PartialObserver, Subscribable } from './types';\nimport { canReportError } from './util/canReportError';\nimport { toSubscriber } from './util/toSubscriber';\nimport { iif } from './observable/iif';\nimport { throwError } from './observable/throwError';\nimport { observable as Symbol_observable } from './symbol/observable';\nimport { pipeFromArray } from './util/pipe';\nimport { config } from './config';\n\n/**\n * A representation of any set of values over any amount of time. This is the most basic building block\n * of RxJS.\n *\n * @class Observable<T>\n */\nexport class Observable<T> implements Subscribable<T> {\n\n  /** Internal implementation detail, do not use directly. */\n  public _isScalar: boolean = false;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  source: Observable<any>;\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  operator: Operator<any, T>;\n\n  /**\n   * @constructor\n   * @param {Function} subscribe the function that is called when the Observable is\n   * initially subscribed to. This function is given a Subscriber, to which new values\n   * can be `next`ed, or an `error` method can be called to raise an error, or\n   * `complete` can be called to notify of a successful completion.\n   */\n  constructor(subscribe?: (this: Observable<T>, subscriber: Subscriber<T>) => TeardownLogic) {\n    if (subscribe) {\n      this._subscribe = subscribe;\n    }\n  }\n\n  // HACK: Since TypeScript inherits static properties too, we have to\n  // fight against TypeScript here so Subject can have a different static create signature\n  /**\n   * Creates a new cold Observable by calling the Observable constructor\n   * @static true\n   * @owner Observable\n   * @method create\n   * @param {Function} subscribe? the subscriber function to be passed to the Observable constructor\n   * @return {Observable} a new cold observable\n   * @nocollapse\n   * @deprecated use new Observable() instead\n   */\n  static create: Function = <T>(subscribe?: (subscriber: Subscriber<T>) => TeardownLogic) => {\n    return new Observable<T>(subscribe);\n  }\n\n  /**\n   * Creates a new Observable, with this Observable as the source, and the passed\n   * operator defined as the new observable's operator.\n   * @method lift\n   * @param {Operator} operator the operator defining the operation to take on the observable\n   * @return {Observable} a new observable with the Operator applied\n   */\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const observable = new Observable<R>();\n    observable.source = this;\n    observable.operator = operator;\n    return observable;\n  }\n\n  subscribe(observer?: PartialObserver<T>): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: null | undefined, error: null | undefined, complete: () => void): Subscription;\n  /** @deprecated Use an observer instead of an error callback */\n  subscribe(next: null | undefined, error: (error: any) => void, complete?: () => void): Subscription;\n  /** @deprecated Use an observer instead of a complete callback */\n  subscribe(next: (value: T) => void, error: null | undefined, complete: () => void): Subscription;\n  subscribe(next?: (value: T) => void, error?: (error: any) => void, complete?: () => void): Subscription;\n  /**\n   * Invokes an execution of an Observable and registers Observer handlers for notifications it will emit.\n   *\n   * <span class=\"informal\">Use it when you have all these Observables, but still nothing is happening.</span>\n   *\n   * `subscribe` is not a regular operator, but a method that calls Observable's internal `subscribe` function. It\n   * might be for example a function that you passed to Observable's constructor, but most of the time it is\n   * a library implementation, which defines what will be emitted by an Observable, and when it be will emitted. This means\n   * that calling `subscribe` is actually the moment when Observable starts its work, not when it is created, as it is often\n   * the thought.\n   *\n   * Apart from starting the execution of an Observable, this method allows you to listen for values\n   * that an Observable emits, as well as for when it completes or errors. You can achieve this in two\n   * of the following ways.\n   *\n   * The first way is creating an object that implements {@link Observer} interface. It should have methods\n   * defined by that interface, but note that it should be just a regular JavaScript object, which you can create\n   * yourself in any way you want (ES6 class, classic function constructor, object literal etc.). In particular do\n   * not attempt to use any RxJS implementation details to create Observers - you don't need them. Remember also\n   * that your object does not have to implement all methods. If you find yourself creating a method that doesn't\n   * do anything, you can simply omit it. Note however, if the `error` method is not provided, all errors will\n   * be left uncaught.\n   *\n   * The second way is to give up on Observer object altogether and simply provide callback functions in place of its methods.\n   * This means you can provide three functions as arguments to `subscribe`, where the first function is equivalent\n   * of a `next` method, the second of an `error` method and the third of a `complete` method. Just as in case of Observer,\n   * if you do not need to listen for something, you can omit a function, preferably by passing `undefined` or `null`,\n   * since `subscribe` recognizes these functions by where they were placed in function call. When it comes\n   * to `error` function, just as before, if not provided, errors emitted by an Observable will be thrown.\n   *\n   * Whichever style of calling `subscribe` you use, in both cases it returns a Subscription object.\n   * This object allows you to call `unsubscribe` on it, which in turn will stop the work that an Observable does and will clean\n   * up all resources that an Observable used. Note that cancelling a subscription will not call `complete` callback\n   * provided to `subscribe` function, which is reserved for a regular completion signal that comes from an Observable.\n   *\n   * Remember that callbacks provided to `subscribe` are not guaranteed to be called asynchronously.\n   * It is an Observable itself that decides when these functions will be called. For example {@link of}\n   * by default emits all its values synchronously. Always check documentation for how given Observable\n   * will behave when subscribed and if its default behavior can be modified with a `scheduler`.\n   *\n   * ## Example\n   * ### Subscribe with an Observer\n   * ```ts\n   * import { of } from 'rxjs';\n   *\n   * const sumObserver = {\n   *   sum: 0,\n   *   next(value) {\n   *     console.log('Adding: ' + value);\n   *     this.sum = this.sum + value;\n   *   },\n   *   error() {\n   *     // We actually could just remove this method,\n   *     // since we do not really care about errors right now.\n   *   },\n   *   complete() {\n   *     console.log('Sum equals: ' + this.sum);\n   *   }\n   * };\n   *\n   * of(1, 2, 3) // Synchronously emits 1, 2, 3 and then completes.\n   *   .subscribe(sumObserver);\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Subscribe with functions\n   * ```ts\n   * import { of } from 'rxjs'\n   *\n   * let sum = 0;\n   *\n   * of(1, 2, 3).subscribe(\n   *   value => {\n   *     console.log('Adding: ' + value);\n   *     sum = sum + value;\n   *   },\n   *   undefined,\n   *   () => console.log('Sum equals: ' + sum)\n   * );\n   *\n   * // Logs:\n   * // \"Adding: 1\"\n   * // \"Adding: 2\"\n   * // \"Adding: 3\"\n   * // \"Sum equals: 6\"\n   * ```\n   *\n   * ### Cancel a subscription\n   * ```ts\n   * import { interval } from 'rxjs';\n   *\n   * const subscription = interval(1000).subscribe(\n   *   num => console.log(num),\n   *   undefined,\n   *   () => {\n   *     // Will not be called, even when cancelling subscription.\n   *     console.log('completed!');\n   *   }\n   * );\n   *\n   * setTimeout(() => {\n   *   subscription.unsubscribe();\n   *   console.log('unsubscribed!');\n   * }, 2500);\n   *\n   * // Logs:\n   * // 0 after 1s\n   * // 1 after 2s\n   * // \"unsubscribed!\" after 2.5s\n   * ```\n   *\n   * @param {Observer|Function} observerOrNext (optional) Either an observer with methods to be called,\n   *  or the first of three possible handlers, which is the handler for each value emitted from the subscribed\n   *  Observable.\n   * @param {Function} error (optional) A handler for a terminal event resulting from an error. If no error handler is provided,\n   *  the error will be thrown as unhandled.\n   * @param {Function} complete (optional) A handler for a terminal event resulting from successful completion.\n   * @return {ISubscription} a subscription reference to the registered handlers\n   * @method subscribe\n   */\n  subscribe(observerOrNext?: PartialObserver<T> | ((value: T) => void),\n            error?: (error: any) => void,\n            complete?: () => void): Subscription {\n\n    const { operator } = this;\n    const sink = toSubscriber(observerOrNext, error, complete);\n\n    if (operator) {\n      sink.add(operator.call(sink, this.source));\n    } else {\n      sink.add(\n        this.source || (config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?\n        this._subscribe(sink) :\n        this._trySubscribe(sink)\n      );\n    }\n\n    if (config.useDeprecatedSynchronousErrorHandling) {\n      if (sink.syncErrorThrowable) {\n        sink.syncErrorThrowable = false;\n        if (sink.syncErrorThrown) {\n          throw sink.syncErrorValue;\n        }\n      }\n    }\n\n    return sink;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(sink: Subscriber<T>): TeardownLogic {\n    try {\n      return this._subscribe(sink);\n    } catch (err) {\n      if (config.useDeprecatedSynchronousErrorHandling) {\n        sink.syncErrorThrown = true;\n        sink.syncErrorValue = err;\n      }\n      if (canReportError(sink)) {\n        sink.error(err);\n      } else {\n        console.warn(err);\n      }\n    }\n  }\n\n  /**\n   * @method forEach\n   * @param {Function} next a handler for each value emitted by the observable\n   * @param {PromiseConstructor} [promiseCtor] a constructor function used to instantiate the Promise\n   * @return {Promise} a promise that either resolves on observable completion or\n   *  rejects with the handled error\n   */\n  forEach(next: (value: T) => void, promiseCtor?: PromiseConstructorLike): Promise<void> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor<void>((resolve, reject) => {\n      // Must be declared in a separate statement to avoid a ReferenceError when\n      // accessing subscription below in the closure due to Temporal Dead Zone.\n      let subscription: Subscription;\n      subscription = this.subscribe((value) => {\n        try {\n          next(value);\n        } catch (err) {\n          reject(err);\n          if (subscription) {\n            subscription.unsubscribe();\n          }\n        }\n      }, reject, resolve);\n    }) as Promise<void>;\n  }\n\n  /** @internal This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<any>): TeardownLogic {\n    const { source } = this;\n    return source && source.subscribe(subscriber);\n  }\n\n  // `if` and `throw` are special snow flakes, the compiler sees them as reserved words. Deprecated in\n  // favor of iif and throwError functions.\n  /**\n   * @nocollapse\n   * @deprecated In favor of iif creation function: import { iif } from 'rxjs';\n   */\n  static if: typeof iif;\n  /**\n   * @nocollapse\n   * @deprecated In favor of throwError creation function: import { throwError } from 'rxjs';\n   */\n  static throw: typeof throwError;\n\n  /**\n   * An interop point defined by the es7-observable spec https://github.com/zenparsing/es-observable\n   * @method Symbol.observable\n   * @return {Observable} this instance of the observable\n   */\n  [Symbol_observable]() {\n    return this;\n  }\n\n  /* tslint:disable:max-line-length */\n  pipe(): Observable<T>;\n  pipe<A>(op1: OperatorFunction<T, A>): Observable<A>;\n  pipe<A, B>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>): Observable<B>;\n  pipe<A, B, C>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>): Observable<C>;\n  pipe<A, B, C, D>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>): Observable<D>;\n  pipe<A, B, C, D, E>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>): Observable<E>;\n  pipe<A, B, C, D, E, F>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>): Observable<F>;\n  pipe<A, B, C, D, E, F, G>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>): Observable<G>;\n  pipe<A, B, C, D, E, F, G, H>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>): Observable<H>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>): Observable<I>;\n  pipe<A, B, C, D, E, F, G, H, I>(op1: OperatorFunction<T, A>, op2: OperatorFunction<A, B>, op3: OperatorFunction<B, C>, op4: OperatorFunction<C, D>, op5: OperatorFunction<D, E>, op6: OperatorFunction<E, F>, op7: OperatorFunction<F, G>, op8: OperatorFunction<G, H>, op9: OperatorFunction<H, I>, ...operations: OperatorFunction<any, any>[]): Observable<{}>;\n  /* tslint:enable:max-line-length */\n\n  /**\n   * Used to stitch together functional operators into a chain.\n   * @method pipe\n   * @return {Observable} the Observable result of all of the operators having\n   * been called in the order they were passed in.\n   *\n   * ### Example\n   * ```ts\n   * import { interval } from 'rxjs';\n   * import { map, filter, scan } from 'rxjs/operators';\n   *\n   * interval(1000)\n   *   .pipe(\n   *     filter(x => x % 2 === 0),\n   *     map(x => x + x),\n   *     scan((acc, x) => acc + x)\n   *   )\n   *   .subscribe(x => console.log(x))\n   * ```\n   */\n  pipe(...operations: OperatorFunction<any, any>[]): Observable<any> {\n    if (operations.length === 0) {\n      return this as any;\n    }\n\n    return pipeFromArray(operations)(this);\n  }\n\n  /* tslint:disable:max-line-length */\n  toPromise<T>(this: Observable<T>): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: typeof Promise): Promise<T>;\n  toPromise<T>(this: Observable<T>, PromiseCtor: PromiseConstructorLike): Promise<T>;\n  /* tslint:enable:max-line-length */\n\n  toPromise(promiseCtor?: PromiseConstructorLike): Promise<T> {\n    promiseCtor = getPromiseCtor(promiseCtor);\n\n    return new promiseCtor((resolve, reject) => {\n      let value: any;\n      this.subscribe((x: T) => value = x, (err: any) => reject(err), () => resolve(value));\n    }) as Promise<T>;\n  }\n}\n\n/**\n * Decides between a passed promise constructor from consuming code,\n * A default configured promise constructor, and the native promise\n * constructor and returns it. If nothing can be found, it will throw\n * an error.\n * @param promiseCtor The optional promise constructor to passed by consuming code\n */\nfunction getPromiseCtor(promiseCtor: PromiseConstructorLike | undefined) {\n  if (!promiseCtor) {\n    promiseCtor = config.Promise || Promise;\n  }\n\n  if (!promiseCtor) {\n    throw new Error('no Promise impl found');\n  }\n\n  return promiseCtor;\n}\n","export interface ObjectUnsubscribedError extends Error {\n}\n\nexport interface ObjectUnsubscribedErrorCtor {\n  new(): ObjectUnsubscribedError;\n}\n\nconst ObjectUnsubscribedErrorImpl = (() => {\n  function ObjectUnsubscribedErrorImpl(this: any) {\n    Error.call(this);\n    this.message = 'object unsubscribed';\n    this.name = 'ObjectUnsubscribedError';\n    return this;\n  }\n\n  ObjectUnsubscribedErrorImpl.prototype = Object.create(Error.prototype);\n\n  return ObjectUnsubscribedErrorImpl;\n})();\n\n/**\n * An error thrown when an action is invalid because the object has been\n * unsubscribed.\n *\n * @see {@link Subject}\n * @see {@link BehaviorSubject}\n *\n * @class ObjectUnsubscribedError\n */\nexport const ObjectUnsubscribedError: ObjectUnsubscribedErrorCtor = ObjectUnsubscribedErrorImpl as any;","import { Subject } from './Subject';\nimport { Observer } from './types';\nimport { Subscription } from './Subscription';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class SubjectSubscription<T> extends Subscription {\n  closed: boolean = false;\n\n  constructor(public subject: Subject<T>, public subscriber: Observer<T>) {\n    super();\n  }\n\n  unsubscribe() {\n    if (this.closed) {\n      return;\n    }\n\n    this.closed = true;\n\n    const subject = this.subject;\n    const observers = subject.observers;\n\n    this.subject = null;\n\n    if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {\n      return;\n    }\n\n    const subscriberIndex = observers.indexOf(this.subscriber);\n\n    if (subscriberIndex !== -1) {\n      observers.splice(subscriberIndex, 1);\n    }\n  }\n}\n","import { Operator } from './Operator';\nimport { Observable } from './Observable';\nimport { Subscriber } from './Subscriber';\nimport { Subscription } from './Subscription';\nimport { Observer, SubscriptionLike, TeardownLogic } from './types';\nimport { ObjectUnsubscribedError } from './util/ObjectUnsubscribedError';\nimport { SubjectSubscription } from './SubjectSubscription';\nimport { rxSubscriber as rxSubscriberSymbol } from '../internal/symbol/rxSubscriber';\n\n/**\n * @class SubjectSubscriber<T>\n */\nexport class SubjectSubscriber<T> extends Subscriber<T> {\n  constructor(protected destination: Subject<T>) {\n    super(destination);\n  }\n}\n\n/**\n * A Subject is a special type of Observable that allows values to be\n * multicasted to many Observers. Subjects are like EventEmitters.\n *\n * Every Subject is an Observable and an Observer. You can subscribe to a\n * Subject, and you can call next to feed values as well as error and complete.\n *\n * @class Subject<T>\n */\nexport class Subject<T> extends Observable<T> implements SubscriptionLike {\n\n  [rxSubscriberSymbol]() {\n    return new SubjectSubscriber(this);\n  }\n\n  observers: Observer<T>[] = [];\n\n  closed = false;\n\n  isStopped = false;\n\n  hasError = false;\n\n  thrownError: any = null;\n\n  constructor() {\n    super();\n  }\n\n  /**@nocollapse\n   * @deprecated use new Subject() instead\n  */\n  static create: Function = <T>(destination: Observer<T>, source: Observable<T>): AnonymousSubject<T> => {\n    return new AnonymousSubject<T>(destination, source);\n  }\n\n  lift<R>(operator: Operator<T, R>): Observable<R> {\n    const subject = new AnonymousSubject(this, this);\n    subject.operator = <any>operator;\n    return <any>subject;\n  }\n\n  next(value?: T) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    if (!this.isStopped) {\n      const { observers } = this;\n      const len = observers.length;\n      const copy = observers.slice();\n      for (let i = 0; i < len; i++) {\n        copy[i].next(value);\n      }\n    }\n  }\n\n  error(err: any) {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.hasError = true;\n    this.thrownError = err;\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].error(err);\n    }\n    this.observers.length = 0;\n  }\n\n  complete() {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    }\n    this.isStopped = true;\n    const { observers } = this;\n    const len = observers.length;\n    const copy = observers.slice();\n    for (let i = 0; i < len; i++) {\n      copy[i].complete();\n    }\n    this.observers.length = 0;\n  }\n\n  unsubscribe() {\n    this.isStopped = true;\n    this.closed = true;\n    this.observers = null;\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _trySubscribe(subscriber: Subscriber<T>): TeardownLogic {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else {\n      return super._trySubscribe(subscriber);\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    if (this.closed) {\n      throw new ObjectUnsubscribedError();\n    } else if (this.hasError) {\n      subscriber.error(this.thrownError);\n      return Subscription.EMPTY;\n    } else if (this.isStopped) {\n      subscriber.complete();\n      return Subscription.EMPTY;\n    } else {\n      this.observers.push(subscriber);\n      return new SubjectSubscription(this, subscriber);\n    }\n  }\n\n  /**\n   * Creates a new Observable with this Subject as the source. You can do this\n   * to create customize Observer-side logic of the Subject and conceal it from\n   * code that uses the Observable.\n   * @return {Observable} Observable that the Subject casts to\n   */\n  asObservable(): Observable<T> {\n    const observable = new Observable<T>();\n    (<any>observable).source = this;\n    return observable;\n  }\n}\n\n/**\n * @class AnonymousSubject<T>\n */\nexport class AnonymousSubject<T> extends Subject<T> {\n  constructor(protected destination?: Observer<T>, source?: Observable<T>) {\n    super();\n    this.source = source;\n  }\n\n  next(value: T) {\n    const { destination } = this;\n    if (destination && destination.next) {\n      destination.next(value);\n    }\n  }\n\n  error(err: any) {\n    const { destination } = this;\n    if (destination && destination.error) {\n      this.destination.error(err);\n    }\n  }\n\n  complete() {\n    const { destination } = this;\n    if (destination && destination.complete) {\n      this.destination.complete();\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _subscribe(subscriber: Subscriber<T>): Subscription {\n    const { source } = this;\n    if (source) {\n      return this.source.subscribe(subscriber);\n    } else {\n      return Subscription.EMPTY;\n    }\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Subscription } from '../Subscription';\nimport { SchedulerAction } from '../types';\n\n/**\n * A unit of work to be executed in a `scheduler`. An action is typically\n * created from within a {@link SchedulerLike} and an RxJS user does not need to concern\n * themselves about creating and manipulating an Action.\n *\n * ```ts\n * class Action<T> extends Subscription {\n *   new (scheduler: Scheduler, work: (state?: T) => void);\n *   schedule(state?: T, delay: number = 0): Subscription;\n * }\n * ```\n *\n * @class Action<T>\n */\nexport class Action<T> extends Subscription {\n  constructor(scheduler: Scheduler, work: (this: SchedulerAction<T>, state?: T) => void) {\n    super();\n  }\n  /**\n   * Schedules this action on its parent {@link SchedulerLike} for execution. May be passed\n   * some context object, `state`. May happen at some point in the future,\n   * according to the `delay` parameter, if specified.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler.\n   * @return {void}\n   */\n  public schedule(state?: T, delay: number = 0): Subscription {\n    return this;\n  }\n}\n","import { Action } from './Action';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n * We need this JSDoc comment for affecting ESDoc.\n * @ignore\n * @extends {Ignored}\n */\nexport class AsyncAction<T> extends Action<T> {\n\n  public id: any;\n  public state: T;\n  public delay: number;\n  protected pending: boolean = false;\n\n  constructor(protected scheduler: AsyncScheduler,\n              protected work: (this: SchedulerAction<T>, state?: T) => void) {\n    super(scheduler, work);\n  }\n\n  public schedule(state?: T, delay: number = 0): Subscription {\n\n    if (this.closed) {\n      return this;\n    }\n\n    // Always replace the current state with the new state.\n    this.state = state;\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n\n    //\n    // Important implementation note:\n    //\n    // Actions only execute once by default, unless rescheduled from within the\n    // scheduled callback. This allows us to implement single and repeat\n    // actions via the same code path, without adding API surface area, as well\n    // as mimic traditional recursion but across asynchronous boundaries.\n    //\n    // However, JS runtimes and timers distinguish between intervals achieved by\n    // serial `setTimeout` calls vs. a single `setInterval` call. An interval of\n    // serial `setTimeout` calls can be individually delayed, which delays\n    // scheduling the next `setTimeout`, and so on. `setInterval` attempts to\n    // guarantee the interval callback will be invoked more precisely to the\n    // interval period, regardless of load.\n    //\n    // Therefore, we use `setInterval` to schedule single and repeat actions.\n    // If the action reschedules itself with the same delay, the interval is not\n    // canceled. If the action doesn't reschedule, or reschedules with a\n    // different delay, the interval will be canceled after scheduled callback\n    // execution.\n    //\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, delay);\n    }\n\n    // Set the pending flag indicating that this action has been scheduled, or\n    // has recursively rescheduled itself.\n    this.pending = true;\n\n    this.delay = delay;\n    // If this action has already an async Id, don't request a new one.\n    this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);\n\n    return this;\n  }\n\n  protected requestAsyncId(scheduler: AsyncScheduler, id?: any, delay: number = 0): any {\n    return setInterval(scheduler.flush.bind(scheduler, this), delay);\n  }\n\n  protected recycleAsyncId(scheduler: AsyncScheduler, id: any, delay: number = 0): any {\n    // If this action is rescheduled with the same delay time, don't clear the interval id.\n    if (delay !== null && this.delay === delay && this.pending === false) {\n      return id;\n    }\n    // Otherwise, if the action's delay time is different from the current delay,\n    // or the action has been rescheduled before it's executed, clear the interval id\n    clearInterval(id);\n    return undefined;\n  }\n\n  /**\n   * Immediately executes this action and the `work` it contains.\n   * @return {any}\n   */\n  public execute(state: T, delay: number): any {\n\n    if (this.closed) {\n      return new Error('executing a cancelled action');\n    }\n\n    this.pending = false;\n    const error = this._execute(state, delay);\n    if (error) {\n      return error;\n    } else if (this.pending === false && this.id != null) {\n      // Dequeue if the action didn't reschedule itself. Don't call\n      // unsubscribe(), because the action could reschedule later.\n      // For example:\n      // ```\n      // scheduler.schedule(function doWork(counter) {\n      //   /* ... I'm a busy worker bee ... */\n      //   var originalAction = this;\n      //   /* wait 100ms before rescheduling the action */\n      //   setTimeout(function () {\n      //     originalAction.schedule(counter + 1);\n      //   }, 100);\n      // }, 1000);\n      // ```\n      this.id = this.recycleAsyncId(this.scheduler, this.id, null);\n    }\n  }\n\n  protected _execute(state: T, delay: number): any {\n    let errored: boolean = false;\n    let errorValue: any = undefined;\n    try {\n      this.work(state);\n    } catch (e) {\n      errored = true;\n      errorValue = !!e && e || new Error(e);\n    }\n    if (errored) {\n      this.unsubscribe();\n      return errorValue;\n    }\n  }\n\n  /** @deprecated This is an internal implementation detail, do not use. */\n  _unsubscribe() {\n\n    const id = this.id;\n    const scheduler = this.scheduler;\n    const actions = scheduler.actions;\n    const index = actions.indexOf(this);\n\n    this.work  = null;\n    this.state = null;\n    this.pending = false;\n    this.scheduler = null;\n\n    if (index !== -1) {\n      actions.splice(index, 1);\n    }\n\n    if (id != null) {\n      this.id = this.recycleAsyncId(scheduler, id, null);\n    }\n\n    this.delay = null;\n  }\n}\n","import { Action } from './scheduler/Action';\nimport { Subscription } from './Subscription';\nimport { SchedulerLike, SchedulerAction } from './types';\n\n/**\n * An execution context and a data structure to order tasks and schedule their\n * execution. Provides a notion of (potentially virtual) time, through the\n * `now()` getter method.\n *\n * Each unit of work in a Scheduler is called an `Action`.\n *\n * ```ts\n * class Scheduler {\n *   now(): number;\n *   schedule(work, delay?, state?): Subscription;\n * }\n * ```\n *\n * @class Scheduler\n * @deprecated Scheduler is an internal implementation detail of RxJS, and\n * should not be used directly. Rather, create your own class and implement\n * {@link SchedulerLike}\n */\nexport class Scheduler implements SchedulerLike {\n\n  /**\n   * Note: the extra arrow function wrapper is to make testing by overriding\n   * Date.now easier.\n   * @nocollapse\n   */\n  public static now: () => number = () => Date.now();\n\n  constructor(private SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    this.now = now;\n  }\n\n  /**\n   * A getter method that returns a number representing the current time\n   * (at the time this function was called) according to the scheduler's own\n   * internal clock.\n   * @return {number} A number that represents the current time. May or may not\n   * have a relation to wall-clock time. May or may not refer to a time unit\n   * (e.g. milliseconds).\n   */\n  public now: () => number;\n\n  /**\n   * Schedules a function, `work`, for execution. May happen at some point in\n   * the future, according to the `delay` parameter, if specified. May be passed\n   * some context object, `state`, which will be passed to the `work` function.\n   *\n   * The given arguments will be processed an stored as an Action object in a\n   * queue of actions.\n   *\n   * @param {function(state: ?T): ?Subscription} work A function representing a\n   * task, or some unit of work to be executed by the Scheduler.\n   * @param {number} [delay] Time to wait before executing the work, where the\n   * time unit is implicit and defined by the Scheduler itself.\n   * @param {T} [state] Some contextual data that the `work` function uses when\n   * called by the Scheduler.\n   * @return {Subscription} A subscription in order to be able to unsubscribe\n   * the scheduled work.\n   */\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    return new this.SchedulerAction<T>(this, work).schedule(state, delay);\n  }\n}\n","import { Scheduler } from '../Scheduler';\nimport { Action } from './Action';\nimport { AsyncAction } from './AsyncAction';\nimport { SchedulerAction } from '../types';\nimport { Subscription } from '../Subscription';\n\nexport class AsyncScheduler extends Scheduler {\n  public static delegate?: Scheduler;\n  public actions: Array<AsyncAction<any>> = [];\n  /**\n   * A flag to indicate whether the Scheduler is currently executing a batch of\n   * queued actions.\n   * @type {boolean}\n   * @deprecated internal use only\n   */\n  public active: boolean = false;\n  /**\n   * An internal ID used to track the latest asynchronous task such as those\n   * coming from `setTimeout`, `setInterval`, `requestAnimationFrame`, and\n   * others.\n   * @type {any}\n   * @deprecated internal use only\n   */\n  public scheduled: any = undefined;\n\n  constructor(SchedulerAction: typeof Action,\n              now: () => number = Scheduler.now) {\n    super(SchedulerAction, () => {\n      if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n        return AsyncScheduler.delegate.now();\n      } else {\n        return now();\n      }\n    });\n  }\n\n  public schedule<T>(work: (this: SchedulerAction<T>, state?: T) => void, delay: number = 0, state?: T): Subscription {\n    if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {\n      return AsyncScheduler.delegate.schedule(work, delay, state);\n    } else {\n      return super.schedule(work, delay, state);\n    }\n  }\n\n  public flush(action: AsyncAction<any>): void {\n\n    const {actions} = this;\n\n    if (this.active) {\n      actions.push(action);\n      return;\n    }\n\n    let error: any;\n    this.active = true;\n\n    do {\n      if (error = action.execute(action.state, action.delay)) {\n        break;\n      }\n    } while (action = actions.shift()); // exhaust the scheduler queue\n\n    this.active = false;\n\n    if (error) {\n      while (action = actions.shift()) {\n        action.unsubscribe();\n      }\n      throw error;\n    }\n  }\n}\n","import { SchedulerLike } from '../types';\n\nexport function isScheduler(value: any): value is SchedulerLike {\n  return value && typeof (<any>value).schedule === 'function';\n}\n","import { AsyncAction } from './AsyncAction';\nimport { AsyncScheduler } from './AsyncScheduler';\n\n/**\n *\n * Async Scheduler\n *\n * <span class=\"informal\">Schedule task as if you used setTimeout(task, duration)</span>\n *\n * `async` scheduler schedules tasks asynchronously, by putting them on the JavaScript\n * event loop queue. It is best used to delay tasks in time or to schedule tasks repeating\n * in intervals.\n *\n * If you just want to \"defer\" task, that is to perform it right after currently\n * executing synchronous code ends (commonly achieved by `setTimeout(deferredTask, 0)`),\n * better choice will be the {@link asapScheduler} scheduler.\n *\n * ## Examples\n * Use async scheduler to delay task\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * const task = () => console.log('it works!');\n *\n * asyncScheduler.schedule(task, 2000);\n *\n * // After 2 seconds logs:\n * // \"it works!\"\n * ```\n *\n * Use async scheduler to repeat task in intervals\n * ```ts\n * import { asyncScheduler } from 'rxjs';\n *\n * function task(state) {\n *   console.log(state);\n *   this.schedule(state + 1, 1000); // `this` references currently executing Action,\n *                                   // which we reschedule with new state and delay\n * }\n *\n * asyncScheduler.schedule(task, 3000, 0);\n *\n * // Logs:\n * // 0 after 3s\n * // 1 after 4s\n * // 2 after 5s\n * // 3 after 6s\n * ```\n *\n * @static true\n * @name async\n * @owner Scheduler\n */\n\nexport const async = new AsyncScheduler(AsyncAction);\n","import { isArray } from './isArray';\n\nexport function isNumeric(val: any): val is number | string {\n  // parseFloat NaNs numeric-cast false positives (null|true|false|\"\")\n  // ...but misinterprets leading-number strings, particularly hex literals (\"0x...\")\n  // subtraction forces infinities to NaN\n  // adding 1 corrects loss of precision from parseFloat (#15100)\n  return !isArray(val) && (val - parseFloat(val) + 1) >= 0;\n}\n","import { Observable } from '../Observable';\nimport { SchedulerAction, SchedulerLike } from '../types';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nimport { isScheduler } from '../util/isScheduler';\nimport { Subscriber } from '../Subscriber';\n\n/**\n * Creates an Observable that starts emitting after an `dueTime` and\n * emits ever increasing numbers after each `period` of time thereafter.\n *\n * <span class=\"informal\">Its like {@link index/interval}, but you can specify when\n * should the emissions start.</span>\n *\n * ![](timer.png)\n *\n * `timer` returns an Observable that emits an infinite sequence of ascending\n * integers, with a constant interval of time, `period` of your choosing\n * between those emissions. The first emission happens after the specified\n * `dueTime`. The initial delay may be a `Date`. By default, this\n * operator uses the {@link asyncScheduler} {@link SchedulerLike} to provide a notion of time, but you\n * may pass any {@link SchedulerLike} to it. If `period` is not specified, the output\n * Observable emits only one value, `0`. Otherwise, it emits an infinite\n * sequence.\n *\n * ## Examples\n * ### Emits ascending numbers, one every second (1000ms), starting after 3 seconds\n * ```ts\n * import { timer } from 'rxjs';\n *\n * const numbers = timer(3000, 1000);\n * numbers.subscribe(x => console.log(x));\n * ```\n *\n * ### Emits one number after five seconds\n * ```ts\n * import { timer } from 'rxjs';\n *\n * const numbers = timer(5000);\n * numbers.subscribe(x => console.log(x));\n * ```\n * @see {@link index/interval}\n * @see {@link delay}\n *\n * @param {number|Date} [dueTime] The initial delay time specified as a Date object or as an integer denoting\n * milliseconds to wait before emitting the first value of 0`.\n * @param {number|SchedulerLike} [periodOrScheduler] The period of time between emissions of the\n * subsequent numbers.\n * @param {SchedulerLike} [scheduler=async] The {@link SchedulerLike} to use for scheduling\n * the emission of values, and providing a notion of \"time\".\n * @return {Observable} An Observable that emits a `0` after the\n * `dueTime` and ever increasing numbers after each `period` of time\n * thereafter.\n * @static true\n * @name timer\n * @owner Observable\n */\nexport function timer(dueTime: number | Date = 0,\n                      periodOrScheduler?: number | SchedulerLike,\n                      scheduler?: SchedulerLike): Observable<number> {\n  let period = -1;\n  if (isNumeric(periodOrScheduler)) {\n    period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);\n  } else if (isScheduler(periodOrScheduler)) {\n    scheduler = periodOrScheduler as any;\n  }\n\n  if (!isScheduler(scheduler)) {\n    scheduler = async;\n  }\n\n  return new Observable(subscriber => {\n    const due = isNumeric(dueTime)\n      ? (dueTime as number)\n      : (+dueTime - scheduler.now());\n\n    return scheduler.schedule(dispatch, due, {\n      index: 0, period, subscriber\n    });\n  });\n}\n\ninterface TimerState {\n  index: number;\n  period: number;\n  subscriber: Subscriber<number>;\n}\n\nfunction dispatch(this: SchedulerAction<TimerState>, state: TimerState) {\n  const { index, period, subscriber } = state;\n  subscriber.next(index);\n\n  if (subscriber.closed) {\n    return;\n  } else if (period === -1) {\n    return subscriber.complete();\n  }\n\n  state.index = index + 1;\n  this.schedule(state, period);\n}\n","\nexport const MAX_CHARS = 524288;  // the default max length per the html maxlength attribute\nexport const MIN_SEARCH_LENGTH = 3;\nexport const PAUSE = 10;\nexport const TEXT_SEARCHING = \"Searching...\";\nexport const TEXT_NO_RESULTS = \"No results found\";\nexport const CLEAR_TIMEOUT = 50;\n\nexport function isNil(value: any) {\n    return typeof value === \"undefined\" || value === null;\n}\n","import { Subject } from \"rxjs\";\n\nimport { CompleterItem } from \"../components/completer-item\";\nimport { CompleterData } from \"./completer-data\";\nimport { isNil } from \"../globals\";\n\nexport abstract class CompleterBaseData extends Subject<CompleterItem[] | null> implements CompleterData {\n\n    protected _searchFields: string | null = null;\n    protected _titleField: string | null = null;\n    protected _descriptionField: string | undefined = undefined;\n    protected _imageField: string | undefined = undefined;\n\n    constructor() {\n        super();\n    }\n\n    public abstract search(term: string): void;\n\n    public cancel() {\n        return;\n    }\n\n    public searchFields(searchFields: string | null) {\n        this._searchFields = searchFields;\n        return this;\n    }\n\n    public titleField(titleField: string | null) {\n        this._titleField = titleField;\n        return this;\n    }\n\n    public descriptionField(descriptionField: string) {\n        this._descriptionField = descriptionField;\n        return this;\n    }\n\n    public imageField(imageField: string) {\n        this._imageField = imageField;\n        return this;\n    }\n\n    public convertToItem(data: any) {\n        let image: string | null = null;\n        let formattedText: string;\n        let formattedDesc: string | null = null;\n\n        if (this._titleField) {\n            formattedText = this.extractTitle(data);\n        } else {\n            formattedText = data;\n        }\n\n        if (typeof formattedText !== \"string\") {\n            formattedText = JSON.stringify(formattedText);\n        }\n\n        if (this._descriptionField) {\n            formattedDesc = this.extractValue(data, this._descriptionField);\n        }\n\n        if (this._imageField) {\n            image = this.extractValue(data, this._imageField);\n        }\n\n        if (isNil(formattedText)) {\n            return null;\n        }\n\n        return {\n            description: formattedDesc,\n            image,\n            originalObject: data,\n            title: formattedText\n        } as CompleterItem;\n\n    }\n\n    protected extractMatches(data: any[], term: string) {\n        let matches: any[] = [];\n        const searchFields = this._searchFields ? this._searchFields.split(\",\") : null;\n        if (this._searchFields !== null && this._searchFields !== undefined && term !== \"\") {\n            matches = data.filter((item) => {\n                const values: any[] = searchFields ? this.extractBySearchFields(searchFields, item) : [item];\n                return values.some((value) => value\n                    .toString()\n                    .toLowerCase()\n                    .indexOf(term.toString().toLowerCase()) >= 0\n                );\n            });\n        } else {\n            matches = data;\n        }\n\n        return matches;\n    }\n\n    protected extractTitle(item: any) {\n        // split title fields and run extractValue for each and join with ' '\n        if (!this._titleField) {\n            return \"\";\n        }\n\n        return this._titleField.split(\",\")\n            .map((field) => {\n                return this.extractValue(item, field);\n            })\n            .reduce((acc, titlePart) => acc ? `${acc} ${titlePart}` : titlePart);\n    }\n\n    protected extractValue(obj: any, key: string | null) {\n        let keys: string[];\n        let result: any;\n        if (key) {\n            keys = key.split(\".\");\n            result = obj;\n            for (key of keys) {\n                if (result) {\n                    result = result[key];\n                }\n            }\n        } else {\n            result = obj;\n        }\n        return result;\n    }\n\n    protected processResults(matches: string[]): CompleterItem[] {\n        let i: number;\n        const results: CompleterItem[] = [];\n\n        if (matches && matches.length > 0) {\n            for (i = 0; i < matches.length; i++) {\n                const item = this.convertToItem(matches[i]);\n                if (item) {\n                    results.push(item);\n                }\n            }\n        }\n        return results;\n    }\n\n    private extractBySearchFields(searchFields: string[], item: any) {\n        return searchFields\n            .map((searchField) => this.extractValue(item, searchField)).filter((value) => !!value);\n    }\n}\n","import { EventEmitter } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { catchError } from \"rxjs/operators\";\n\nimport { CompleterBaseData } from \"./completer-base-data\";\nimport { CompleterItem } from \"../components/completer-item\";\n\nexport class LocalData extends CompleterBaseData {\n\n    public dataSourceChange: EventEmitter<void> = new EventEmitter<void>();\n\n    protected _data: any[] = [];\n    protected savedTerm: string | null = null;\n\n    constructor() {\n        super();\n    }\n\n    public data(data: any[] | Observable<any[]>) {\n        if (data instanceof Observable) {\n            const data$ = data as Observable<any[]>;\n            data$\n                .pipe(catchError(() => []))\n                .subscribe((res) => {\n                    this._data = res;\n                    if (this.savedTerm) {\n                        this.search(this.savedTerm);\n                    }\n                    this.dataSourceChange.emit();\n                });\n        } else {\n            this._data = data;\n        }\n\n        this.dataSourceChange.emit();\n\n        return this;\n    }\n\n    public search(term: string): void {\n        if (!this._data) {\n            this.savedTerm = term;\n        } else {\n            this.savedTerm = null;\n            const matches: any[] = this.extractMatches(this._data, term);\n            this.next(this.processResults(matches));\n        }\n    }\n\n    public convertToItem(data: any): CompleterItem | null {\n        return super.convertToItem(data);\n    }\n}\n","import { EventEmitter } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { Subscription } from \"rxjs\";\nimport { catchError, map } from \"rxjs/operators\";\n\nimport { CompleterBaseData } from \"./completer-base-data\";\nimport { CompleterItem } from \"../components/completer-item\";\n\nexport class RemoteData extends CompleterBaseData {\n    public dataSourceChange: EventEmitter<void> = new EventEmitter<void>();\n\n    private _remoteUrl: string | null = null;\n    private remoteSearch: Subscription | null = null;\n    private _urlFormater: ((term: string) => string) | null = null;\n    private _dataField: string | null = null;\n    private _requestOptions: any;\n\n    constructor(private http: HttpClient) {\n        super();\n    }\n\n    public remoteUrl(remoteUrl: string | null) {\n        this._remoteUrl = remoteUrl;\n        this.dataSourceChange.emit();\n\n        return this;\n    }\n\n    public urlFormater(urlFormater: (term: string) => string) {\n        this._urlFormater = urlFormater;\n    }\n\n    public dataField(dataField: string) {\n        this._dataField = dataField;\n    }\n\n    public requestOptions(requestOptions: any) {\n        this._requestOptions = requestOptions;\n    }\n\n    public search(term: string): void {\n        this.cancel();\n        // let params = {};\n        let url = \"\";\n        if (this._urlFormater) {\n            url = this._urlFormater(term);\n        } else {\n            url = this._remoteUrl + encodeURIComponent(term);\n        }\n\n        this.remoteSearch = this.http\n            .get(url, Object.assign({}, this._requestOptions))\n            .pipe(\n                map((data: any) => {\n                    const matches = this.extractValue(data, this._dataField);\n                    return this.extractMatches(matches, term);\n                }),\n                catchError(() => [])\n            )\n            .subscribe((matches: any[]) => {\n                const results = this.processResults(matches);\n                this.next(results);\n            });\n    }\n\n    public cancel() {\n        if (this.remoteSearch) {\n            this.remoteSearch.unsubscribe();\n        }\n    }\n\n    public convertToItem(data: any): CompleterItem | null {\n        return super.convertToItem(data);\n    }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { LocalData } from \"./local-data\";\n\n@Injectable()\nexport class LocalDataFactory {\n    public create() {\n        return new LocalData();\n    }\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { HttpClient } from \"@angular/common/http\";\n\nimport { RemoteData } from \"./remote-data\";\n\n@Injectable()\nexport class RemoteDataFactory {\n    constructor(private http: HttpClient) { }\n\n    public create() {\n        return new RemoteData(this.http);\n    }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\n\nimport { LocalData } from \"./local-data\";\nimport { RemoteData } from \"./remote-data\";\nimport { LocalDataFactory } from \"./local-data-factory\";\nimport { RemoteDataFactory } from \"./remote-data-factory\";\n\n@Injectable()\nexport class CompleterService {\n    constructor(\n        private localDataFactory: LocalDataFactory, // Using any instead of () => LocalData because of AoT errors\n        private remoteDataFactory: RemoteDataFactory // Using any instead of () => LocalData because of AoT errors\n    ) { }\n\n    public local(\n        data: any[] | Observable<any>,\n        searchFields: string | null = \"\",\n        titleField: string | null = \"\"\n    ): LocalData {\n\n        const localData = this.localDataFactory.create();\n        return localData\n            .data(data)\n            .searchFields(searchFields)\n            .titleField(titleField);\n    }\n\n    public remote(url: string | null, searchFields: string | null = \"\", titleField: string | null = \"\"): RemoteData {\n\n        const remoteData = this.remoteDataFactory.create();\n        return remoteData\n            .remoteUrl(url)\n            .searchFields(searchFields)\n            .titleField(titleField);\n    }\n}\n","import { Directive, EventEmitter, Output } from \"@angular/core\";\n\nimport { CompleterItem } from \"../components/completer-item\";\n\nexport interface CompleterList {\n    search(term: string): void;\n    open(): void;\n    isOpen(open: boolean): void;\n    clear(): void;\n}\n\nexport interface CompleterDropdown {\n    clear(): void;\n    selectCurrent(): void;\n    nextRow(): void;\n    prevRow(): void;\n    highlightRow(index: number | null): void;\n}\n\n@Directive({\n    selector: \"[ctrCompleter]\",\n})\nexport class CtrCompleter {\n    @Output() public selected = new EventEmitter<CompleterItem | null>();\n    @Output() public highlighted = new EventEmitter<CompleterItem | null>();\n    @Output() public opened = new EventEmitter<boolean>();\n    @Output() public dataSourceChange = new EventEmitter<void>();\n\n    private list: CompleterList | null = null;\n    private dropdown: CompleterDropdown | null = null;\n    private _hasHighlighted = false;\n    private _hasSelected = false;\n    private _cancelBlur = false;\n    private _isOpen = false;\n    private _autoHighlightIndex: number | null = null;\n\n    public registerList(list: CompleterList) {\n        this.list = list;\n    }\n\n    public registerDropdown(dropdown: CompleterDropdown | null) {\n        this.dropdown = dropdown;\n    }\n\n    public onHighlighted(item: CompleterItem | null) {\n        this.highlighted.emit(item);\n        this._hasHighlighted = !!item;\n    }\n\n    public onSelected(item: CompleterItem | null, clearList = true) {\n        this.selected.emit(item);\n        if (item) {\n            this._hasSelected = true;\n        }\n        if (clearList) {\n            this.clear();\n        }\n    }\n\n    public onDataSourceChange() {\n        if (this.hasSelected) {\n            this.selected.emit(null);\n            this._hasSelected = false;\n        }\n        this.dataSourceChange.emit();\n    }\n\n    public search(term: string) {\n        if (this._hasSelected) {\n            this.selected.emit(null);\n            this._hasSelected = false;\n        }\n        if (this.list) {\n            this.list.search(term);\n        }\n    }\n\n    public clear() {\n        this._hasHighlighted = false;\n        this.isOpen = false;\n\n        if (this.dropdown) {\n            this.dropdown.clear();\n        }\n\n        if (this.list) {\n            this.list.clear();\n        }\n    }\n\n    public selectCurrent() {\n        if (this.dropdown) {\n            this.dropdown.selectCurrent();\n        }\n    }\n\n    public nextRow() {\n        if (this.dropdown) {\n            this.dropdown.nextRow();\n        }\n    }\n\n    public prevRow() {\n        if (this.dropdown) {\n            this.dropdown.prevRow();\n        }\n    }\n\n    public hasHighlighted() {\n        return this._hasHighlighted;\n    }\n\n    public cancelBlur(cancel: boolean) {\n        this._cancelBlur = cancel;\n    }\n\n    public isCancelBlur() {\n        return this._cancelBlur;\n    }\n\n    public open() {\n        if (!this._isOpen && !!this.list) {\n            this.isOpen = true;\n            this.list.open();\n        }\n    }\n\n    public get isOpen() {\n        return this._isOpen;\n    }\n\n    public set isOpen(open: boolean) {\n        this._isOpen = open;\n        this.opened.emit(this._isOpen);\n        if (this.list) {\n            this.list.isOpen(open);\n        }\n    }\n\n    public get autoHighlightIndex() {\n        return this._autoHighlightIndex;\n    }\n\n    public set autoHighlightIndex(index: number | null) {\n        this._autoHighlightIndex = index;\n        if (this.dropdown) {\n            this.dropdown.highlightRow(this._autoHighlightIndex);\n        }\n    }\n\n    public get hasSelected() {\n        return this._hasSelected;\n    }\n}\n","import { AfterViewInit, Directive, ElementRef, Host, HostListener, OnDestroy, NgZone } from \"@angular/core\";\n\nimport { CompleterItem } from \"../components/completer-item\";\nimport { CtrCompleter, CompleterDropdown } from \"./ctr-completer\";\nimport { isNil } from \"../globals\";\n\nexport interface CtrRowElement {\n    setHighlighted(selected: boolean): void;\n    getNativeElement(): any;\n    getDataItem(): CompleterItem | null;\n}\n\nexport class CtrRowItem {\n    constructor(public row: CtrRowElement, public index: number) { }\n}\n\n@Directive({\n    selector: \"[ctrDropdown]\",\n})\nexport class CtrDropdown implements CompleterDropdown, OnDestroy, AfterViewInit {\n\n    private rows: CtrRowItem[] = [];\n    private currHighlighted: CtrRowItem | undefined;\n    private isScrollOn: boolean = false;\n    private _rowMouseDown: boolean = false;\n\n    constructor( @Host() private completer: CtrCompleter, private el: ElementRef, private zone: NgZone) {\n        this.completer.registerDropdown(this);\n    }\n\n    public ngOnDestroy() {\n        this.completer.registerDropdown(null);\n    }\n\n    public ngAfterViewInit() {\n        const css = getComputedStyle(this.el.nativeElement);\n        const autoHighlightIndex = this.completer.autoHighlightIndex;\n\n        this.isScrollOn = !!css.maxHeight && css.overflowY === \"auto\";\n        if (autoHighlightIndex) {\n            this.zone.run(\n                () => {\n                    this.highlightRow(autoHighlightIndex);\n                }\n            );\n        }\n    }\n\n    @HostListener(\"mousedown\", [\"$event\"]) public onMouseDown(event: any) {\n        // Support for canceling blur on IE (issue #158)\n        if (!this._rowMouseDown) {\n            this.completer.cancelBlur(true);\n            this.zone.run(\n                () => {\n                    this.completer.cancelBlur(false);\n                }\n            );\n        } else {\n            this._rowMouseDown = false;\n        }\n    }\n\n    public registerRow(row: CtrRowItem) {\n        const arrIndex = this.rows.findIndex(_row => _row.index === row.index);\n        if (arrIndex >= 0) {\n            this.rows[arrIndex] = row;\n        } else {\n            this.rows.push(row);\n        }\n    }\n\n    public unregisterRow(rowIndex: number) {\n        const arrIndex = this.rows.findIndex(_row => _row.index === rowIndex);\n        this.rows.splice(arrIndex, 1);\n        if (this.currHighlighted && rowIndex === this.currHighlighted.index) {\n            this.highlightRow(null);\n        }\n    }\n\n    public highlightRow(index: number | null) {\n        const highlighted = this.rows.find(row => row.index === index);\n\n        if (isNil(index) || index! < 0) {\n            if (this.currHighlighted) {\n                this.currHighlighted.row.setHighlighted(false);\n            }\n            this.currHighlighted = undefined;\n            this.completer.onHighlighted(null);\n            return;\n        }\n\n        if (!highlighted) {\n            return;\n        }\n\n        if (this.currHighlighted) {\n            this.currHighlighted.row.setHighlighted(false);\n        }\n\n        this.currHighlighted = highlighted;\n        this.currHighlighted.row.setHighlighted(true);\n        this.completer.onHighlighted(this.currHighlighted.row.getDataItem());\n\n        if (this.isScrollOn && this.currHighlighted) {\n            const rowTop = this.dropdownRowTop();\n\n            if (!rowTop) {\n                return;\n            }\n\n            if (rowTop < 0) {\n                this.dropdownScrollTopTo(rowTop - 1);\n            } else {\n                const row = this.currHighlighted.row.getNativeElement();\n                if (this.dropdownHeight() < row.getBoundingClientRect().bottom) {\n                    this.dropdownScrollTopTo(this.dropdownRowOffsetHeight(row));\n                    if (this.el.nativeElement.getBoundingClientRect().bottom - this.dropdownRowOffsetHeight(row) < row.getBoundingClientRect().top) {\n                        this.dropdownScrollTopTo(row.getBoundingClientRect().top - (this.el.nativeElement.getBoundingClientRect().top + parseInt(getComputedStyle(this.el.nativeElement).paddingTop as string, 10)));\n                    }\n                }\n            }\n        }\n    }\n\n    public clear() {\n        this.rows = [];\n    }\n\n    public onSelected(item: CompleterItem | null) {\n        this.completer.onSelected(item);\n    }\n\n    public rowMouseDown() {\n        this._rowMouseDown = true;\n    }\n\n    public selectCurrent() {\n        if (!!this.currHighlighted && !!this.currHighlighted.row) {\n            this.onSelected(this.currHighlighted.row.getDataItem());\n        } else if (this.rows.length > 0) {\n            this.onSelected(this.rows[0].row.getDataItem());\n        }\n\n    }\n\n    public nextRow() {\n        let nextRowIndex = 0;\n\n        if (this.currHighlighted) {\n            nextRowIndex = this.currHighlighted.index + 1;\n        }\n\n        this.highlightRow(nextRowIndex);\n    }\n\n    public prevRow() {\n        let nextRowIndex = -1;\n\n        if (this.currHighlighted) {\n            nextRowIndex = this.currHighlighted.index - 1;\n        }\n\n        this.highlightRow(nextRowIndex);\n    }\n\n    private dropdownScrollTopTo(offset: any) {\n        this.el.nativeElement.scrollTop = this.el.nativeElement.scrollTop + offset;\n    }\n\n    private dropdownRowTop() {\n        if (!this.currHighlighted) {\n            return;\n        }\n\n        return this.currHighlighted.row.getNativeElement().getBoundingClientRect().top -\n            (this.el.nativeElement.getBoundingClientRect().top +\n                parseInt(getComputedStyle(this.el.nativeElement).paddingTop as string, 10));\n    }\n\n    private dropdownHeight() {\n        return this.el.nativeElement.getBoundingClientRect().top +\n            parseInt(getComputedStyle(this.el.nativeElement).maxHeight as string, 10);\n    }\n\n    private dropdownRowOffsetHeight(row: any) {\n        const css = getComputedStyle(row.parentElement);\n        return row.parentElement.offsetHeight +\n            parseInt(css.marginTop as string, 10) + parseInt(css.marginBottom as string, 10);\n    }\n}\n","import { Directive, ElementRef, EventEmitter, Host, HostListener, Input, Output } from \"@angular/core\";\nimport { NgModel } from \"@angular/forms\";\nimport { Subscription, timer } from \"rxjs\";\nimport { take } from \"rxjs/operators\";\n\nimport { CompleterItem } from \"../components/completer-item\";\nimport { CtrCompleter } from \"./ctr-completer\";\nimport { isNil } from \"../globals\";\n\n\n// keyboard events\nconst KEY_DW = 40;\nconst KEY_RT = 39;\nconst KEY_UP = 38;\nconst KEY_LF = 37;\nconst KEY_ES = 27;\nconst KEY_EN = 13;\nconst KEY_TAB = 9;\nconst KEY_BK = 8;\nconst KEY_SH = 16;\nconst KEY_CL = 20;\nconst KEY_F1 = 112;\nconst KEY_F12 = 123;\n\n@Directive({\n    selector: \"[ctrInput]\",\n})\nexport class CtrInput {\n    @Input(\"clearSelected\") public clearSelected = false;\n    @Input(\"clearUnselected\") public clearUnselected = false;\n    @Input(\"overrideSuggested\") public overrideSuggested = false;\n    @Input(\"fillHighlighted\") public fillHighlighted = true;\n    @Input(\"openOnFocus\") public openOnFocus = false;\n    @Input(\"openOnClick\") public openOnClick = false;\n    @Input(\"selectOnClick\") public selectOnClick = false;\n    @Input(\"selectOnFocus\") public selectOnFocus = false;\n\n    @Output() public ngModelChange: EventEmitter<any> = new EventEmitter();\n\n    private _searchStr = \"\";\n    private _displayStr = \"\";\n    private blurTimer: Subscription | null = null;\n\n    constructor( @Host() private completer: CtrCompleter, private ngModel: NgModel, private el: ElementRef) {\n        this.completer.selected.subscribe((item: CompleterItem) => {\n            if (!item) {\n                return;\n            }\n            if (this.clearSelected) {\n                this.searchStr = \"\";\n            } else {\n                this.searchStr = item.title;\n            }\n            this.ngModelChange.emit(this.searchStr);\n        });\n\n        this.completer.highlighted.subscribe((item: CompleterItem) => {\n            if (this.fillHighlighted) {\n                if (item) {\n                    this._displayStr = item.title;\n                    this.ngModelChange.emit(item.title);\n                } else {\n                    this._displayStr = this.searchStr;\n                    this.ngModelChange.emit(this.searchStr);\n                }\n            }\n        });\n\n        this.completer.dataSourceChange.subscribe(() => {\n            this.completer.search(this.searchStr);\n        });\n\n        if (this.ngModel.valueChanges) {\n            this.ngModel.valueChanges.subscribe((value: any) => {\n                if (!isNil(value) && this._displayStr !== value) {\n                    if (this.searchStr !== value) {\n                        this.completer.search(value);\n                    }\n                    this.searchStr = value;\n                }\n            });\n        }\n    }\n\n    @HostListener(\"keyup\", [\"$event\"])\n    public keyupHandler(event: any) {\n        if (event.keyCode === KEY_LF || event.keyCode === KEY_RT || event.keyCode === KEY_TAB) {\n            // do nothing\n            return;\n        }\n\n        if (event.keyCode === KEY_UP || event.keyCode === KEY_EN) {\n            event.preventDefault();\n        } else if (event.keyCode === KEY_DW) {\n            event.preventDefault();\n            this.completer.search(this.searchStr);\n        } else if (event.keyCode === KEY_ES) {\n            if (this.completer.isOpen) {\n                this.restoreSearchValue();\n                this.completer.clear();\n                event.stopPropagation();\n                event.preventDefault();\n            }\n        }\n    }\n\n    @HostListener(\"paste\", [\"$event\"])\n    public pasteHandler(event: any) {\n        this.completer.open();\n    }\n\n    @HostListener(\"keydown\", [\"$event\"])\n    public keydownHandler(event: any) {\n        const keyCode = event.keyCode || event.which;\n        if (keyCode === KEY_EN) {\n            if (this.completer.hasHighlighted()) {\n                event.preventDefault();\n            }\n            this.handleSelection();\n        } else if (keyCode === KEY_DW) {\n            event.preventDefault();\n            this.completer.open();\n            this.completer.nextRow();\n        } else if (keyCode === KEY_UP) {\n            event.preventDefault();\n            this.completer.prevRow();\n        } else if (keyCode === KEY_TAB) {\n            this.handleSelection();\n        } else if (keyCode === KEY_BK) {\n            this.completer.open();\n        } else if (keyCode === KEY_ES) {\n            // This is very specific to IE10/11 #272\n            // without this, IE clears the input text\n            event.preventDefault();\n            if (this.completer.isOpen) {\n                event.stopPropagation();\n            }\n        } else {\n            if (keyCode !== 0 && keyCode !== KEY_SH && keyCode !== KEY_CL &&\n                (keyCode <= KEY_F1 || keyCode >= KEY_F12) &&\n                !event.ctrlKey && !event.metaKey && !event.altKey\n            ) {\n                this.completer.open();\n            }\n        }\n    }\n\n    @HostListener(\"blur\", [\"$event\"])\n    public onBlur(event: any) {\n        // Check if we need to cancel Blur for IE\n        if (this.completer.isCancelBlur()) {\n            setTimeout(\n                () => {\n                    // get the focus back\n                    this.el.nativeElement.focus();\n                },\n                0\n            );\n            return;\n        }\n\n        if (this.completer.isOpen) {\n            this.blurTimer = timer(200).pipe(take(1)).subscribe(() => this.doBlur());\n        }\n    }\n\n    @HostListener(\"focus\", [])\n    public onfocus() {\n        if (this.blurTimer) {\n            this.blurTimer.unsubscribe();\n            this.blurTimer = null;\n        }\n\n        if (this.selectOnFocus) {\n            this.el.nativeElement.select();\n        }\n\n        if (this.openOnFocus) {\n            this.completer.open();\n        }\n    }\n\n    @HostListener(\"click\", [\"$event\"])\n    public onClick(event: any) {\n        if (this.selectOnClick) {\n            this.el.nativeElement.select();\n        }\n\n        if (this.openOnClick) {\n            if (this.completer.isOpen) {\n                this.completer.clear();\n            } else {\n                this.completer.open();\n            }\n        }\n    }\n\n    public get searchStr() {\n        return this._searchStr;\n    }\n\n    public set searchStr(term: string) {\n        this._searchStr = term;\n        this._displayStr = term;\n    }\n\n    private handleSelection() {\n        if (this.completer.hasHighlighted()) {\n            this._searchStr = \"\";\n            this.completer.selectCurrent();\n        } else if (this.overrideSuggested) {\n            this.completer.onSelected({ title: this.searchStr, originalObject: null });\n        } else {\n            if (this.clearUnselected && !this.completer.hasSelected) {\n                this.searchStr = \"\";\n                this.ngModelChange.emit(this.searchStr);\n            }\n            this.completer.clear();\n        }\n    }\n\n    private restoreSearchValue() {\n        if (this.fillHighlighted) {\n            if (this._displayStr !== this.searchStr) {\n                this._displayStr = this.searchStr;\n                this.ngModelChange.emit(this.searchStr);\n            }\n        }\n    }\n\n    private doBlur() {\n        if (this.blurTimer) {\n            this.blurTimer.unsubscribe();\n            this.blurTimer = null;\n        }\n\n        if (this.overrideSuggested) {\n            this.completer.onSelected({ title: this.searchStr, originalObject: null });\n        } else {\n            if (this.clearUnselected && !this.completer.hasSelected) {\n                this.searchStr = \"\";\n                this.ngModelChange.emit(this.searchStr);\n            } else {\n                this.restoreSearchValue();\n            }\n        }\n\n        this.completer.clear();\n    }\n}\n","import {\n  ChangeDetectorRef,\n  Directive,\n  EmbeddedViewRef,\n  Host,\n  Input,\n  OnInit,\n  TemplateRef,\n  ViewContainerRef,\n  NgZone,\n} from \"@angular/core\";\nimport { Subscription, timer } from \"rxjs\";\nimport { take } from \"rxjs/operators\";\nimport { CompleterItem } from \"../components/completer-item\";\nimport { CLEAR_TIMEOUT, isNil, MIN_SEARCH_LENGTH, PAUSE } from \"../globals\";\nimport { CompleterData } from \"../services/completer-data\";\nimport { CompleterList, CtrCompleter } from \"./ctr-completer\";\n\nexport class CtrListContext {\n  constructor(\n    public results: CompleterItem[] | null,\n    public searching: boolean,\n    public searchInitialized: boolean,\n    public isOpen: boolean\n  ) {}\n}\n\n@Directive({\n  selector: \"[ctrList]\",\n})\nexport class CtrList implements OnInit, CompleterList {\n  @Input() public ctrListMinSearchLength = MIN_SEARCH_LENGTH;\n  @Input() public ctrListPause = PAUSE;\n  @Input() public ctrListAutoMatch = false;\n  @Input() public ctrListAutoHighlight = false;\n  @Input() public ctrListDisplaySearching = true;\n\n  private _dataService: CompleterData | null = null;\n  // private results: CompleterItem[] = [];\n  private term: string | null = null;\n  // private searching = false;\n  private searchTimer: Subscription | null = null;\n  private clearTimer: Subscription | null = null;\n  private ctx = new CtrListContext([], false, false, false);\n  private _initialValue: any = null;\n  private viewRef: EmbeddedViewRef<CtrListContext> | null = null;\n\n  constructor(\n    @Host() private completer: CtrCompleter,\n    private templateRef: TemplateRef<CtrListContext>,\n    private viewContainer: ViewContainerRef,\n    private cd: ChangeDetectorRef,\n    private zone: NgZone\n  ) {}\n\n  public ngOnInit() {\n    this.completer.registerList(this);\n    this.viewRef = this.viewContainer.createEmbeddedView(\n      this.templateRef,\n      new CtrListContext([], false, false, false)\n    );\n  }\n\n  @Input(\"ctrList\")\n  public set dataService(newService: CompleterData) {\n    this._dataService = newService;\n    this.dataServiceSubscribe();\n  }\n\n  @Input(\"ctrListInitialValue\")\n  public set initialValue(value: any) {\n    if (\n      this._dataService &&\n      typeof this._dataService.convertToItem === \"function\"\n    ) {\n      this.zone.run(() => {\n        const initialItem =\n          this._dataService && this._dataService.convertToItem!(value);\n        if (initialItem) {\n          this.completer.onSelected(initialItem, false);\n        }\n      });\n    } else if (!this._dataService) {\n      this._initialValue = value;\n    }\n  }\n\n  public search(term: string) {\n    if (\n      !isNil(term) &&\n      term.length >= this.ctrListMinSearchLength &&\n      this.term !== term\n    ) {\n      if (this.searchTimer) {\n        this.searchTimer.unsubscribe();\n        this.searchTimer = null;\n      }\n      if (!this.ctx.searching) {\n        if (this.ctrListDisplaySearching) {\n          this.ctx.results = [];\n        }\n        this.ctx.searching = true;\n        this.ctx.searchInitialized = true;\n        this.refreshTemplate();\n      }\n      if (this.clearTimer) {\n        this.clearTimer.unsubscribe();\n      }\n      this.searchTimer = timer(this.ctrListPause)\n        .pipe(take(1))\n        .subscribe(() => {\n          this.searchTimerComplete(term);\n        });\n    } else if (!isNil(term) && term.length < this.ctrListMinSearchLength) {\n      this.clear();\n      this.term = \"\";\n    }\n  }\n\n  public clear() {\n    if (this.searchTimer) {\n      this.searchTimer.unsubscribe();\n    }\n    this.clearTimer = timer(CLEAR_TIMEOUT)\n      .pipe(take(1))\n      .subscribe(() => {\n        this._clear();\n      });\n  }\n\n  public open() {\n    if (!this.ctx.searchInitialized) {\n      this.search(\"\");\n    }\n    this.refreshTemplate();\n  }\n\n  public isOpen(open: boolean) {\n    this.ctx.isOpen = open;\n  }\n\n  private _clear() {\n    if (this.searchTimer) {\n      this.searchTimer.unsubscribe();\n      this.searchTimer = null;\n    }\n    if (this.dataService) {\n      this.dataService.cancel();\n    }\n\n    this.viewContainer.clear();\n    this.viewRef = null;\n  }\n\n  private searchTimerComplete(term: string) {\n    // Begin the search\n    if (isNil(term) || term.length < this.ctrListMinSearchLength) {\n      this.ctx.searching = false;\n      return;\n    }\n    this.term = term;\n\n    if (this._dataService) {\n      this._dataService.search(term);\n    }\n  }\n\n  private refreshTemplate() {\n    // create the template if it doesn't exist\n    if (!this.viewRef) {\n      this.viewRef = this.viewContainer.createEmbeddedView(\n        this.templateRef,\n        this.ctx\n      );\n    } else if (!this.viewRef.destroyed) {\n      // refresh the template\n      this.viewRef!.context.isOpen = this.ctx.isOpen;\n      this.viewRef!.context.results = this.ctx.results;\n      this.viewRef!.context.searching = this.ctx.searching;\n      this.viewRef!.context.searchInitialized = this.ctx.searchInitialized;\n      this.viewRef.detectChanges();\n    }\n    this.cd.markForCheck();\n  }\n\n  private getBestMatchIndex() {\n    if (!this.ctx.results || !this.term) {\n      return null;\n    }\n\n    // First try to find the exact term\n    let bestMatch = this.ctx.results.findIndex(\n      (item) => item.title.toLowerCase() === this.term!.toLocaleLowerCase()\n    );\n    // If not try to find the first item that starts with the term\n    if (bestMatch < 0) {\n      bestMatch = this.ctx.results.findIndex((item) =>\n        item.title.toLowerCase().startsWith(this.term!.toLocaleLowerCase())\n      );\n    }\n    // If not try to find the first item that includes the term\n    if (bestMatch < 0) {\n      bestMatch = this.ctx.results.findIndex((item) =>\n        item.title.toLowerCase().includes(this.term!.toLocaleLowerCase())\n      );\n    }\n\n    return bestMatch < 0 ? null : bestMatch;\n  }\n\n  private dataServiceSubscribe() {\n    if (this._dataService) {\n      this._dataService.subscribe(\n        (results) => {\n          this.ctx.searchInitialized = true;\n          this.ctx.searching = false;\n          this.ctx.results = results;\n\n          if (\n            this.ctrListAutoMatch &&\n            results &&\n            results.length === 1 &&\n            results[0].title &&\n            !isNil(this.term) &&\n            results[0].title.toLocaleLowerCase() ===\n              this.term!.toLocaleLowerCase()\n          ) {\n            // Do automatch\n            this.completer.onSelected(results[0]);\n            return;\n          }\n\n          this.refreshTemplate();\n\n          if (this.ctrListAutoHighlight) {\n            this.completer.autoHighlightIndex = this.getBestMatchIndex();\n          }\n        },\n        (error: any) => {\n          // tslint:disable-next-line:no-console\n          console.error(error);\n          // tslint:disable-next-line:no-console\n          console.error(\n            \"Unexpected error in dataService: errors should be handled by the dataService Observable\"\n          );\n          return [];\n        }\n      );\n\n      if (this._dataService.dataSourceChange) {\n        this._dataService.dataSourceChange.subscribe(() => {\n          this.term = null;\n          this.ctx.searchInitialized = false;\n          this.ctx.searching = false;\n          this.ctx.results = [];\n          this.refreshTemplate();\n          this.completer.onDataSourceChange();\n        });\n      }\n    }\n  }\n}\n","import { Directive, ElementRef, Host, HostListener, Input, Renderer2, OnDestroy } from \"@angular/core\";\n\nimport { CompleterItem } from \"../components/completer-item\";\nimport { CtrDropdown, CtrRowElement, CtrRowItem } from \"./ctr-dropdown\";\n\n@Directive({\n    selector: \"[ctrRow]\",\n})\nexport class CtrRow implements CtrRowElement, OnDestroy {\n\n    private selected = false;\n    private _rowIndex: number = 0;\n    private _item: CompleterItem | null = null;\n\n    constructor(private el: ElementRef, private renderer: Renderer2, @Host() private dropdown: CtrDropdown) { }\n\n    public ngOnDestroy() {\n        if (this._rowIndex) {\n            this.dropdown.unregisterRow(this._rowIndex);\n        }\n    }\n\n    @Input()\n    set ctrRow(index: number) {\n        this._rowIndex = index;\n        this.dropdown.registerRow(new CtrRowItem(this, this._rowIndex));\n    }\n\n    @Input()\n    set dataItem(item: CompleterItem) {\n        this._item = item;\n    }\n\n    @HostListener(\"click\", [\"$event\"]) public onClick(event: any) {\n        this.dropdown.onSelected(this._item);\n    }\n\n    @HostListener(\"mouseenter\", [\"$event\"]) public onMouseEnter(event: any) {\n        this.dropdown.highlightRow(this._rowIndex);\n    }\n\n    @HostListener(\"mousedown\", [\"$event\"]) public onMouseDown(event: any) {\n        this.dropdown.rowMouseDown();\n    }\n\n    public setHighlighted(selected: boolean) {\n        this.selected = selected;\n        if (this.selected) {\n          this.renderer.addClass(this.el.nativeElement, \"completer-selected-row\");\n        } else {\n          this.renderer.removeClass(this.el.nativeElement, \"completer-selected-row\");\n        }\n    }\n\n    public getNativeElement() {\n        return this.el.nativeElement;\n    }\n\n    public getDataItem() {\n        return this._item;\n    }\n}\n","\"use strict\";\nimport { Component, Input, OnInit } from \"@angular/core\";\n\nexport interface MatchPart {\n    isMatch: boolean;\n    text: string;\n}\n\n@Component({\n    selector: \"completer-list-item\",\n    template: `<span class=\"completer-list-item-holder\" [ngClass]= \"{'completer-title': type === 'title', 'completer-description': type === 'description'}\" >\n        <span class=\"completer-list-item\" *ngFor=\"let part of parts\" [ngClass]= \"part.isMatch ? matchClass : null\">{{part.text}}</span>\n    </span>`\n})\nexport class CompleterListItemCmp implements OnInit {\n    @Input()\n    public text: string = \"\";\n    @Input()\n    public searchStr: string = \"\";\n    @Input()\n    public matchClass: string = \"\";\n    @Input()\n    public type: string = \"\";\n\n    public parts: MatchPart[] = [];\n    public ngOnInit() {\n        if (!this.searchStr) {\n            this.parts.push({ isMatch: false, text: this.text });\n            return;\n        }\n        const matchStr = this.text.toLowerCase();\n        let matchPos = matchStr.indexOf(this.searchStr.toLowerCase());\n        let startIndex = 0;\n        while (matchPos >= 0) {\n            const matchText = this.text.slice(matchPos, matchPos + this.searchStr.length);\n            if (matchPos === 0) {\n                this.parts.push({ isMatch: true, text: matchText });\n                startIndex += this.searchStr.length;\n            } else if (matchPos > 0) {\n                const matchPart = this.text.slice(startIndex, matchPos);\n                this.parts.push({ isMatch: false, text: matchPart });\n                this.parts.push({ isMatch: true, text: matchText });\n                startIndex += this.searchStr.length + matchPart.length;\n            }\n            matchPos = matchStr.indexOf(this.searchStr.toLowerCase(), startIndex);\n        }\n        if (startIndex < this.text.length) {\n            this.parts.push({ isMatch: false, text: this.text.slice(startIndex, this.text.length) });\n        }\n    }\n}","\"use strict\";\nimport { AfterViewChecked, ChangeDetectorRef, Component, Input, Output, EventEmitter, OnInit, ViewChild, forwardRef, AfterViewInit, ElementRef } from \"@angular/core\";\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from \"@angular/forms\";\n\nimport { CtrCompleter } from \"../directives/ctr-completer\";\nimport { CompleterData } from \"../services/completer-data\";\nimport { CompleterService } from \"../services/completer-service\";\nimport { CompleterItem } from \"./completer-item\";\nimport { MAX_CHARS, MIN_SEARCH_LENGTH, PAUSE, TEXT_SEARCHING, TEXT_NO_RESULTS, isNil } from \"../globals\";\n\n\nconst noop = () => {\n    return;\n};\n\nconst COMPLETER_CONTROL_VALUE_ACCESSOR = {\n    multi: true,\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => CompleterCmp),\n};\n\n\n@Component({\n    selector: \"ng2-completer\",\n    template: `\n        <div class=\"completer-holder\" ctrCompleter>\n            <input #ctrInput [attr.id]=\"inputId.length > 0 ? inputId : null\" type=\"search\"\n                class=\"completer-input\" ctrInput [ngClass]=\"inputClass\"\n                [(ngModel)]=\"searchStr\" (ngModelChange)=\"onChange($event)\"\n                [attr.name]=\"inputName\" [placeholder]=\"placeholder\"\n                [attr.maxlength]=\"maxChars\" [tabindex]=\"fieldTabindex\" [disabled]=\"disableInput\"\n                [clearSelected]=\"clearSelected\" [clearUnselected]=\"clearUnselected\"\n                [overrideSuggested]=\"overrideSuggested\" [openOnFocus]=\"openOnFocus\" [fillHighlighted]=\"fillHighlighted\"\n                [openOnClick]=\"openOnClick\" [selectOnClick]=\"selectOnClick\" [selectOnFocus]=\"selectOnFocus\"\n                (blur)=\"onBlur()\" (focus)=\"onFocus()\" (keyup)=\"onKeyup($event)\"\n                (keydown)=\"onKeydown($event)\" (click)=\"onClick($event)\"\n                autocomplete=\"off\" autocorrect=\"off\" autocapitalize=\"off\" />\n\n            <div class=\"completer-dropdown-holder\"\n                *ctrList=\"dataService;\n                    minSearchLength: minSearchLength;\n                    pause: pause;\n                    autoMatch: autoMatch;\n                    initialValue: initialValue;\n                    autoHighlight: autoHighlight;\n                    displaySearching: displaySearching;\n                    let items = results;\n                    let searchActive = searching;\n                    let isInitialized = searchInitialized;\n                    let isOpen = isOpen;\">\n                <div class=\"completer-dropdown\" ctrDropdown\n                    *ngIf=\"isInitialized && isOpen && (( items?.length > 0|| (displayNoResults && !searchActive)) || (searchActive && displaySearching))\">\n                    <div *ngIf=\"searchActive && displaySearching\" class=\"completer-searching\">{{ _textSearching }}</div>\n                    <div *ngIf=\"!searchActive && (!items || items?.length === 0)\"\n                    class=\"completer-no-results\">{{ _textNoResults }}</div>\n                    <div class=\"completer-row-wrapper\" *ngFor=\"let item of items; let rowIndex=index\">\n                        <div class=\"completer-row\" [ctrRow]=\"rowIndex\" [dataItem]=\"item\">\n                            <div *ngIf=\"item.image || item.image === ''\" class=\"completer-image-holder\">\n                                <img *ngIf=\"item.image != ''\" src=\"{{item.image}}\" class=\"completer-image\" />\n                                <div *ngIf=\"item.image === ''\" class=\"completer-image-default\"></div>\n                            </div>\n                            <div class=\"completer-item-text\"\n                            [ngClass]=\"{'completer-item-text-image': item.image || item.image === '' }\">\n                                <completer-list-item\n                                class=\"completer-title\" [text]=\"item.title\" [matchClass]=\"matchClass\"\n                                [searchStr]=\"searchStr\" [type]=\"'title'\"></completer-list-item>\n                                <completer-list-item *ngIf=\"item.description && item.description != ''\"\n                                class=\"completer-description\" [text]=\"item.description\"\n                                    [matchClass]=\"matchClass\" [searchStr]=\"searchStr\" [type]=\"'description'\">\n                                </completer-list-item>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    `,\n    styles: [`\n    .completer-dropdown {\n        border-color: #ececec;\n        border-width: 1px;\n        border-style: solid;\n        border-radius: 2px;\n        width: 250px;\n        padding: 6px;\n        cursor: pointer;\n        z-index: 9999;\n        position: absolute;\n        margin-top: -6px;\n        background-color: #ffffff;\n    }\n\n    .completer-row {\n        padding: 5px;\n        color: #000000;\n        margin-bottom: 4px;\n        clear: both;\n        display: inline-block;\n        width: 103%;\n    }\n\n    .completer-selected-row {\n        background-color: lightblue;\n        color: #ffffff;\n    }\n\n    .completer-description {\n        font-size: 14px;\n    }\n\n    .completer-image-default {\n        width: 16px;\n        height: 16px;\n        background-image: url(\"demo/res/img/default.png\");\n    }\n\n    .completer-image-holder {\n        float: left;\n        width: 10%;\n    }\n    .completer-item-text-image {\n        float: right;\n        width: 90%;\n    }\n    `],\n    providers: [COMPLETER_CONTROL_VALUE_ACCESSOR]\n})\nexport class CompleterCmp implements ControlValueAccessor, AfterViewChecked, AfterViewInit {\n    @Input() public dataService: CompleterData | undefined;\n    @Input() public inputName = \"\";\n    @Input() public inputId: string = \"\";\n    @Input() public pause = PAUSE;\n    @Input() public minSearchLength = MIN_SEARCH_LENGTH;\n    @Input() public maxChars = MAX_CHARS;\n    @Input() public overrideSuggested = false;\n    @Input() public clearSelected = false;\n    @Input() public clearUnselected = false;\n    @Input() public fillHighlighted = true;\n    @Input() public placeholder = \"\";\n    @Input() public matchClass: string | undefined;\n    @Input() public fieldTabindex: number | undefined;\n    @Input() public autoMatch = false;\n    @Input() public disableInput = false;\n    @Input() public inputClass: string | undefined;\n    @Input() public autofocus = false;\n    @Input() public openOnFocus = false;\n    @Input() public openOnClick = false;\n    @Input() public selectOnClick = false;\n    @Input() public selectOnFocus = false;\n    @Input() public initialValue: any;\n    @Input() public autoHighlight = false;\n\n    @Output() public selected = new EventEmitter<CompleterItem>();\n    @Output() public highlighted = new EventEmitter<CompleterItem>();\n    @Output(\"blur\") public blurEvent = new EventEmitter<void>();\n    @Output() public click = new EventEmitter<void>();\n    @Output(\"focus\") public focusEvent = new EventEmitter<void>();\n    @Output() public opened = new EventEmitter<boolean>();\n    @Output() public keyup: EventEmitter<any> = new EventEmitter();\n    @Output() public keydown: EventEmitter<any> = new EventEmitter();\n\n    @ViewChild(CtrCompleter, { static: false }) public completer: CtrCompleter | undefined;\n    @ViewChild(\"ctrInput\", { static: false }) public ctrInput: ElementRef | undefined;\n\n    public control = new FormControl(\"\");\n    public displaySearching = true;\n    public displayNoResults = true;\n    public _textNoResults = TEXT_NO_RESULTS;\n    public _textSearching = TEXT_SEARCHING;\n\n    private _onTouchedCallback: () => void = noop;\n    private _onChangeCallback: (_: any) => void = noop;\n    private _focus: boolean = false;\n    private _open: boolean = false;\n    private _searchStr = \"\";\n\n    constructor(private completerService: CompleterService, private cdr: ChangeDetectorRef) { }\n\n    public get value(): any { return this.searchStr; };\n\n    public set value(v: any) {\n        if (v !== this.searchStr) {\n            this.searchStr = v;\n        }\n        // Propagate the change in any case\n        this._onChangeCallback(v);\n    }\n\n    public get searchStr() {\n        return this._searchStr;\n    }\n\n    public set searchStr(value: string) {\n        if (typeof value === \"string\" || isNil(value)) {\n            this._searchStr = value;\n        } else {\n            this._searchStr = JSON.stringify(value);\n        }\n    }\n\n    public ngAfterViewInit() {\n        if (this.autofocus) {\n            this._focus = true;\n        }\n        \n        if (!this.completer) {\n            return;\n        }\n\n        this.completer.selected.subscribe((item: CompleterItem) => {\n            this.selected.emit(item);\n        });\n        this.completer.highlighted.subscribe((item: CompleterItem) => {\n            this.highlighted.emit(item);\n        });\n        this.completer.opened.subscribe((isOpen: boolean) => {\n            this._open = isOpen;\n            this.opened.emit(isOpen);\n        });\n    }\n\n    public ngAfterViewChecked(): void {\n        if (this._focus) {\n            setTimeout(\n                () => {\n                    if (!!this.ctrInput) {\n                        this.ctrInput.nativeElement.focus();\n                        this._focus = false;\n                    }\n                },\n                0\n            );\n        }\n    }\n\n    public onTouched() {\n        this._onTouchedCallback();\n    }\n\n    public writeValue(value: any) {\n        this.searchStr = value;\n    }\n\n    public registerOnChange(fn: any) {\n        this._onChangeCallback = fn;\n    }\n\n    public registerOnTouched(fn: any) {\n        this._onTouchedCallback = fn;\n    }\n\n    public setDisabledState(isDisabled: boolean): void {\n        this.disableInput = isDisabled;\n    }\n\n    @Input()\n    public set datasource(source: CompleterData | string | any[]) {\n        if (source) {\n            if (source instanceof Array) {\n                this.dataService = this.completerService.local(source);\n            } else if (typeof (source) === \"string\") {\n                this.dataService = this.completerService.remote(source);\n            } else {\n                this.dataService = source as CompleterData;\n            }\n        }\n    }\n\n    @Input()\n    public set textNoResults(text: string) {\n        if (this._textNoResults !== text) {\n            this._textNoResults = text;\n            this.displayNoResults = !!this._textNoResults && this._textNoResults !== \"false\";\n        }\n    }\n\n    @Input()\n    public set textSearching(text: string) {\n        if (this._textSearching !== text) {\n            this._textSearching = text;\n            this.displaySearching = !!this._textSearching && this._textSearching !== \"false\";\n        }\n    }\n\n    public onBlur() {\n        this.blurEvent.emit();\n        this.onTouched();\n        this.cdr.detectChanges();\n    }\n\n    public onFocus() {\n        this.focusEvent.emit();\n        this.onTouched();\n    }\n\n    public onClick(event: any) {\n        this.click.emit(event);\n        this.onTouched();\n    }\n\n    public onKeyup(event: any) {\n        this.keyup.emit(event);\n        event.stopPropagation();\n    }\n\n    public onKeydown(event: any) {\n        this.keydown.emit(event);\n        event.stopPropagation();\n    }\n\n    public onChange(value: string) {\n        this.value = value;\n    }\n\n    public open() {\n        if (!this.completer) {\n            return;\n        }\n\n        this.completer.open();\n    }\n\n    public close() {\n        if (!this.completer) {\n            return;\n        }\n\n        this.completer.clear();\n    }\n\n    public focus(): void {\n        if (this.ctrInput) {\n            this.ctrInput.nativeElement.focus();\n        } else {\n            this._focus = true;\n        }\n    }\n\n    public blur(): void {\n        if (this.ctrInput) {\n            this.ctrInput.nativeElement.blur();\n        } else {\n            this._focus = false;\n        }\n    }\n\n    public isOpen() {\n        return this._open;\n    }\n}\n","import { NgModule, ModuleWithProviders } from \"@angular/core\";\nimport { FormsModule } from \"@angular/forms\";\nimport { CommonModule } from \"@angular/common\";\n\nimport { CompleterCmp } from \"../components/completer-cmp\";\nimport { CompleterListItemCmp } from \"../components/completer-list-item-cmp\";\nimport { LocalDataFactory } from \"../services/local-data-factory\";\nimport { RemoteDataFactory } from \"../services/remote-data-factory\";\nimport { CompleterService } from \"../services/completer-service\";\n\nimport { CtrCompleter } from \"../directives/ctr-completer\";\nimport { CtrDropdown } from \"../directives/ctr-dropdown\";\nimport { CtrInput } from \"../directives/ctr-input\";\nimport { CtrList } from \"../directives/ctr-list\";\nimport { CtrRow } from \"../directives/ctr-row\";\n\nconst providers = [\n    CompleterService,\n    LocalDataFactory,\n    RemoteDataFactory\n];\n\n@NgModule({\n    declarations: [\n        CompleterListItemCmp,\n        CtrCompleter,\n        CtrDropdown,\n        CtrInput,\n        CtrList,\n        CtrRow,\n        CompleterCmp\n    ],\n    exports: [\n        CompleterListItemCmp,\n        CtrCompleter,\n        CtrDropdown,\n        CtrInput,\n        CtrList,\n        CtrRow,\n        CompleterCmp\n    ],\n    imports: [\n        CommonModule,\n        FormsModule\n    ],\n    providers\n})\nexport class Ng2CompleterModule {\n\n    public static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: Ng2CompleterModule,\n            providers\n        };\n    }\n\n    public static forChild(): ModuleWithProviders {\n        return {\n            ngModule: Ng2CompleterModule,\n            providers\n        };\n    }\n}\n"]}