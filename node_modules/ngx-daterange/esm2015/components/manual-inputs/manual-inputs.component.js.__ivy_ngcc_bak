import { Component, EventEmitter, Input, Output, ViewEncapsulation } from '@angular/core';
import * as momentNs from 'moment';
const moment = momentNs;
export class ManualInputsComponent {
    constructor() {
        this.fromDate = null;
        this.toDate = null;
        this.dateFromInput = new EventEmitter();
    }
    ngOnInit() {
    }
    setDateFromInput(event, isLeft = false) {
        this.dateFromInput.emit({ event, isLeft });
    }
}
ManualInputsComponent.decorators = [
    { type: Component, args: [{
                encapsulation: ViewEncapsulation.Emulated,
                selector: 'manual-inputs',
                template: "<ng-container *ngIf=\"!isMobile\">\n\n\t<div class=\"row form-inputs mb-0\" *ngIf=\"!options.singleCalendar\">\n\t\t<div class=\"col\">\n\t\t\t<div *ngIf=\"options.icons !== 'default'\">\n\t\t\t\t<div [ngClass]=\"{ 'd-flex align-items-center input-with-icon': true, 'material': options.icons === 'material' }\">\n\t\t\t\t\t<i *ngIf=\"options.icons === 'material'\" class=\"material-icons\">event</i>\n\t\t\t\t\t<i *ngIf=\"options.icons === 'font-awesome'\" class=\"far fa-calendar-alt\"></i>\n\t\t\t\t\t<span *ngIf=\"fromDate\">From:&nbsp;</span>\n\t\t\t\t\t<input class=\"form-control\" [ngModel]=\"fromDate | formatMomentDate: options.format\" (blur)=\"setDateFromInput($event, true)\" type=\"text\" name=\"daterangepicker_start\" [ngModelOptions]=\"{ standalone: true }\" placeholder=\"Select From Date\" />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\n\t\t\t<input *ngIf=\"options.icons === 'default'\" class=\"form-control\" [ngModel]=\"fromDate | formatMomentDate: options.format\" (blur)=\"setDateFromInput($event, true)\" type=\"text\" name=\"daterangepicker_start\" [ngModelOptions]=\"{standalone: true}\" placeholder=\"Select From Date\" />\n\t\t</div>\n\t\n\t\t<div class=\"col\">\n\t\t\t<div *ngIf=\"options.icons !== 'default'\">\n\t\t\t\t\t<div [ngClass]=\"{ 'd-flex align-items-center input-with-icon': true, 'material': options.icons === 'material' }\">\n\t\t\t\t\t\t<i *ngIf=\"options.icons === 'material'\" class=\"material-icons\">event</i>\n\t\t\t\t\t\t<i *ngIf=\"options.icons === 'font-awesome'\" class=\"far fa-calendar-alt\"></i>\n\t\t\t\t\t\t<span *ngIf=\"toDate\">To:&nbsp;</span>\n\t\t\t\t\t\t<input class=\"form-control\" [ngModel]=\"toDate | formatMomentDate: options.format\" (blur)=\"setDateFromInput($event)\" type=\"text\" name=\"daterangepicker_end\" [ngModelOptions]=\"{ standalone: true }\" placeholder=\"Select To Date\" />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\n\t\t\t<input *ngIf=\"options.icons === 'default'\" class=\"form-control\" [ngModel]=\"toDate | formatMomentDate: options.format\" (blur)=\"setDateFromInput($event)\" name=\"daterangepicker_end\" [ngModelOptions]=\"{standalone: true}\" />\n\t\t</div>\n\t</div>\n</ng-container>",
                styles: [".is-chrome .form-inputs .input-with-icon span{position:relative;top:1px}.form-inputs{background-color:#6e777c;border-top-left-radius:8px;border-top-right-radius:8px;color:#fff;font-size:16px}.form-inputs>.col{min-width:270px;padding:.5rem 15px}.form-inputs .input-with-icon{align-content:flex-start;align-items:center!important;display:flex}.form-inputs .input-with-icon i{color:#fff;margin-right:.5rem}.form-inputs .input-with-icon i.material-icons{top:0}.form-inputs .input-with-icon span{line-height:1}.form-inputs .form-control{background:none;border:0;color:#fff;display:inline-block;padding:0;width:150px}.form-inputs .form-control::-moz-placeholder{color:#fff}.form-inputs .form-control::placeholder{color:#fff}:not(.mobile) .form-inputs>div:nth-child(2),:not(.mobile) .row-calendars>div:nth-child(2){border-left:2px solid #c6d1d6}"]
            },] }
];
ManualInputsComponent.ctorParameters = () => [];
ManualInputsComponent.propDecorators = {
    options: [{ type: Input }],
    fromDate: [{ type: Input }],
    toDate: [{ type: Input }],
    isMobile: [{ type: Input }],
    dateFromInput: [{ type: Output }]
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFudWFsLWlucHV0cy5jb21wb25lbnQuanMiLCJzb3VyY2VSb290IjoiLi4vLi4vLi4vc3JjL21vZHVsZXMvbmd4LWRhdGVyYW5nZS9zcmMvIiwic291cmNlcyI6WyJjb21wb25lbnRzL21hbnVhbC1pbnB1dHMvbWFudWFsLWlucHV0cy5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUdsRyxPQUFPLEtBQUssUUFBUSxNQUFNLFFBQVEsQ0FBQztBQUFDLE1BQU0sTUFBTSxHQUFHLFFBQVEsQ0FBQztBQVE1RCxNQUFNLE9BQU8scUJBQXFCO0lBaUJoQztRQVhBLGFBQVEsR0FBb0IsSUFBSSxDQUFDO1FBR2pDLFdBQU0sR0FBb0IsSUFBSSxDQUFDO1FBTS9CLGtCQUFhLEdBQUcsSUFBSSxZQUFZLEVBQW9DLENBQUM7SUFFckQsQ0FBQztJQUVqQixRQUFRO0lBQ1IsQ0FBQztJQUVELGdCQUFnQixDQUFDLEtBQVksRUFBRSxTQUFrQixLQUFLO1FBQ3BELElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEVBQUUsS0FBSyxFQUFFLE1BQU0sRUFBRSxDQUFDLENBQUM7SUFDN0MsQ0FBQzs7O1lBOUJGLFNBQVMsU0FBQztnQkFDVCxhQUFhLEVBQUUsaUJBQWlCLENBQUMsUUFBUTtnQkFDekMsUUFBUSxFQUFFLGVBQWU7Z0JBQ3pCLGtvRUFBNkM7O2FBRTlDOzs7O3NCQUdFLEtBQUs7dUJBR0wsS0FBSztxQkFHTCxLQUFLO3VCQUdMLEtBQUs7NEJBR0wsTUFBTSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25Jbml0LCBPdXRwdXQsIFZpZXdFbmNhcHN1bGF0aW9uIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBJRGF0ZVJhbmdlUGlja2VyT3B0aW9ucyB9IGZyb20gJy4uLy4uL2ludGVyZmFjZXMnO1xuXG5pbXBvcnQgKiBhcyBtb21lbnROcyBmcm9tICdtb21lbnQnOyBjb25zdCBtb21lbnQgPSBtb21lbnROcztcblxuQENvbXBvbmVudCh7XG4gIGVuY2Fwc3VsYXRpb246IFZpZXdFbmNhcHN1bGF0aW9uLkVtdWxhdGVkLFxuICBzZWxlY3RvcjogJ21hbnVhbC1pbnB1dHMnLFxuICB0ZW1wbGF0ZVVybDogJy4vbWFudWFsLWlucHV0cy5jb21wb25lbnQuaHRtbCcsXG4gIHN0eWxlVXJsczogWycuL21hbnVhbC1pbnB1dHMuY29tcG9uZW50LnNjc3MnXVxufSlcbmV4cG9ydCBjbGFzcyBNYW51YWxJbnB1dHNDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xuXG4gIEBJbnB1dCgpXG4gIG9wdGlvbnM6IElEYXRlUmFuZ2VQaWNrZXJPcHRpb25zO1xuXG4gIEBJbnB1dCgpXG4gIGZyb21EYXRlOiBtb21lbnROcy5Nb21lbnQgPSBudWxsO1xuXG4gIEBJbnB1dCgpXG4gIHRvRGF0ZTogbW9tZW50TnMuTW9tZW50ID0gbnVsbDtcblxuICBASW5wdXQoKVxuICBpc01vYmlsZTogYm9vbGVhbjtcblxuICBAT3V0cHV0KClcbiAgZGF0ZUZyb21JbnB1dCA9IG5ldyBFdmVudEVtaXR0ZXI8eyBldmVudDogRXZlbnQsIGlzTGVmdDogYm9vbGVhbn0+KCk7XG5cbiAgY29uc3RydWN0b3IoKSB7IH1cblxuICBuZ09uSW5pdCgpOiB2b2lkIHtcbiAgfVxuXG4gIHNldERhdGVGcm9tSW5wdXQoZXZlbnQ6IEV2ZW50LCBpc0xlZnQ6IGJvb2xlYW4gPSBmYWxzZSk6IHZvaWQge1xuICAgIHRoaXMuZGF0ZUZyb21JbnB1dC5lbWl0KHsgZXZlbnQsIGlzTGVmdCB9KTtcbiAgfVxuXG59XG4iXX0=