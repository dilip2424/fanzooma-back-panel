import { EventEmitter, OnInit } from '@angular/core';
import { FormGroup } from '@angular/forms';
import { IDateRange, IDateRangePickerOptions, IDefinedDateRange, IChangedData } from '../../interfaces';
import * as momentNs from 'moment';
import * as ɵngcc0 from '@angular/core';
export declare class DateRangePickerComponent implements OnInit {
    options: IDateRangePickerOptions;
    controlName: string;
    instanceId: string;
    parentFormGroup: FormGroup;
    fromDate: momentNs.Moment;
    toDate: momentNs.Moment;
    datepickerReset: EventEmitter<any>;
    rangeSelected: EventEmitter<IDateRange>;
    defaultRanges: IDefinedDateRange[];
    isMobile: boolean;
    fromMonth: number;
    fromYear: number;
    toMonth: number;
    toYear: number;
    range: string;
    showCalendars: boolean;
    displayStyle: boolean;
    get enableApplyButton(): boolean;
    handleClick(event: Event): void;
    constructor();
    ngOnInit(): void;
    validateInputDates(): void;
    validateOptionDates(): void;
    checkChrome(): string;
    toggleCalendarVisibility(value?: boolean): void;
    1: any;
    setFromToMonthYear(fromDate?: momentNs.Moment, toDate?: momentNs.Moment): void;
    updateCalendar(): void;
    dateChanged(changedData: IChangedData): void;
    emitRangeSelected(data?: IDateRange): void;
    getMoment(value: any): momentNs.Moment;
    formatRangeAsString(): string;
    setRange(): void;
    setDateFromInput(event: {
        event: Event;
        isLeft: boolean;
    }): void;
    monthChanged(data: IChangedData): void;
    yearChanged(data: IChangedData): void;
    close(event: Event): void;
    reset(event: Event): void;
    apply(event: Event): void;
    applyPredefinedRange(event: {
        event: Event;
        definedDateRange: IDefinedDateRange;
    }): void;
    validateAndAssignPredefinedRanges(ranges: IDefinedDateRange[]): IDefinedDateRange[];
    static ɵfac: ɵngcc0.ɵɵFactoryDeclaration<DateRangePickerComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDeclaration<DateRangePickerComponent, "date-range-picker", never, { "options": "options"; "controlName": "controlName"; "instanceId": "instanceId"; "fromDate": "fromDate"; "toDate": "toDate"; "parentFormGroup": "parentFormGroup"; }, { "datepickerReset": "datepickerReset"; "rangeSelected": "rangeSelected"; }, never, ["*"]>;
}

//# sourceMappingURL=date-range-picker.component.d.ts.map