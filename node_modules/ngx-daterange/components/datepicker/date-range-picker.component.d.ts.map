{"version":3,"file":"date-range-picker.component.d.ts","sources":["date-range-picker.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, OnInit } from '@angular/core';\nimport { FormGroup } from '@angular/forms';\nimport { IDateRange, IDateRangePickerOptions, IDefinedDateRange, IChangedData } from '../../interfaces';\nimport * as momentNs from 'moment';\nexport declare class DateRangePickerComponent implements OnInit {\n    options: IDateRangePickerOptions;\n    controlName: string;\n    instanceId: string;\n    parentFormGroup: FormGroup;\n    fromDate: momentNs.Moment;\n    toDate: momentNs.Moment;\n    datepickerReset: EventEmitter<any>;\n    rangeSelected: EventEmitter<IDateRange>;\n    defaultRanges: IDefinedDateRange[];\n    isMobile: boolean;\n    fromMonth: number;\n    fromYear: number;\n    toMonth: number;\n    toYear: number;\n    range: string;\n    showCalendars: boolean;\n    displayStyle: boolean;\n    get enableApplyButton(): boolean;\n    handleClick(event: Event): void;\n    constructor();\n    ngOnInit(): void;\n    validateInputDates(): void;\n    validateOptionDates(): void;\n    checkChrome(): string;\n    toggleCalendarVisibility(value?: boolean): void;\n    1: any;\n    setFromToMonthYear(fromDate?: momentNs.Moment, toDate?: momentNs.Moment): void;\n    updateCalendar(): void;\n    dateChanged(changedData: IChangedData): void;\n    emitRangeSelected(data?: IDateRange): void;\n    getMoment(value: any): momentNs.Moment;\n    formatRangeAsString(): string;\n    setRange(): void;\n    setDateFromInput(event: {\n        event: Event;\n        isLeft: boolean;\n    }): void;\n    monthChanged(data: IChangedData): void;\n    yearChanged(data: IChangedData): void;\n    close(event: Event): void;\n    reset(event: Event): void;\n    apply(event: Event): void;\n    applyPredefinedRange(event: {\n        event: Event;\n        definedDateRange: IDefinedDateRange;\n    }): void;\n    validateAndAssignPredefinedRanges(ranges: IDefinedDateRange[]): IDefinedDateRange[];\n}\n"]}