import * as tslib_1 from "tslib";
import { Injectable, Inject } from '@angular/core';
import { LOCALE_CONFIG, DefaultLocaleConfig } from './daterangepicker.config';
import * as ɵngcc0 from '@angular/core';
let LocaleService = class LocaleService {
    constructor(_config) {
        this._config = _config;
    }
    get config() {
        if (!this._config) {
            return DefaultLocaleConfig;
        }
        return Object.assign({}, DefaultLocaleConfig, this._config);
    }
};
LocaleService.ɵfac = function LocaleService_Factory(t) { return new (t || LocaleService)(ɵngcc0.ɵɵinject(LOCALE_CONFIG)); };
LocaleService.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: LocaleService, factory: function (t) { return LocaleService.ɵfac(t); } });
LocaleService.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [LOCALE_CONFIG,] }] }
];
LocaleService = tslib_1.__decorate([ tslib_1.__param(0, Inject(LOCALE_CONFIG))
], LocaleService);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(LocaleService, [{
        type: Injectable
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [LOCALE_CONFIG]
            }] }]; }, null); })();
export { LocaleService };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9jYWxlLnNlcnZpY2UuanMiLCJzb3VyY2VzIjpbIm5neC1kYXRlcmFuZ2VwaWNrZXItbWF0ZXJpYWwvbG9jYWxlLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ25ELE9BQU8sRUFBRSxhQUFhLEVBQUUsbUJBQW1CLEVBQWdCLE1BQU0sMEJBQTBCLENBQUM7O0FBRzVGLElBQWEsYUFBYSxHQUExQixNQUFhLGFBQWE7QUFDMUIsSUFBRSxZQUEyQyxPQUFxQjtBQUFJLFFBQXpCLFlBQU8sR0FBUCxPQUFPLENBQWM7QUFBQyxJQUFFLENBQUM7QUFDdEUsSUFDRSxJQUFJLE1BQU07QUFDWixRQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFO0FBQ3ZCLFlBQU0sT0FBTyxtQkFBbUIsQ0FBQztBQUNqQyxTQUFLO0FBQ0wsUUFDSSx5QkFBWSxtQkFBbUIsRUFBSyxJQUFJLENBQUMsT0FBTyxFQUFFO0FBQ3RELElBQUUsQ0FBQztBQUNILENBQUM7O2lKQUFBO0FBQ0Q7QUFBdUMsNENBVnhCLE1BQU0sU0FBQyxhQUFhO0FBQVE7QUFEOUIsYUFBYSw0QkFEekIsVUFBVSxFQUFFLGpCQUNULENBQ1csbUJBQUEsTUFBTSxDQUFDLGFBQWEsQ0FBQyxDQUFBO0FBQUMsR0FEeEIsYUFBYSxDQVV6Qjs7Ozs7O2tDQUNEO0FBQUMsU0FYWSxhQUFhO0FBQ3pCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgSW5qZWN0YWJsZSwgSW5qZWN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBMT0NBTEVfQ09ORklHLCBEZWZhdWx0TG9jYWxlQ29uZmlnLCBMb2NhbGVDb25maWcgfSBmcm9tICcuL2RhdGVyYW5nZXBpY2tlci5jb25maWcnO1xuXG5ASW5qZWN0YWJsZSgpXG5leHBvcnQgY2xhc3MgTG9jYWxlU2VydmljZSB7XG4gIGNvbnN0cnVjdG9yKEBJbmplY3QoTE9DQUxFX0NPTkZJRykgcHJpdmF0ZSBfY29uZmlnOiBMb2NhbGVDb25maWcpIHt9XG5cbiAgZ2V0IGNvbmZpZygpIHtcbiAgICBpZiAoIXRoaXMuX2NvbmZpZykge1xuICAgICAgcmV0dXJuIERlZmF1bHRMb2NhbGVDb25maWc7XG4gICAgfVxuXG4gICAgcmV0dXJuIHsuLi4gRGVmYXVsdExvY2FsZUNvbmZpZywgLi4udGhpcy5fY29uZmlnfTtcbiAgfVxufVxuIl19