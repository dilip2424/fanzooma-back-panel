{"ast":null,"code":"function number_format(number, decimals = undefined, dec_point = undefined, thousands_sep = undefined) {\n  // *     example: number_format(1234.56, 2, ',', ' ');\n  // *     return: '1 234,56'\n  number = (number + \"\").replace(\",\", \"\").replace(\" \", \"\");\n\n  let n = !isFinite(+number) ? 0 : +number,\n      prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\n      sep = typeof thousands_sep === \"undefined\" ? \",\" : thousands_sep,\n      dec = typeof dec_point === \"undefined\" ? \".\" : dec_point,\n      s = \"\",\n      toFixedFix = function (n, prec) {\n    var k = Math.pow(10, prec);\n    return \"\" + Math.round(n * k) / k;\n  }; // Fix for IE parseFloat(0.55).toFixed(0) = 0;\n\n\n  s = (prec ? toFixedFix(n, prec) : \"\" + Math.round(n)).split(\".\");\n\n  if (s[0].length > 3) {\n    s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\n  }\n\n  if ((s[1] || \"\").length < prec) {\n    s[1] = s[1] || \"\";\n    s[1] += new Array(prec - s[1].length + 1).join(\"0\");\n  }\n\n  return s.join(dec);\n} //line chart\n\n\nconst commonProperties = {\n  animation: {\n    duration: 1000,\n    easing: \"easeOutBack\"\n  },\n  hover: {\n    animationDuration: 1000,\n    mode: \"label\"\n  },\n  responsiveAnimationDuration: 1000,\n  responsive: true,\n  maintainAspectRatio: false,\n  legend: {\n    position: \"bottom\"\n  },\n  elements: {\n    point: {\n      radius: 1\n    },\n    line: {\n      borderWidth: 2,\n      tension: 0\n    }\n  }\n};\nexport var lineChartOptionsForRoyalties = Object.assign(Object.assign({}, commonProperties), {\n  scales: {\n    xAxes: [{\n      display: true,\n      type: \"time\",\n      ticks: {\n        padding: 10,\n        maxTicksLimit: 6,\n        maxRotation: 0,\n        minRotation: 0\n      },\n      gridLines: {\n        color: \"#F5F5F5\",\n        drawTicks: false\n      },\n      scaleLabel: {\n        display: true,\n        labelString: \"Date\"\n      }\n    }],\n    yAxes: [{\n      display: true,\n      ticks: {\n        padding: 10\n      },\n      gridLines: {\n        color: \"#F5F5F5\",\n        drawTicks: false\n      },\n      scaleLabel: {\n        display: true,\n        labelString: \"Estimated Royalties\"\n      }\n    }]\n  },\n  title: {\n    display: true,\n    text: \"Estimated Royalty\"\n  }\n});\nexport var lineChartOptionsForPaymentHistory = Object.assign(Object.assign({}, commonProperties), {\n  scales: {\n    xAxes: [{\n      display: true,\n      ticks: {\n        padding: 10,\n        maxTicksLimit: 6,\n        maxRotation: 0,\n        minRotation: 0\n      },\n      gridLines: {\n        color: \"#F5F5F5\",\n        drawTicks: false\n      },\n      scaleLabel: {\n        display: true,\n        labelString: \"Date\"\n      }\n    }],\n    yAxes: [{\n      display: true,\n      ticks: {\n        padding: 10\n      },\n      gridLines: {\n        color: \"#F5F5F5\",\n        drawTicks: false\n      },\n      scaleLabel: {\n        display: true,\n        labelString: \"\"\n      }\n    }]\n  },\n  title: {\n    display: true,\n    text: \"\"\n  }\n});\nexport var lineChartOptionsForAccChannel = Object.assign(Object.assign({}, commonProperties), {\n  scales: {\n    xAxes: [{\n      display: true,\n      type: \"time\",\n      ticks: {\n        padding: 10,\n        maxTicksLimit: 6,\n        maxRotation: 0,\n        minRotation: 0\n      },\n      gridLines: {\n        color: \"#F5F5F5\",\n        drawTicks: false\n      },\n      scaleLabel: {\n        display: true,\n        labelString: \"Date\"\n      }\n    }],\n    yAxes: [{\n      display: true,\n      ticks: {\n        padding: 10\n      },\n      gridLines: {\n        color: \"#F5F5F5\",\n        drawTicks: false\n      },\n      scaleLabel: {\n        display: true,\n        labelString: \"\"\n      }\n    }]\n  },\n  title: {\n    display: true,\n    text: \"\"\n  }\n});\nexport var lineChartOptionsForAnalyticsChart = Object.assign(Object.assign({}, commonProperties), {\n  tooltips: {\n    callbacks: {\n      label: function (tooltipItem, chart) {\n        var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || \"\";\n        return datasetLabel + \": $ \" + number_format(tooltipItem.yLabel, 2);\n      }\n    }\n  },\n  scales: {\n    xAxes: [{\n      display: true,\n      type: \"time\",\n      ticks: {\n        padding: 10,\n        maxTicksLimit: 6,\n        maxRotation: 0,\n        minRotation: 0\n      },\n      gridLines: {\n        color: \"#F5F5F5\",\n        drawTicks: false\n      },\n      scaleLabel: {\n        display: true,\n        labelString: \"Date\"\n      }\n    }],\n    yAxes: [{\n      display: true,\n      ticks: {\n        padding: 10,\n        beginAtZero: true,\n        callback: function (value, index, values) {\n          return \"$ \" + number_format(value);\n        }\n      },\n      gridLines: {\n        color: \"#F5F5F5\",\n        drawTicks: false\n      },\n      scaleLabel: {\n        display: true,\n        labelString: \"\"\n      }\n    }]\n  },\n  title: {\n    display: true,\n    text: \"\"\n  }\n});\nexport var lineChartColorsForRoyalties = [{\n  lineTension: 0,\n  fill: false,\n  borderWidth: 1,\n  borderDash: [5],\n  borderColor: \"#975AFF\",\n  pointBorderColor: \"#975AFF\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}, {\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#F77E17\",\n  pointBorderColor: \"#F77E17\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}, {\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#40C057\",\n  pointBorderColor: \"#40C057\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}];\nexport var lineChartColorsForAccChannel = [{\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#F55252\",\n  pointBorderColor: \"#F55252\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}, {\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#F77E17\",\n  pointBorderColor: \"#F77E17\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}, {\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#40C057\",\n  pointBorderColor: \"#40C057\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}];\nexport var lineChartColorsForAccCreator = [{\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#40C057\",\n  pointBorderColor: \"#40C057\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}, {\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#F77E17\",\n  pointBorderColor: \"#F77E17\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}, {\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#40C057\",\n  pointBorderColor: \"#40C057\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}];\nexport var lineChartColorsForAccRightsHolder = [{\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#F77E17\",\n  pointBorderColor: \"#F77E17\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}, {\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#F77E17\",\n  pointBorderColor: \"#F77E17\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}, {\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#40C057\",\n  pointBorderColor: \"#40C057\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}];\nexport var lineChartColorsForAccArtist = [{\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#2F8BE6\",\n  pointBorderColor: \"#2F8BE6\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}, {\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#F77E17\",\n  pointBorderColor: \"#F77E17\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}, {\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#40C057\",\n  pointBorderColor: \"#40C057\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}];\nexport var lineChartColorsForContent = [{\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#F55252\",\n  pointBorderColor: \"#F55252\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}, {\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#F77E17\",\n  pointBorderColor: \"#F77E17\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}, {\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#40C057\",\n  pointBorderColor: \"#40C057\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}];\nexport var lineChartColorsForAll = [{\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#F55252\",\n  pointBorderColor: \"#F55252\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}, {\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#F77E17\",\n  pointBorderColor: \"#F77E17\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}, {\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#40C057\",\n  pointBorderColor: \"#40C057\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}];\nexport var lineChartColorsForAnalysis = [{\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#F55252\",\n  pointBorderColor: \"#F55252\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}, {\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#F77E17\",\n  pointBorderColor: \"#F77E17\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}, {\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#40C057\",\n  pointBorderColor: \"#40C057\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}];\nexport var lineChartColorsForAudioAvailable = [{\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#40C057\",\n  pointBorderColor: \"#40C057\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}, {\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#F77E17\",\n  pointBorderColor: \"#F77E17\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}, {\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#40C057\",\n  pointBorderColor: \"#40C057\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}];\nexport var lineChartColorsForCreatorAgreement = [{\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#F77E17\",\n  pointBorderColor: \"#F77E17\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}, {\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#F77E17\",\n  pointBorderColor: \"#F77E17\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}, {\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#40C057\",\n  pointBorderColor: \"#40C057\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}];\nexport var lineChartColorsForContractAssigned = [{\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#2F8BE6\",\n  pointBorderColor: \"#2F8BE6\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}, {\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#F77E17\",\n  pointBorderColor: \"#F77E17\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}, {\n  lineTension: 0,\n  fill: false,\n  borderColor: \"#40C057\",\n  pointBorderColor: \"#40C057\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderWidth: 1,\n  pointHoverBorderWidth: 2,\n  pointRadius: 1\n}];\nexport var lineChartLegend = true;\nexport var lineChartType = \"line\"; //area chart\n\nexport var areaChartOptions = Object.assign(Object.assign({}, commonProperties), {\n  scales: {\n    xAxes: [{\n      display: true,\n      type: \"time\",\n      ticks: {\n        padding: 10,\n        maxTicksLimit: 6,\n        maxRotation: 0,\n        minRotation: 0\n      },\n      gridLines: {\n        color: \"#F5F5F5\",\n        drawTicks: false\n      },\n      scaleLabel: {\n        display: true,\n        labelString: \"Date\"\n      }\n    }],\n    yAxes: [{\n      display: true,\n      ticks: {\n        padding: 10\n      },\n      gridLines: {\n        color: \"#F5F5F5\",\n        drawTicks: false\n      },\n      scaleLabel: {\n        display: true,\n        labelString: \"\"\n      }\n    }]\n  },\n  title: {\n    display: true,\n    text: \"\"\n  }\n});\nexport var areaChartColors = [{\n  backgroundColor: \"rgba(189, 189, 189, 0.3)\",\n  borderColor: \"transparent\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderColor: \"#BDBDBD\",\n  pointHoverBackgroundColor: \"rgba(255, 141, 96,1)\",\n  pointRadius: 1,\n  pointHoverBorderColor: \"#FFF\",\n  pointHoverRadius: \"5\",\n  pointBorderWidth: \"1\"\n}, {\n  backgroundColor: \"rgba(47, 139, 230, 0.7)\",\n  borderColor: \"transparent\",\n  pointBackgroundColor: \"#FFF\",\n  pointBorderColor: \"#2F8BE6\",\n  pointHoverBackgroundColor: \"#2F8BE6\",\n  pointRadius: 1,\n  pointHoverBorderColor: \"#FFF\",\n  pointHoverRadius: \"5\",\n  pointBorderWidth: \"1\"\n}];\nexport var areaChartLegend = true;\nexport var areaChartType = \"line\";","map":null,"metadata":{},"sourceType":"module"}