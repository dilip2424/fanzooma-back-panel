{"ast":null,"code":"import * as i0 from \"@angular/core\";\nexport let MatchHeightDirective = /*#__PURE__*/(() => {\n  class MatchHeightDirective {\n    constructor(el) {\n      this.el = el;\n    }\n\n    ngAfterViewInit() {\n      // call our matchHeight function here\n      setTimeout(() => {\n        this.matchHeights(this.el.nativeElement, this.matchHeight);\n      }, 300);\n    }\n\n    matchHeights(parent, className) {\n      // match height logic here\n      if (!parent) return; // step 1: find all the child elements with the selected class name\n\n      const children = parent.getElementsByClassName(className);\n      if (!children) return; //Pixinvent - Match hight - fix --- comment below code\n\n      Array.from(children).forEach(x => {\n        x.style.height = 'initial';\n      }); // step 2a: get all the child elements heights\n\n      const itemHeights = Array.from(children).map(x => x.getBoundingClientRect().height); // step 2b: find out the tallest\n\n      const maxHeight = itemHeights.reduce((prev, curr) => {\n        return curr > prev ? curr : prev;\n      }, 0); // step 3: update all the child elements to the tallest height\n\n      Array.from(children).forEach(x => x.style.height = `${maxHeight}px`);\n    }\n\n    onResize() {\n      // call our matchHeight function here\n      this.matchHeights(this.el.nativeElement, this.matchHeight);\n    }\n\n  }\n\n  MatchHeightDirective.ɵfac = function MatchHeightDirective_Factory(t) {\n    return new (t || MatchHeightDirective)(i0.ɵɵdirectiveInject(i0.ElementRef));\n  };\n\n  MatchHeightDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: MatchHeightDirective,\n    selectors: [[\"\", \"matchHeight\", \"\"]],\n    hostBindings: function MatchHeightDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"resize\", function MatchHeightDirective_resize_HostBindingHandler() {\n          return ctx.onResize();\n        }, false, i0.ɵɵresolveWindow);\n      }\n    },\n    inputs: {\n      matchHeight: \"matchHeight\"\n    }\n  });\n  return MatchHeightDirective;\n})();\nexport let MatchHeightModule = /*#__PURE__*/(() => {\n  class MatchHeightModule {}\n\n  MatchHeightModule.ɵfac = function MatchHeightModule_Factory(t) {\n    return new (t || MatchHeightModule)();\n  };\n\n  MatchHeightModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: MatchHeightModule\n  });\n  MatchHeightModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({});\n  return MatchHeightModule;\n})();","map":null,"metadata":{},"sourceType":"module"}