{"ast":null,"code":"import { Roles } from 'app/roles';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../auth/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"ngx-toastr\";\nexport let PermissionGuard = /*#__PURE__*/(() => {\n  class PermissionGuard {\n    constructor(authService, route, toaster) {\n      this.authService = authService;\n      this.route = route;\n      this.toaster = toaster;\n    }\n\n    canActivate(route, state) {\n      var _a;\n\n      const userType = (_a = this.authService.currentUserValue) === null || _a === void 0 ? void 0 : _a.role;\n      const hasAccess = route.data.permissions;\n      const isAllowed = hasAccess.includes(userType) || hasAccess.includes(Roles.ALLOW_ALL);\n      if (isAllowed) return true;\n      this.toaster.error('You are not authorized to access this page.', 'error', {\n        positionClass: 'toast-bottom-right'\n      });\n      this.route.navigate(['/dashboard']);\n      return false;\n    }\n\n  }\n\n  PermissionGuard.ɵfac = function PermissionGuard_Factory(t) {\n    return new (t || PermissionGuard)(i0.ɵɵinject(i1.AuthService), i0.ɵɵinject(i2.Router), i0.ɵɵinject(i3.ToastrService));\n  };\n\n  PermissionGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PermissionGuard,\n    factory: PermissionGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return PermissionGuard;\n})();","map":null,"metadata":{},"sourceType":"module"}