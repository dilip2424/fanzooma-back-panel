{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"app/core/service/auth/auth.service\";\nimport * as i5 from \"ngx-toastr\";\nconst _c0 = [\"f\"];\n\nfunction ForgotPasswordPageComponent_ul_15_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const error_r7 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", error_r7, \" \");\n  }\n}\n\nfunction ForgotPasswordPageComponent_ul_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 23);\n    i0.ɵɵtemplate(1, ForgotPasswordPageComponent_ul_15_li_1_Template, 2, 1, \"li\", 24);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.finalsuccess);\n  }\n}\n\nfunction ForgotPasswordPageComponent_ul_16_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const error_r9 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", error_r9, \" \");\n  }\n}\n\nfunction ForgotPasswordPageComponent_ul_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ul\", 25);\n    i0.ɵɵtemplate(1, ForgotPasswordPageComponent_ul_16_li_1_Template, 2, 1, \"li\", 24);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.finalerror);\n  }\n}\n\nfunction ForgotPasswordPageComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtext(1, \" Email is required. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ForgotPasswordPageComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtext(1, \" Invalid Email.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ForgotPasswordPageComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵelement(1, \"i\", 27);\n    i0.ɵɵtext(2, \" Please verify you're not robot. \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction ForgotPasswordPageComponent_i_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"i\", 28);\n  }\n}\n\nconst _c1 = function (a0, a1) {\n  return {\n    \"is-invalid\": a0,\n    \"is-valid\": a1\n  };\n};\n\nconst _c2 = function () {\n  return [\"/login\"];\n};\n\nexport let ForgotPasswordPageComponent = /*#__PURE__*/(() => {\n  class ForgotPasswordPageComponent {\n    constructor(router, location, locationStrategy, route, fb, authService, toastr, cd) {\n      this.router = router;\n      this.location = location;\n      this.locationStrategy = locationStrategy;\n      this.route = route;\n      this.fb = fb;\n      this.authService = authService;\n      this.toastr = toastr;\n      this.cd = cd;\n      this.forgotpasswordFormSubmitted = false;\n      this.isforgotpasswordFailed = false;\n      this.unsubscribe = [];\n      this.finalerror = [];\n      this.finalsuccess = [];\n      this.isLoading$ = this.authService.isLoading$;\n    }\n\n    ngOnInit() {\n      this.initForm();\n    }\n\n    initForm() {\n      this.forgotpassword = this.fb.group({\n        email: ['', [Validators.required, Validators.email]],\n        token: ['', [Validators.required]]\n      });\n    }\n\n    get lf() {\n      return this.forgotpassword.controls;\n    }\n\n    onSubmit() {\n      this.forgotpasswordFormSubmitted = true;\n\n      if (this.forgotpassword.invalid) {\n        return;\n      }\n\n      const loginSubscr = this.authService.forgotpassword({\n        email: this.lf.email.value,\n        url: location.origin + '/reset-password/'\n      }).subscribe(data => {\n        this.forgotpasswordFormSubmitted = false;\n        this.finalerror = [];\n        this.finalsuccess.push(data.message);\n        this.forgotpassword.reset();\n      }, err => {\n        this.finalerror = [];\n\n        if (err.status === 422) {\n          if (err.error.errors) {\n            const receivederror = err.error.errors;\n\n            for (var key in receivederror) {\n              if (typeof receivederror[key] !== 'undefined') {\n                this.finalerror.push(key + ' : ' + receivederror[key].message);\n              }\n            }\n          }\n\n          this.toastr.error(err.error.message, 'Error', {\n            positionClass: 'toast-top-right'\n          });\n        } else {\n          this.finalerror.push(err.error.message);\n        }\n\n        this.cd.markForCheck();\n      });\n      this.unsubscribe.push(loginSubscr);\n    }\n\n  }\n\n  ForgotPasswordPageComponent.ɵfac = function ForgotPasswordPageComponent_Factory(t) {\n    return new (t || ForgotPasswordPageComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.Location), i0.ɵɵdirectiveInject(i2.LocationStrategy), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.AuthService), i0.ɵɵdirectiveInject(i5.ToastrService), i0.ɵɵdirectiveInject(i0.ChangeDetectorRef));\n  };\n\n  ForgotPasswordPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ForgotPasswordPageComponent,\n    selectors: [[\"app-forgot-password-page\"]],\n    viewQuery: function ForgotPasswordPageComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.forogtPasswordForm = _t.first);\n      }\n    },\n    decls: 31,\n    vars: 15,\n    consts: [[3, \"formGroup\", \"ngSubmit\"], [\"id\", \"forgot-password\"], [1, \"row\", \"auth-height\", \"full-height-vh\", \"m-0\", \"d-flex\", \"align-items-center\", \"justify-content-center\"], [1, \"col-md-7\", \"col-12\"], [1, \"card\", \"overflow-hidden\"], [1, \"card-content\"], [1, \"card-body\", \"auth-img\"], [1, \"row\", \"m-0\"], [1, \"col-lg-6\", \"d-none\", \"d-lg-flex\", \"justify-content-center\", \"align-items-center\", \"text-center\", \"auth-img-bg\", \"py-2\"], [\"src\", \"assets/img/gallery/forgot.png\", \"alt\", \"\", \"width\", \"260\", \"height\", \"230\", 1, \"img-fluid\"], [1, \"col-lg-6\", \"col-md-12\", \"px-4\", \"py-3\"], [1, \"mb-2\", \"card-title\"], [1, \"card-text\", \"mb-3\"], [\"class\", \"successclass\", 4, \"ngIf\"], [\"class\", \"errorsclass\", 4, \"ngIf\"], [1, \"form-group\"], [\"type\", \"text\", \"formControlName\", \"email\", \"placeholder\", \"email\", \"required\", \"\", 1, \"form-control\", 3, \"ngClass\"], [\"class\", \"help-block mt-1 text-danger\", 4, \"ngIf\"], [\"formControlName\", \"token\"], [1, \"d-flex\", \"flex-sm-row\", \"flex-column\", \"justify-content-between\"], [1, \"btn\", \"bg-light-primary\", \"mb-2\", \"mb-sm-0\", 3, \"routerLink\"], [1, \"btn\", \"btn-primary\", \"ml-sm-1\"], [\"class\", \"fa fa-spinner fa-spin\", 4, \"ngIf\"], [1, \"successclass\"], [4, \"ngFor\", \"ngForOf\"], [1, \"errorsclass\"], [1, \"help-block\", \"mt-1\", \"text-danger\"], [1, \"ft-alert-circle\", \"align-middle\"], [1, \"fa\", \"fa-spinner\", \"fa-spin\"]],\n    template: function ForgotPasswordPageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function ForgotPasswordPageComponent_Template_form_ngSubmit_0_listener() {\n          return ctx.onSubmit();\n        });\n        i0.ɵɵelementStart(1, \"section\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵelementStart(6, \"div\", 6);\n        i0.ɵɵelementStart(7, \"div\", 7);\n        i0.ɵɵelementStart(8, \"div\", 8);\n        i0.ɵɵelement(9, \"img\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 10);\n        i0.ɵɵelementStart(11, \"h4\", 11);\n        i0.ɵɵtext(12, \"Recover Password\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"p\", 12);\n        i0.ɵɵtext(14, \"Please enter your email address and we'll send you instructions on how to reset your password.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, ForgotPasswordPageComponent_ul_15_Template, 2, 1, \"ul\", 13);\n        i0.ɵɵtemplate(16, ForgotPasswordPageComponent_ul_16_Template, 2, 1, \"ul\", 14);\n        i0.ɵɵelementStart(17, \"div\", 15);\n        i0.ɵɵelement(18, \"input\", 16);\n        i0.ɵɵtemplate(19, ForgotPasswordPageComponent_div_19_Template, 2, 0, \"div\", 17);\n        i0.ɵɵtemplate(20, ForgotPasswordPageComponent_div_20_Template, 2, 0, \"div\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 15);\n        i0.ɵɵelement(22, \"re-captcha\", 18);\n        i0.ɵɵtemplate(23, ForgotPasswordPageComponent_div_23_Template, 3, 0, \"div\", 17);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 19);\n        i0.ɵɵelementStart(25, \"a\", 20);\n        i0.ɵɵtext(26, \"Back To Login\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"button\", 21);\n        i0.ɵɵtext(28, \"Recover \");\n        i0.ɵɵtemplate(29, ForgotPasswordPageComponent_i_29_Template, 1, 0, \"i\", 22);\n        i0.ɵɵpipe(30, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.forgotpassword);\n        i0.ɵɵadvance(15);\n        i0.ɵɵproperty(\"ngIf\", ctx.finalsuccess);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.finalerror);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(11, _c1, ctx.forgotpasswordFormSubmitted && ctx.lf.email.invalid, ctx.forgotpasswordFormSubmitted && !ctx.lf.email.invalid));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.forgotpasswordFormSubmitted && (ctx.lf.email.errors == null ? null : ctx.lf.email.errors.required));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.forgotpasswordFormSubmitted && (ctx.lf.email.errors == null ? null : ctx.lf.email.errors.email));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.forgotpasswordFormSubmitted && (ctx.lf.token.invalid || (ctx.lf.token.errors == null ? null : ctx.lf.token.errors.required)));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(14, _c2));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(30, 9, ctx.isLoading$));\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i2.NgIf, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i3.RequiredValidator, i2.NgClass, i1.RouterLinkWithHref, i2.NgForOf],\n    pipes: [i2.AsyncPipe],\n    styles: [\"\"]\n  });\n  return ForgotPasswordPageComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}