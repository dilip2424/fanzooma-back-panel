import { __decorate } from "tslib";
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { WizardCompletionStepComponent } from './components/wizard-completion-step.component';
import { WizardNavigationBarComponent } from './components/wizard-navigation-bar.component';
import { WizardStepComponent } from './components/wizard-step.component';
import { WizardComponent } from './components/wizard.component';
import { EnableBackLinksDirective } from './directives/enable-back-links.directive';
import { GoToStepDirective } from './directives/go-to-step.directive';
import { NextStepDirective } from './directives/next-step.directive';
import { OptionalStepDirective } from './directives/optional-step.directive';
import { PreviousStepDirective } from './directives/previous-step.directive';
import { ResetWizardDirective } from './directives/reset-wizard.directive';
import { SelectedStepDirective } from './directives/selected-step.directive';
import { WizardCompletionStepDirective } from './directives/wizard-completion-step.directive';
import { WizardStepSymbolDirective } from './directives/wizard-step-symbol.directive';
import { WizardStepTitleDirective } from './directives/wizard-step-title.directive';
import { WizardStepDirective } from './directives/wizard-step.directive';
import { NavigationModeDirective } from './directives/navigation-mode.directive';
import { CompletedStepDirective } from './directives/completed-step.directive';
/**
 * The module defining all the content inside `angular-archwizard`
 *
 * @author Marc Arndt
 */
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';
var ArchwizardModule = /** @class */ (function () {
    function ArchwizardModule() {
    }
    ArchwizardModule_1 = ArchwizardModule;
    /* istanbul ignore next */
    ArchwizardModule.forRoot = function () {
        return {
            ngModule: ArchwizardModule_1,
            providers: [
            // Nothing here yet
            ]
        };
    };
    var ArchwizardModule_1;
ArchwizardModule.ɵfac = function ArchwizardModule_Factory(t) { return new (t || ArchwizardModule)(); };
ArchwizardModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ArchwizardModule });
ArchwizardModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[
            CommonModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ArchwizardModule, [{
        type: NgModule,
        args: [{
                declarations: [
                    WizardComponent,
                    WizardStepComponent,
                    WizardNavigationBarComponent,
                    WizardCompletionStepComponent,
                    GoToStepDirective,
                    NextStepDirective,
                    PreviousStepDirective,
                    OptionalStepDirective,
                    WizardStepSymbolDirective,
                    WizardStepTitleDirective,
                    EnableBackLinksDirective,
                    WizardStepDirective,
                    WizardCompletionStepDirective,
                    SelectedStepDirective,
                    ResetWizardDirective,
                    NavigationModeDirective,
                    CompletedStepDirective,
                ],
                imports: [
                    CommonModule
                ],
                exports: [
                    WizardComponent,
                    WizardStepComponent,
                    WizardNavigationBarComponent,
                    WizardCompletionStepComponent,
                    GoToStepDirective,
                    NextStepDirective,
                    PreviousStepDirective,
                    OptionalStepDirective,
                    WizardStepSymbolDirective,
                    WizardStepTitleDirective,
                    EnableBackLinksDirective,
                    WizardStepDirective,
                    WizardCompletionStepDirective,
                    SelectedStepDirective,
                    ResetWizardDirective,
                    NavigationModeDirective,
                    CompletedStepDirective,
                ]
            }]
    }], function () { return []; }, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ArchwizardModule, { declarations: function () { return [WizardComponent,
        WizardStepComponent,
        WizardNavigationBarComponent,
        WizardCompletionStepComponent,
        GoToStepDirective,
        NextStepDirective,
        PreviousStepDirective,
        OptionalStepDirective,
        WizardStepSymbolDirective,
        WizardStepTitleDirective,
        EnableBackLinksDirective,
        WizardStepDirective,
        WizardCompletionStepDirective,
        SelectedStepDirective,
        ResetWizardDirective,
        NavigationModeDirective,
        CompletedStepDirective]; }, imports: function () { return [CommonModule]; }, exports: function () { return [WizardComponent,
        WizardStepComponent,
        WizardNavigationBarComponent,
        WizardCompletionStepComponent,
        GoToStepDirective,
        NextStepDirective,
        PreviousStepDirective,
        OptionalStepDirective,
        WizardStepSymbolDirective,
        WizardStepTitleDirective,
        EnableBackLinksDirective,
        WizardStepDirective,
        WizardCompletionStepDirective,
        SelectedStepDirective,
        ResetWizardDirective,
        NavigationModeDirective,
        CompletedStepDirective]; } }); })();
ɵngcc0.ɵɵsetComponentScope(WizardComponent, [ɵngcc1.NgIf, WizardNavigationBarComponent, ɵngcc1.NgClass], []);
    return ArchwizardModule;
}());
export { ArchwizardModule };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJjaHdpemFyZC5tb2R1bGUuanMiLCJzb3VyY2VzIjpbImFuZ3VsYXItYXJjaHdpemFyZC9saWIvYXJjaHdpemFyZC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBQyxZQUFZLEVBQUMsTUFBTSxpQkFBaUIsQ0FBQztBQUM3QyxPQUFPLEVBQXNCLFFBQVEsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUM1RCxPQUFPLEVBQUMsNkJBQTZCLEVBQUMsTUFBTSwrQ0FBK0MsQ0FBQztBQUM1RixPQUFPLEVBQUMsNEJBQTRCLEVBQUMsTUFBTSw4Q0FBOEMsQ0FBQztBQUMxRixPQUFPLEVBQUMsbUJBQW1CLEVBQUMsTUFBTSxvQ0FBb0MsQ0FBQztBQUN2RSxPQUFPLEVBQUMsZUFBZSxFQUFDLE1BQU0sK0JBQStCLENBQUM7QUFDOUQsT0FBTyxFQUFDLHdCQUF3QixFQUFDLE1BQU0sMENBQTBDLENBQUM7QUFDbEYsT0FBTyxFQUFDLGlCQUFpQixFQUFDLE1BQU0sbUNBQW1DLENBQUM7QUFDcEUsT0FBTyxFQUFDLGlCQUFpQixFQUFDLE1BQU0sa0NBQWtDLENBQUM7QUFDbkUsT0FBTyxFQUFDLHFCQUFxQixFQUFDLE1BQU0sc0NBQXNDLENBQUM7QUFDM0UsT0FBTyxFQUFDLHFCQUFxQixFQUFDLE1BQU0sc0NBQXNDLENBQUM7QUFDM0UsT0FBTyxFQUFDLG9CQUFvQixFQUFDLE1BQU0scUNBQXFDLENBQUM7QUFDekUsT0FBTyxFQUFDLHFCQUFxQixFQUFDLE1BQU0sc0NBQXNDLENBQUM7QUFDM0UsT0FBTyxFQUFDLDZCQUE2QixFQUFDLE1BQU0sK0NBQStDLENBQUM7QUFDNUYsT0FBTyxFQUFDLHlCQUF5QixFQUFDLE1BQU0sMkNBQTJDLENBQUM7QUFDcEYsT0FBTyxFQUFDLHdCQUF3QixFQUFDLE1BQU0sMENBQTBDLENBQUM7QUFDbEYsT0FBTyxFQUFDLG1CQUFtQixFQUFDLE1BQU0sb0NBQW9DLENBQUM7QUFDdkUsT0FBTyxFQUFDLHVCQUF1QixFQUFDLE1BQU0sd0NBQXdDLENBQUM7QUFDL0UsT0FBTyxFQUFDLHNCQUFzQixFQUFDLE1BQU0sdUNBQXVDLENBQUM7QUFHN0U7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOzs7QUE0Q0g7QUFDb0IsSUFEcEI7QUFBOEIsSUFVOUIsQ0FBQztBQUNELHlCQVhhLGdCQUFnQjtBQUFFLElBQzdCLDBCQUEwQjtBQUM1QixJQUFnQix3QkFBTyxHQUFyQjtBQUFjLFFBQ1osT0FBTztBQUNYLFlBQU0sUUFBUSxFQUFFLGtCQUFnQjtBQUNoQyxZQUFNLFNBQVMsRUFBRTtBQUNqQixZQUFRLG1CQUFtQjtBQUMzQixhQUFPO0FBQ1AsU0FBSyxDQUFDO0FBQ04sSUFBRSxDQUFDO0FBQ0Y7SUFWWSxnQkFBZ0IsNkNBM0M1QixRQUFRLENBQUMsY0FDUixZQUFZLEVBQUU7Z0JBQ1osZUFBZSxrQkFDZixtQkFBbUIsa0JBQ25CO3VCQUE0QixrQkFDNUIsNkJBQTZCO1lBQzdCO0lBQWlCO09BQ2pCLGlCQUFpQixrQkFDakIscUJBQXFCLGtCQUNyQixxQkFBcUI7UUFDckI7U0FBeUI7VUFDekI7RUFBd0Isa0JBQ3hCO09BQXdCLGtCQUN4QjtHQUFtQixrQkFDbkI7QUFBNkIsa0JBQzdCLHFCQUFxQjtNQUNyQixvQkFBb0I7S0FDcEIsdUJBQXVCO09BQ3ZCLHNCQUFzQjtDQUN2QixjQUNELE9BQU8sRUFBRSxrQkFDUDtXQUFZLGNBQ2IsY0FDRCxPQUFPO0NBQUUsa0JBQ1AsZUFBZTtNQUNmLG1CQUFtQixrQkFDbkI7eUJBQTRCO0VBQzVCLDZCQUE2QixrQkFDN0I7ZUFBaUIsa0JBQ2pCO09BQWlCLGtCQUNqQjtJQUFxQixrQkFDckIscUJBQXFCO2dCQUNyQix5QkFBeUI7ZUFDekI7b0JBQXdCO1dBQ3hCO0VBQXdCO0NBQ3hCLG1CQUFtQjtXQUNuQjtHQUE2QixrQkFDN0I7Q0FBcUIsa0JBQ3JCLG9CQUFvQjtPQUNwQix1QkFBdUIsa0JBQ3ZCO21CQUFzQixlQUN2QjtLQUNGLENBQUMsUUFDVyxnQkFBZ0IsQ0FVNUI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs2R0FDRDtBQUFDLElBREQsdUJBQUM7QUFDQSxDQURBLEFBVkQsSUFVQztBQUNELFNBWGEsZ0JBQWdCO0FBQzVCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21tb25Nb2R1bGV9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XG5pbXBvcnQge01vZHVsZVdpdGhQcm92aWRlcnMsIE5nTW9kdWxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7V2l6YXJkQ29tcGxldGlvblN0ZXBDb21wb25lbnR9IGZyb20gJy4vY29tcG9uZW50cy93aXphcmQtY29tcGxldGlvbi1zdGVwLmNvbXBvbmVudCc7XG5pbXBvcnQge1dpemFyZE5hdmlnYXRpb25CYXJDb21wb25lbnR9IGZyb20gJy4vY29tcG9uZW50cy93aXphcmQtbmF2aWdhdGlvbi1iYXIuY29tcG9uZW50JztcbmltcG9ydCB7V2l6YXJkU3RlcENvbXBvbmVudH0gZnJvbSAnLi9jb21wb25lbnRzL3dpemFyZC1zdGVwLmNvbXBvbmVudCc7XG5pbXBvcnQge1dpemFyZENvbXBvbmVudH0gZnJvbSAnLi9jb21wb25lbnRzL3dpemFyZC5jb21wb25lbnQnO1xuaW1wb3J0IHtFbmFibGVCYWNrTGlua3NEaXJlY3RpdmV9IGZyb20gJy4vZGlyZWN0aXZlcy9lbmFibGUtYmFjay1saW5rcy5kaXJlY3RpdmUnO1xuaW1wb3J0IHtHb1RvU3RlcERpcmVjdGl2ZX0gZnJvbSAnLi9kaXJlY3RpdmVzL2dvLXRvLXN0ZXAuZGlyZWN0aXZlJztcbmltcG9ydCB7TmV4dFN0ZXBEaXJlY3RpdmV9IGZyb20gJy4vZGlyZWN0aXZlcy9uZXh0LXN0ZXAuZGlyZWN0aXZlJztcbmltcG9ydCB7T3B0aW9uYWxTdGVwRGlyZWN0aXZlfSBmcm9tICcuL2RpcmVjdGl2ZXMvb3B0aW9uYWwtc3RlcC5kaXJlY3RpdmUnO1xuaW1wb3J0IHtQcmV2aW91c1N0ZXBEaXJlY3RpdmV9IGZyb20gJy4vZGlyZWN0aXZlcy9wcmV2aW91cy1zdGVwLmRpcmVjdGl2ZSc7XG5pbXBvcnQge1Jlc2V0V2l6YXJkRGlyZWN0aXZlfSBmcm9tICcuL2RpcmVjdGl2ZXMvcmVzZXQtd2l6YXJkLmRpcmVjdGl2ZSc7XG5pbXBvcnQge1NlbGVjdGVkU3RlcERpcmVjdGl2ZX0gZnJvbSAnLi9kaXJlY3RpdmVzL3NlbGVjdGVkLXN0ZXAuZGlyZWN0aXZlJztcbmltcG9ydCB7V2l6YXJkQ29tcGxldGlvblN0ZXBEaXJlY3RpdmV9IGZyb20gJy4vZGlyZWN0aXZlcy93aXphcmQtY29tcGxldGlvbi1zdGVwLmRpcmVjdGl2ZSc7XG5pbXBvcnQge1dpemFyZFN0ZXBTeW1ib2xEaXJlY3RpdmV9IGZyb20gJy4vZGlyZWN0aXZlcy93aXphcmQtc3RlcC1zeW1ib2wuZGlyZWN0aXZlJztcbmltcG9ydCB7V2l6YXJkU3RlcFRpdGxlRGlyZWN0aXZlfSBmcm9tICcuL2RpcmVjdGl2ZXMvd2l6YXJkLXN0ZXAtdGl0bGUuZGlyZWN0aXZlJztcbmltcG9ydCB7V2l6YXJkU3RlcERpcmVjdGl2ZX0gZnJvbSAnLi9kaXJlY3RpdmVzL3dpemFyZC1zdGVwLmRpcmVjdGl2ZSc7XG5pbXBvcnQge05hdmlnYXRpb25Nb2RlRGlyZWN0aXZlfSBmcm9tICcuL2RpcmVjdGl2ZXMvbmF2aWdhdGlvbi1tb2RlLmRpcmVjdGl2ZSc7XG5pbXBvcnQge0NvbXBsZXRlZFN0ZXBEaXJlY3RpdmV9IGZyb20gJy4vZGlyZWN0aXZlcy9jb21wbGV0ZWQtc3RlcC5kaXJlY3RpdmUnO1xuXG5cbi8qKlxuICogVGhlIG1vZHVsZSBkZWZpbmluZyBhbGwgdGhlIGNvbnRlbnQgaW5zaWRlIGBhbmd1bGFyLWFyY2h3aXphcmRgXG4gKlxuICogQGF1dGhvciBNYXJjIEFybmR0XG4gKi9cbkBOZ01vZHVsZSh7XG4gIGRlY2xhcmF0aW9uczogW1xuICAgIFdpemFyZENvbXBvbmVudCxcbiAgICBXaXphcmRTdGVwQ29tcG9uZW50LFxuICAgIFdpemFyZE5hdmlnYXRpb25CYXJDb21wb25lbnQsXG4gICAgV2l6YXJkQ29tcGxldGlvblN0ZXBDb21wb25lbnQsXG4gICAgR29Ub1N0ZXBEaXJlY3RpdmUsXG4gICAgTmV4dFN0ZXBEaXJlY3RpdmUsXG4gICAgUHJldmlvdXNTdGVwRGlyZWN0aXZlLFxuICAgIE9wdGlvbmFsU3RlcERpcmVjdGl2ZSxcbiAgICBXaXphcmRTdGVwU3ltYm9sRGlyZWN0aXZlLFxuICAgIFdpemFyZFN0ZXBUaXRsZURpcmVjdGl2ZSxcbiAgICBFbmFibGVCYWNrTGlua3NEaXJlY3RpdmUsXG4gICAgV2l6YXJkU3RlcERpcmVjdGl2ZSxcbiAgICBXaXphcmRDb21wbGV0aW9uU3RlcERpcmVjdGl2ZSxcbiAgICBTZWxlY3RlZFN0ZXBEaXJlY3RpdmUsXG4gICAgUmVzZXRXaXphcmREaXJlY3RpdmUsXG4gICAgTmF2aWdhdGlvbk1vZGVEaXJlY3RpdmUsXG4gICAgQ29tcGxldGVkU3RlcERpcmVjdGl2ZSxcbiAgXSxcbiAgaW1wb3J0czogW1xuICAgIENvbW1vbk1vZHVsZVxuICBdLFxuICBleHBvcnRzOiBbXG4gICAgV2l6YXJkQ29tcG9uZW50LFxuICAgIFdpemFyZFN0ZXBDb21wb25lbnQsXG4gICAgV2l6YXJkTmF2aWdhdGlvbkJhckNvbXBvbmVudCxcbiAgICBXaXphcmRDb21wbGV0aW9uU3RlcENvbXBvbmVudCxcbiAgICBHb1RvU3RlcERpcmVjdGl2ZSxcbiAgICBOZXh0U3RlcERpcmVjdGl2ZSxcbiAgICBQcmV2aW91c1N0ZXBEaXJlY3RpdmUsXG4gICAgT3B0aW9uYWxTdGVwRGlyZWN0aXZlLFxuICAgIFdpemFyZFN0ZXBTeW1ib2xEaXJlY3RpdmUsXG4gICAgV2l6YXJkU3RlcFRpdGxlRGlyZWN0aXZlLFxuICAgIEVuYWJsZUJhY2tMaW5rc0RpcmVjdGl2ZSxcbiAgICBXaXphcmRTdGVwRGlyZWN0aXZlLFxuICAgIFdpemFyZENvbXBsZXRpb25TdGVwRGlyZWN0aXZlLFxuICAgIFNlbGVjdGVkU3RlcERpcmVjdGl2ZSxcbiAgICBSZXNldFdpemFyZERpcmVjdGl2ZSxcbiAgICBOYXZpZ2F0aW9uTW9kZURpcmVjdGl2ZSxcbiAgICBDb21wbGV0ZWRTdGVwRGlyZWN0aXZlLFxuICBdXG59KVxuZXhwb3J0IGNsYXNzIEFyY2h3aXphcmRNb2R1bGUge1xuICAvKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAqL1xuICBwdWJsaWMgc3RhdGljIGZvclJvb3QoKTogTW9kdWxlV2l0aFByb3ZpZGVyczxBcmNod2l6YXJkTW9kdWxlPiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBBcmNod2l6YXJkTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIC8vIE5vdGhpbmcgaGVyZSB5ZXRcbiAgICAgIF1cbiAgICB9O1xuICB9XG59XG4iXX0=