{"version":3,"file":"init.js","sources":["../../../../../../packages/platform-server/src/domino_adapter.ts","../../../../../../packages/platform-server/init/src/shims.ts","../../../../../../packages/platform-server/init/src/init.ts","../../../../../../packages/platform-server/init/public_api.ts","../../../../../../packages/platform-server/init/index.ts","../../../../../../packages/platform-server/init/init.ts"],"names":["BrowserDomAdapter","setRootDomAdapter"],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst domino = require('domino');\n\nimport {ɵBrowserDomAdapter as BrowserDomAdapter} from '@angular/platform-browser';\nimport {ɵsetRootDomAdapter as setRootDomAdapter} from '@angular/common';\n\nexport function setDomTypes() {\n  // Make all Domino types available in the global env.\n  Object.assign(global, domino.impl);\n  (global as any)['KeyboardEvent'] = domino.impl.Event;\n}\n\n/**\n * Parses a document string to a Document object.\n */\nexport function parseDocument(html: string, url = '/') {\n  let window = domino.createWindow(html, url);\n  let doc = window.document;\n  return doc;\n}\n\n/**\n * Serializes a document to string.\n */\nexport function serializeDocument(doc: Document): string {\n  return (doc as any).serialize();\n}\n\n/**\n * DOM Adapter for the server platform based on https://github.com/fgnass/domino.\n */\nexport class DominoAdapter extends BrowserDomAdapter {\n  static makeCurrent() {\n    setDomTypes();\n    setRootDomAdapter(new DominoAdapter());\n  }\n\n  readonly supportsDOMEvents = false;\n  private static defaultDoc: Document;\n\n  createHtmlDocument(): HTMLDocument {\n    return parseDocument('<html><head><title>fakeTitle</title></head><body></body></html>');\n  }\n\n  getDefaultDocument(): Document {\n    if (!DominoAdapter.defaultDoc) {\n      DominoAdapter.defaultDoc = domino.createDocument();\n    }\n    return DominoAdapter.defaultDoc;\n  }\n\n  isElementNode(node: any): boolean {\n    return node ? node.nodeType === DominoAdapter.defaultDoc.ELEMENT_NODE : false;\n  }\n  isShadowRoot(node: any): boolean {\n    return node.shadowRoot == node;\n  }\n\n  /** @deprecated No longer being used in Ivy code. To be removed in version 14. */\n  getGlobalEventTarget(doc: Document, target: string): EventTarget|null {\n    if (target === 'window') {\n      return doc.defaultView;\n    }\n    if (target === 'document') {\n      return doc;\n    }\n    if (target === 'body') {\n      return doc.body;\n    }\n    return null;\n  }\n\n  getBaseHref(doc: Document): string {\n    // TODO(alxhub): Need relative path logic from BrowserDomAdapter here?\n    return doc.documentElement!.querySelector('base')?.getAttribute('href') || '';\n  }\n\n  dispatchEvent(el: Node, evt: any) {\n    el.dispatchEvent(evt);\n\n    // Dispatch the event to the window also.\n    const doc = el.ownerDocument || el;\n    const win = (doc as any).defaultView;\n    if (win) {\n      win.dispatchEvent(evt);\n    }\n  }\n\n  getUserAgent(): string {\n    return 'Fake user agent';\n  }\n\n  getCookie(name: string): string {\n    throw new Error('getCookie has not been implemented');\n  }\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport {setDomTypes} from '../../src/domino_adapter';\n\n/**\n * Apply the necessary shims to make DOM globals (such as `Element`, `HTMLElement`, etc.) available\n * on the environment.\n */\nexport function applyShims(): void {\n  setDomTypes();\n}\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all initialization APIs of the platform-server package.\n */\n\nimport {applyShims} from './shims';\n\napplyShims();\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * Entry point for all public APIs of this package.\n */\nexport * from './src/init';\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// This file is not used to build this module. It is only used during editing\n// by the TypeScript language service and during build for verifcation. `ngc`\n// replaces this file with production index.ts when it rewrites private symbol\n// names.\n\nexport * from './public_api';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"]}