{"version":3,"file":"src_app_pages_content-pages_content-pages_module_ts.js","mappings":"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","sources":["./node_modules/rxjs/_esm2015/internal/observable/interval.js","./src/app/pages/content-pages/coming-soon/coming-soon-page.component.ts","./src/app/pages/content-pages/coming-soon/coming-soon-page.component.html","./src/app/pages/content-pages/content-pages-routing.module.ts","./src/app/pages/content-pages/content-pages.module.ts","./src/app/pages/content-pages/error/error-page.component.ts","./src/app/pages/content-pages/error/error-page.component.html","./src/app/pages/content-pages/forgot-password/forgot-password-page.component.ts","./src/app/pages/content-pages/forgot-password/forgot-password-page.component.html","./src/app/pages/content-pages/lock-screen/lock-screen-page.component.ts","./src/app/pages/content-pages/lock-screen/lock-screen-page.component.html","./src/app/pages/content-pages/login/login-page.component.ts","./src/app/pages/content-pages/login/login-page.component.html","./src/app/pages/content-pages/maintenance/maintenance-page.component.ts","./src/app/pages/content-pages/maintenance/maintenance-page.component.html","./src/app/pages/content-pages/reset-password/reset-password.component.ts","./src/app/pages/content-pages/reset-password/reset-password.component.html"],"sourcesContent":["import { Observable } from '../Observable';\nimport { async } from '../scheduler/async';\nimport { isNumeric } from '../util/isNumeric';\nexport function interval(period = 0, scheduler = async) {\n    if (!isNumeric(period) || period < 0) {\n        period = 0;\n    }\n    if (!scheduler || typeof scheduler.schedule !== 'function') {\n        scheduler = async;\n    }\n    return new Observable(subscriber => {\n        subscriber.add(scheduler.schedule(dispatch, period, { subscriber, counter: 0, period }));\n        return subscriber;\n    });\n}\nfunction dispatch(state) {\n    const { subscriber, counter, period } = state;\n    subscriber.next(counter);\n    this.schedule({ subscriber, counter: counter + 1, period }, period);\n}\n","import { Component, Input, OnDestroy, OnInit, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { interval, Subject } from 'rxjs';\nimport { map, takeUntil } from 'rxjs/operators';\nimport * as moment from 'moment';\nimport { DatePipe } from '@angular/common';\n\n@Component({\n    selector: 'app-coming-soon-page',\n    templateUrl: './coming-soon-page.component.html',\n    styleUrls: ['./coming-soon-page.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class ComingSoonPageComponent implements OnInit, OnDestroy {\n\n    pickDate = new Date().setMonth(new Date().getMonth() + 2);\n    datePipe = new DatePipe('en-US');\n    launchDate = this.datePipe.transform(this.pickDate, 'yyyy-MM-dd');\n\n    countdown: any;\n\n    private _unsubscribeAll: Subject<any>;\n\n    constructor(private cdr: ChangeDetectorRef) {\n        // Set the defaults\n        this.countdown = {\n            weeks: '',\n            days: '',\n            hours: '',\n            minutes: '',\n            seconds: ''\n        };\n\n        // Set the private defaults\n        this._unsubscribeAll = new Subject();\n    }\n\n    ngOnInit() {\n        const currDate = moment();\n        const launchDate = moment(this.launchDate);\n        let diff = launchDate.diff(currDate, 'seconds');\n        this.countdown = this.calculateRemainingTime(diff);\n\n        // Create a subscribable interval\n        const countDown = interval(1000)\n            .pipe(\n                map(value => {\n                    return diff = diff - 1;\n                }),\n                map(value => {\n                    return this.calculateRemainingTime(value);\n                })\n            );\n\n        // Subscribe to the countdown interval\n        countDown\n            .pipe(takeUntil(this._unsubscribeAll))\n            .subscribe(value => {\n                this.countdown = value;\n                this.cdr.detectChanges();\n            });\n\n    }\n\n    ngOnDestroy(): void {\n        // Unsubscribe from all subscriptions\n        this._unsubscribeAll.next();\n        this._unsubscribeAll.complete();\n    }\n\n    private calculateRemainingTime(seconds): any {\n        const timeLeft = moment.duration(seconds, 'seconds');\n\n        return {\n            weeks: timeLeft.asWeeks().toFixed(0),\n            days: timeLeft.asDays().toFixed(0),\n            hours: timeLeft.hours(),\n            minutes: timeLeft.minutes(),\n            seconds: timeLeft.seconds()\n        };\n    }\n}\n","<!--Coming soon starts-->\n<section id=\"coming-soon\">\n  <div class=\"container-fluid\">\n    <div class=\"row auth-height full-height-vh\">\n      <div class=\"col-12 d-flex align-items-center justify-content-center\">\n        <div class=\"card card-coming-soon box-shadow-0 overflow-hidden\">\n          <div class=\"card-header text-center pt-4 pb-3\">\n            <img alt=\"avtar\" class=\"img-fluid\" src=\"assets/img/gallery/coming-soon.png\" width=\"200\">\n          </div>\n          <div id=\"clockFlat\" class=\"getting-started px-sm-2\">\n            <div class=\"clockCard d-inline-block text-center px-3 px-sm-4 py-3\">\n              <span>{{ countdown.days }}</span>\n              <br>\n              <p class=\"lead m-0\">Days</p>\n            </div>\n            <div class=\"clockCard d-inline-block text-center px-3 px-sm-4 py-3\">\n              <span>{{ countdown.hours }}</span>\n              <br>\n              <p class=\"lead m-0\">Hours</p>\n            </div>\n            <div class=\"clockCard d-inline-block text-center px-3 px-sm-4 py-3\">\n              <span>{{ countdown.minutes }}</span>\n              <br>\n              <p class=\"lead m-0\">Minutes</p>\n            </div>\n            <div class=\"clockCard d-inline-block text-center px-3 px-sm-4 py-3\">\n              <span>{{ countdown.seconds }}</span>\n              <br>\n              <p class=\"lead m-0\">Seconds</p>\n            </div>\n          </div>\n          <div class=\"card-content\">\n            <div class=\"card-body text-center pt-1\">\n              <h2 class=\"mb-4 mt-2\">We Are Launching Soon.</h2>\n              <div class=\"mx-4\">\n                <div class=\"input-group\">\n                  <input type=\"text\" class=\"form-control\" placeholder=\"Email\" aria-describedby=\"coming-soon-subscribe\">\n                  <div class=\"input-group-append\">\n                    <button type=\"button\" class=\"btn btn-primary\" id=\"coming-soon-subscribe\">\n                      <i class=\"ft-log-in d-sm-none font-medium-2\"></i>\n                      <span class=\"d-none d-sm-block\">Subscribe</span>\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!--Coming soon ends-->\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\nimport { NotFoundComponent } from \"app/modules/not-found/not-found.component\";\n\nimport { ComingSoonPageComponent } from \"./coming-soon/coming-soon-page.component\";\nimport { ErrorPageComponent } from \"./error/error-page.component\";\nimport { ForgotPasswordPageComponent } from \"./forgot-password/forgot-password-page.component\";\nimport { LockScreenPageComponent } from \"./lock-screen/lock-screen-page.component\";\nimport { LoginPageComponent } from \"./login/login-page.component\";\nimport { MaintenancePageComponent } from \"./maintenance/maintenance-page.component\";\nimport { ResetPasswordComponent } from \"./reset-password/reset-password.component\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    children: [\n      {\n        path: \"comingsoon\",\n        component: ComingSoonPageComponent,\n        data: {\n          title: \"Coming Soon page\",\n        },\n      },\n\n      {\n        path: \"forgotpassword\",\n        component: ForgotPasswordPageComponent,\n        data: {\n          title: \"Forgot Password\",\n        },\n      },\n      {\n        path: \"reset-password/:token\",\n        component: ResetPasswordComponent,\n        data: {\n          title: \"Reset Password\",\n        },\n      },\n      {\n        path: \"lockscreen\",\n        component: LockScreenPageComponent,\n        data: {\n          title: \"Lock Screen page\",\n        },\n      },\n      {\n        path: \"login\",\n        component: LoginPageComponent,\n        data: {\n          title: \"Login Page\",\n        },\n      },\n      {\n        path: \"maintenance\",\n        component: MaintenancePageComponent,\n        data: {\n          title: \"Maintenance Page\",\n        },\n      },\n      {\n        path: \"**\",\n        component: NotFoundComponent,\n        data: {\n          title: \"Error Page\",\n        },\n      },\n    ],\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ContentPagesRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\nimport { NgbModule } from \"@ng-bootstrap/ng-bootstrap\";\nimport { NgxSpinnerModule } from \"ngx-spinner\";\n\nimport { ContentPagesRoutingModule } from \"./content-pages-routing.module\";\n\nimport { ComingSoonPageComponent } from \"./coming-soon/coming-soon-page.component\";\nimport { ErrorPageComponent } from \"./error/error-page.component\";\nimport { ForgotPasswordPageComponent } from \"./forgot-password/forgot-password-page.component\";\nimport { LockScreenPageComponent } from \"./lock-screen/lock-screen-page.component\";\nimport { LoginPageComponent } from \"./login/login-page.component\";\nimport { MaintenancePageComponent } from \"./maintenance/maintenance-page.component\";\nimport { TranslateModule, TranslateLoader } from \"@ngx-translate/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { TranslateHttpLoader } from \"@ngx-translate/http-loader\";\nimport { ResetPasswordComponent } from \"./reset-password/reset-password.component\";\n\n// import { RecaptchaFormsModule, RecaptchaModule } from 'ng-recaptcha';\n\nexport function createTranslateLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, \"./assets/i18n/\", \".json\");\n}\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ContentPagesRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgbModule,\n    // RecaptchaModule,\n    // RecaptchaFormsModule,\n    TranslateModule.forChild({\n      loader: {\n        provide: TranslateLoader,\n        useFactory: createTranslateLoader,\n        deps: [HttpClient],\n      },\n    }),\n    NgxSpinnerModule,\n  ],\n  declarations: [\n    ComingSoonPageComponent,\n    ErrorPageComponent,\n    ForgotPasswordPageComponent,\n    LockScreenPageComponent,\n    LoginPageComponent,\n    MaintenancePageComponent,\n    ResetPasswordComponent,\n  ],\n})\nexport class ContentPagesModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-error-page',\n    templateUrl: './error-page.component.html',\n    styleUrls: ['./error-page.component.scss']\n})\n\nexport class ErrorPageComponent {\n\n}","<!--Error page starts-->\n<section id=\"error\">\n  <div class=\"container-fluid\">\n    <div class=\"row auth-height full-height-vh\">\n      <div class=\"col-12 d-flex align-items-center justify-content-center\">\n        <div class=\"row\">\n          <div class=\"col-12 text-center\">\n            <img src=\"assets/img/gallery/error.png\" alt=\"\" class=\"img-fluid error-img mt-2\" height=\"300\" width=\"400\">\n            <h1 class=\"mt-4\">404 - Page Not Found!</h1>\n            <div class=\"w-75 error-text mx-auto mt-4\">\n              <p>The page you are looking for might have beel removed, had it's name changed, or is temporarily unavailable.</p>\n            </div>\n            <a [routerLink]=\"['/']\" class=\"btn btn-warning my-2\">Back To Home</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!--Error page ends-->\n","import { ChangeDetectorRef, Component, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, NgForm, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from \"@angular/router\";\nimport { AuthService } from 'app/core/service/auth/auth.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable, Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\nimport { Location, LocationStrategy } from '@angular/common';\n\n@Component({\n  selector: 'app-forgot-password-page',\n  templateUrl: './forgot-password-page.component.html',\n  styleUrls: ['./forgot-password-page.component.scss']\n})\n\nexport class ForgotPasswordPageComponent {\n\n  forgotpassword: FormGroup;\n  forgotpasswordFormSubmitted = false;\n  isforgotpasswordFailed = false;\n  private unsubscribe: Subscription[] = [];\n  hasError: boolean;\n  errMessage: any;\n  isLoading$: Observable<boolean>;\n  finalerror: any = [];\n  finalsuccess: any = [];\n  \n  @ViewChild('f') forogtPasswordForm: NgForm;\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  initForm() {\n    this.forgotpassword = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      token : ['', [Validators.required]]\n    });\n    \n  }\n  constructor(private router: Router,\n    private location: Location, \n    private locationStrategy: LocationStrategy,\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n    private authService: AuthService,\n    public toastr: ToastrService,\n    private cd: ChangeDetectorRef) {\n    this.isLoading$ = this.authService.isLoading$;\n    \n  }\n\n\n\n  \n  get lf() {\n    return this.forgotpassword.controls;\n  }\n\n  onSubmit() {\n    this.forgotpasswordFormSubmitted = true;\n    if (this.forgotpassword.invalid) {\n      return;\n    }\n  \n    const loginSubscr = this.authService\n      .forgotpassword({ email: this.lf.email.value, url :  location.origin+'/reset-password/' })\n      .subscribe(\n        data => {\n          this.forgotpasswordFormSubmitted = false;\n          this.finalerror = [];\n          this.finalsuccess.push(data.message)\n          this.forgotpassword.reset();\n        },\n        err => {\n         \n          this.finalerror = [];\n          if (err.status === 422) {\n            if (err.error.errors) {\n              const receivederror = err.error.errors;\n              for (var key in receivederror) {\n                if (typeof receivederror[key] !== 'undefined') {\n                  this.finalerror.push(key + ' : ' + receivederror[key].message)\n                }\n              }\n            }\n            this.toastr.error(err.error.message, 'Error', {\n              positionClass: 'toast-top-right'\n            });\n          } else {\n            this.finalerror.push(err.error.message)\n          }\n          this.cd.markForCheck();\n        });\n    this.unsubscribe.push(loginSubscr);\n\n  }\n}\n","<!--Forgot Password Starts-->\n<form [formGroup]=\"forgotpassword\" (ngSubmit)=\"onSubmit()\" >\n<section id=\"forgot-password\">\n  <div class=\"row auth-height full-height-vh m-0 d-flex align-items-center justify-content-center\">\n    <div class=\"col-md-7 col-12\">\n      <div class=\"card overflow-hidden\">\n        <div class=\"card-content\">\n          <div class=\"card-body auth-img\">\n            <div class=\"row m-0\">\n              <div class=\"col-lg-6 d-none d-lg-flex justify-content-center align-items-center text-center auth-img-bg py-2\">\n                <img src=\"assets/img/gallery/forgot.png\" alt=\"\" class=\"img-fluid\" width=\"260\" height=\"230\">\n              </div>\n              <div class=\"col-lg-6 col-md-12 px-4 py-3\">\n                <h4 class=\"mb-2 card-title\">Recover Password</h4>\n                <p class=\"card-text mb-3\">Please enter your email address and we'll send you instructions on how to reset your password.</p>\n                <ul class=\"successclass\" *ngIf=\"finalsuccess\" > \n                    <li *ngFor='let error of finalsuccess;'> {{ error }} </li>\n                </ul>\n                <ul class=\"errorsclass\" *ngIf=\"finalerror\" > \n                    <li *ngFor='let error of finalerror;'> {{ error }} </li>\n                </ul>\n                <div class=\"form-group\">\n                    <input type=\"text\" formControlName=\"email\"  class=\"form-control\" placeholder=\"email\"\n                    [ngClass]=\"{ 'is-invalid': forgotpasswordFormSubmitted && lf.email.invalid, 'is-valid': forgotpasswordFormSubmitted && !lf.email.invalid }\"\n                    required>\n                  <div *ngIf=\"forgotpasswordFormSubmitted &&  lf.email.errors?.required\" class=\"help-block mt-1 text-danger\">\n                    Email is required.\n                  </div>\n                  <div *ngIf=\"forgotpasswordFormSubmitted && lf.email.errors?.email\" class=\"help-block mt-1 text-danger\"> Invalid Email.</div>\n                </div>\n                <div class=\"form-group\">\n                  <re-captcha formControlName=\"token\"></re-captcha>\n                  <div *ngIf=\"forgotpasswordFormSubmitted && (lf.token.invalid || lf.token.errors?.required)\"\n                    class=\"help-block mt-1 text-danger\"> <i class=\"ft-alert-circle align-middle\"></i> Please verify you're not robot.\n                  </div>\n                </div>\n                <div class=\"d-flex flex-sm-row flex-column justify-content-between\">\n                  <a [routerLink]=\"['/login']\" class=\"btn bg-light-primary mb-2 mb-sm-0\">Back To Login</a>\n                  <button class=\"btn btn-primary ml-sm-1\">Recover <i class=\"fa fa-spinner fa-spin\" *ngIf=\"isLoading$ | async\"></i></button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n</form>\n<!--Forgot Password Ends-->\n","import { Component, ViewChild } from '@angular/core';\nimport { NgForm } from \"@angular/forms\";\n\n@Component({\n    selector: 'app-lock-screen-page',\n    templateUrl: './lock-screen-page.component.html',\n    styleUrls: ['./lock-screen-page.component.scss']\n})\n\nexport class LockScreenPageComponent {\n    @ViewChild('f') lockScreenForm: NgForm;\n\n    onSubmit() {\n        this.lockScreenForm.reset();\n    }\n}\n","<!--Lock Screen Starts-->\n<section id=\"lock-screen\">\n  <div class=\"row auth-height full-height-vh m-0\">\n    <div class=\"col-12 d-flex align-items-center justify-content-center\">\n      <div class=\"card overflow-hidden\">\n        <div class=\"card-content\">\n          <div class=\"card-body auth-img\">\n            <div class=\"row m-0\">\n              <div class=\"col-lg-6 d-lg-flex justify-content-center align-items-center d-none text-center auth-img-bg p-3\">\n                <img src=\"assets/img/gallery/lock.png\" alt=\"\" class=\"img-fluid\" height=\"230\" width=\"280\">\n              </div>\n              <div class=\"col-lg-6 col-md-12 py-3 px-4\">\n                <h4 class=\"card-title mb-3\">Your Session is Locked</h4>\n                <input type=\"email\" class=\"form-control mb-2\" placeholder=\"Email\">\n                <input type=\"password\" class=\"form-control mb-2\" placeholder=\"Password\">\n                <a href=\"javascript:;\">Are You Not John Doe ?</a>\n                <a [routerLink]=\"['/dashboard/dashboard1']\" class=\"btn btn-block btn-primary mt-2\">Unlock</a>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!--Lock Screen Ends-->\n","import { ChangeDetectorRef, Component, ViewChild } from '@angular/core';\n\nimport {\n  NgForm,\n  FormGroup,\n  FormControl,\n  Validators,\n  FormBuilder,\n} from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from 'app/core/service/auth/auth.service';\nimport ServerErrors from 'app/core/shared/serverErrors';\nimport { ToastrService } from 'ngx-toastr';\nimport { Observable, Subscription } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-login-page',\n  templateUrl: './login-page.component.html',\n  styleUrls: ['./login-page.component.scss'],\n})\nexport class LoginPageComponent {\n  loginForm: FormGroup;\n  isLoginFailed = false;\n  loginFormSubmitted = false;\n\n  serverErrors = new ServerErrors();\n\n  hasError: boolean;\n  errMessage: any;\n  isLoading$: Observable<boolean>;\n\n  hide: boolean = true;\n\n  ngOnInit() {\n    this.initForm();\n  }\n\n  initForm() {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, Validators.email]],\n      password: ['', [Validators.required]],\n    });\n  }\n\n  constructor(\n    private router: Router,\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n    public toastr: ToastrService,\n    private cdr: ChangeDetectorRef\n  ) {\n    this.isLoading$ = this.authService.isLoading$;\n    if (this.authService.currentUserValue) {\n      this.router.navigate(['/dashboard']);\n    }\n  }\n\n  get lf() {\n    return this.loginForm.controls;\n  }\n\n  // On submit button click\n  onSubmit() {\n    this.loginFormSubmitted = true;\n    if (this.loginForm.invalid) {\n      return;\n    }\n\n    this.serverErrors.resetErrors();\n    const loginSubscr = this.authService\n      .login({ email: this.lf.email.value, password: this.lf.password.value })\n      .pipe(first())\n      .subscribe(\n        (data) => {\n          this.router.navigate(['/dashboard']);\n        },\n        (err) => {\n          const { errors, message } = err.error;\n          this.serverErrors.errors = errors;\n          this.isLoginFailed = true;\n          this.toastr.error(message, 'Error!');\n        }\n      );\n  }\n}\n","<!--Login Page Starts-->\n<section id=\"login\">\n  <div class=\"row auth-height full-height-vh m-0\">\n    <div class=\"col-12 d-flex align-items-center justify-content-center\">\n      <div class=\"card overflow-hidden\">\n        <div class=\"card-content\">\n          <div class=\"card-body auth-img\">\n            <div class=\"row m-0\">\n              <div class=\"col-lg-6 d-none d-lg-flex justify-content-center align-items-center auth-img-bg p-0\">\n                <img src=\"assets/img/gallery/login.png\" alt=\"\" class=\"img-fluid\" />\n              </div>\n              <div class=\"col-lg-6 col-12 px-3 py-5\">\n                <h4 class=\"mb-2 card-title\">Login</h4>\n                <p>Welcome back, please login to your account.</p>\n                <ngb-alert type=\"light-danger\" class=\"mb-2\" *ngIf=\"serverErrors.hasError\" (closed)=\"serverErrors.resetErrors()\">\n                  <p class=\"mb-0\" *ngFor=\"let err of serverErrors.errors\">\n                    {{ err }}\n                  </p>\n                </ngb-alert>\n                <form [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\n                  <div class=\"form-group\">\n                    <input type=\"text\" formControlName=\"email\" class=\"form-control\" placeholder=\"Email\" [ngClass]=\"{\n                        'is-invalid': loginFormSubmitted && lf.email.invalid,\n                        'is-valid': loginFormSubmitted && !lf.email.invalid\n                      }\" required />\n                    <div *ngIf=\"loginFormSubmitted && lf.email.errors?.required\" class=\"help-block mt-1 text-danger\">\n                      <i class=\"ft-alert-circle align-middle\"></i>Email is\n                      required.\n                    </div>\n                    <div *ngIf=\"loginFormSubmitted && lf.email.errors?.email\" class=\"help-block mt-1 text-danger\">\n                      <i class=\"ft-alert-circle align-middle\"></i> Invalid\n                      Email.\n                    </div>\n                  </div>\n                  <div class=\"form-group relative\">\n                    <input [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\" class=\"form-control\" placeholder=\"Password\" [ngClass]=\"{\n                        'is-invalid': loginFormSubmitted && lf.password.invalid,\n                        'is-valid': loginFormSubmitted && !lf.password.invalid\n                      }\" required />\n                    <span class=\"fa fa-eye set_eye_icon\" *ngIf=\"hide\" (click)=\"hide = !hide\"></span>\n                    <span class=\"fa fa-eye-slash set_eye_icon\" *ngIf=\"!hide\" (click)=\"hide = !hide\"></span>\n                    <div *ngIf=\"\n                        loginFormSubmitted &&\n                        (lf.password.invalid || lf.password.errors?.required)\n                      \" class=\"help-block mt-1 text-danger\">\n                      <i class=\"ft-alert-circle align-middle\"></i> This is\n                      required\n                    </div>\n                  </div>\n                  <!-- <div\n                    class=\"d-sm-flex justify-content-between mb-1 font-small-2\"\n                  >\n                    <a [routerLink]=\"['/forgotpassword']\">Forgot Password?</a>\n                  </div> -->\n\n                  <div class=\"d-flex justify-content-between flex-sm-row flex-column\">\n                    <button type=\"submit\" class=\"btn btn-primary\">\n                      Login\n                      <i class=\"fa fa-spinner fa-spin\" *ngIf=\"isLoading$ | async\"></i>\n                    </button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!--Login Page Ends-->","import { Component } from '@angular/core';\n\n@Component({\n    selector: 'app-maintenance-page',\n    templateUrl: './maintenance-page.component.html',\n    styleUrls: ['./maintenance-page.component.scss']\n})\n\nexport class MaintenancePageComponent {\n\n}","<!--Under Maintenance Starts-->\n<section id=\"maintenance\">\n  <div class=\"container-fluid\">\n    <div class=\"row auth-height full-height-vh\">\n      <div class=\"col-12 d-flex align-items-center justify-content-center\">\n        <div class=\"row\">\n          <div class=\"col-12 text-center\">\n            <img src=\"assets/img/gallery/maintenance.png\" alt=\"\" class=\"img-fluid maintenance-img mt-2\" height=\"300\" width=\"300\">\n            <h1 class=\"mt-4\">Under Maintenance!</h1>\n            <div class=\"maintenance-text w-75 mx-auto mt-4\">\n              <p>Ice cream caramels lemon drops candy. Cake toffee topping cookie tart wafer gummies. Sweet gummi bears jujubes bonbon gingerbread apple pie marshmallow.</p>\n            </div>\n            <a [routerLink]=\"['/']\" class=\"btn btn-warning my-2\">Back To Home</a>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n<!--Under Maintenance Starts-->\n","import { ChangeDetectorRef, Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormBuilder, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { AuthService } from 'app/core/service/auth/auth.service';\nimport { ToastrService } from 'ngx-toastr';\nimport { Subscription, Observable } from 'rxjs';\nimport { first } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-reset-password',\n  templateUrl: './reset-password.component.html',\n  styleUrls: ['./reset-password.component.scss']\n})\nexport class ResetPasswordComponent implements OnInit {\n\n  resetForm: FormGroup;\n  resetFormSubmitted = false;\n  isresetFailed = false;\n  private unsubscribe: Subscription[] = [];\n  hasError: boolean;\n  errMessage: any;\n  isLoading$: Observable<boolean>;\n  finalerror: any = [];\n  finalsuccess: any = [];\n  token : string;\n  pagehaserror : boolean = false;\n  loading = true;\n\n  ngOnInit() {\n    \n    this.route.params.subscribe((paramsid) => {\n      this.token = paramsid.token;\n    })\n\n    this.checktokenisvalid();\n    this.initForm();\n    \n  }\n\n  checktokenisvalid(){\n    this.authService\n      .checktokenisvalid({ reset_password_code : this.token })\n      .pipe(first())\n      .subscribe(\n\n        data => {\n          this.pagehaserror = false;\n          this.loading = false;\n          this.cd.markForCheck();\n        },\n        err => {\n          this.pagehaserror = true;\n          this.loading = false;\n          this.cd.markForCheck();\n        });\n  }\n  checkPasswords: ValidatorFn = (group: AbstractControl): ValidationErrors | null => {\n      let pass = group.get('password').value;\n      let confirmPass = group.get('confirm_password').value\n      return pass === confirmPass ? null : { notSame: true }\n  }\n\n  initForm() {\n    this.resetForm = this.fb.group({\n      password: ['', [Validators.minLength(6), Validators.required]],\n      confirm_password: ['',  Validators.required],\n    },{ validator: this.checkPasswords });\n  }\n\n\n  constructor(private router: Router, private authService: AuthService,\n    private route: ActivatedRoute,\n    private fb: FormBuilder,\n    public toastr: ToastrService,\n    private cd: ChangeDetectorRef) {\n      this.isLoading$ = this.authService.isLoading$;\n      if (this.authService.currentUserValue) { \n        this.router.navigate(['/dashboard']);\n      }\n\n  }\n\n  get lf() {\n    return this.resetForm.controls;\n  }\n\n\n\n\n  // On submit button click\n  onSubmit() {\n    this.resetFormSubmitted = true;\n    if (this.resetForm.invalid) {\n      return;\n    }\n\n\n    const loginSubscr = this.authService\n      .resetpassword({ password: this.lf.password.value, confirm_password: this.lf.confirm_password.value,reset_password_code : this.token })\n      .pipe(first())\n      .subscribe(\n        data => {\n          this.resetFormSubmitted = false;\n          this.finalerror = [];\n          this.finalsuccess.push(data.message)\n          this.resetForm.reset();\n        },\n        err => {\n         \n          this.finalerror = [];\n          if (err.status === 422) {\n            if (err.error.errors) {\n              const receivederror = err.error.errors;\n              for (var key in receivederror) {\n                if (typeof receivederror[key] !== 'undefined') {\n                  this.finalerror.push(receivederror[key].message)\n                }\n              }\n            }\n            this.toastr.error(err.error.message, 'Error', {\n              positionClass: 'toast-top-right'\n            });\n          } else {\n            this.finalerror.push(err.error.message)\n          }\n          this.cd.markForCheck();\n        });\n    this.unsubscribe.push(loginSubscr);\n\n  }\n\n}\n","<!--Error page starts-->\n<div class=\"ddpage-loading\" *ngIf=\"loading else loaded\">\n    <img src=\"assets/img/oval.svg\" class=\"ddloading-icon\" />\n  </div>\n<ng-template #loaded>\n<section id=\"error\" *ngIf=\"pagehaserror\">\n    <div class=\"container-fluid\">\n      <div class=\"row auth-height full-height-vh\">\n        <div class=\"col-12 d-flex align-items-center justify-content-center\">\n          <div class=\"row\">\n            <div class=\"col-12 text-center\">\n              <img src=\"assets/img/gallery/error.png\" alt=\"\" class=\"img-fluid error-img mt-2\" height=\"300\" width=\"400\">\n              <h1 class=\"mt-4\">Your reset password link is expired.</h1>\n              <div class=\"w-75 error-text mx-auto mt-4\">\n                <p>Either your link is expired or you've already changed your password with this link.</p>\n              </div>\n              <a [routerLink]=\"['/']\" class=\"btn btn-warning my-2\">Back To Home</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n  <!--Error page ends-->\n  \n<!--Login Page Starts-->\n<section id=\"login\" *ngIf=\"!pagehaserror\">\n    <div class=\"row auth-height full-height-vh m-0\">\n      <div class=\"col-12 d-flex align-items-center justify-content-center\">\n        <div class=\"card overflow-hidden\">\n          <div class=\"card-content\">\n            <div class=\"card-body auth-img\">\n              <div class=\"row m-0\">\n                <div class=\"col-lg-6 d-none d-lg-flex justify-content-center align-items-center auth-img-bg p-3\">\n                  <img src=\"assets/img/gallery/login.png\" alt=\"\" class=\"img-fluid\" width=\"300\" height=\"230\">\n                </div>\n                <div class=\"col-lg-6 col-12 px-4 py-3\">\n                  <h4 class=\"mb-2 card-title\">Reset Password</h4>\n                  <p>Please enter your password and confirm password.</p>\n                  <ul class=\"successclass\" *ngIf=\"finalsuccess\" > \n                        <li *ngFor='let error of finalsuccess;'> {{ error }} </li>\n                    </ul>\n                    <ul class=\"errorsclass\" *ngIf=\"finalerror\" > \n                        <li *ngFor='let error of finalerror;'> {{ error }} </li>\n                    </ul>\n                  <form [formGroup]=\"resetForm\" (ngSubmit)=\"onSubmit()\">\n                    \n                    <div class=\"form-group\">\n                      <input type=\"password\" formControlName=\"password\" class=\"form-control\" placeholder=\"Password\"\n                        [ngClass]=\"{ 'is-invalid': resetFormSubmitted && lf.password.invalid, 'is-valid': resetFormSubmitted && !lf.password.invalid }\"\n                        required>\n                        <div class=\"text-danger\" *ngIf=\"resetFormSubmitted && resetForm.get('password').errors && \n                        resetForm.get('password').hasError('required')\">\n                        <span>Password is required</span>\n                        </div>\n                        <div class=\"text-danger\" *ngIf=\"resetFormSubmitted && resetForm.get('password').errors && \n                        resetForm.get('password').hasError('minlength')\">\n                            <span>password should be minimum 6 characters.</span>\n                        </div>\n                    </div>\n                    <div class=\"form-group\">\n                        <input type=\"password\" formControlName=\"confirm_password\" class=\"form-control\" placeholder=\"Confirm Password\"\n                         [ngClass]=\"{ 'is-invalid': resetFormSubmitted && resetForm.hasError('notSame') }\"\n                         [ngClass]=\"{ 'is-invalid': resetFormSubmitted && lf.confirm_password.invalid, 'is-valid': resetFormSubmitted && !lf.confirm_password.invalid }\">\n                         <div class=\"text-danger\" *ngIf=\"resetFormSubmitted && resetForm.hasError('notSame')\">\n                            <span>Passwords do not match.</span>\n                        </div>\n                        <div class=\"text-danger\" *ngIf=\"resetFormSubmitted && resetForm.get('confirm_password').errors && \n                        resetForm.get('confirm_password').hasError('required')\">\n                        <span>Password is required</span>\n                        </div>\n                      </div>\n                    <div class=\"d-flex flex-sm-row flex-column justify-content-between\">\n                        <a [routerLink]=\"['/login']\" class=\"btn bg-light-primary mb-2 mb-sm-0\">Back To Login</a>\n                        <button class=\"btn btn-primary ml-sm-1\">Reset <i class=\"fa fa-spinner fa-spin\" *ngIf=\"isLoading$ | async\"></i></button>\n                      </div>\n                    \n                  </form>\n  \n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>\n  <!--Login Page Ends-->\n</ng-template>"],"names":[],"sourceRoot":"webpack:///"}