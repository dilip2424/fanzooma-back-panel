{"version":3,"file":"src_app_modules_dashboard_dashboard_module_ts.js","mappings":"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","sources":["./src/app/modules/dashboard/dashboard-listing/creator/creator.component.ts","./src/app/modules/dashboard/dashboard-listing/creator/creator.component.html","./src/app/modules/dashboard/dashboard-listing/right-holder/right-holder.component.ts","./src/app/modules/dashboard/dashboard-listing/right-holder/right-holder.component.html","./src/app/modules/dashboard/dashboard-routing.module.ts","./src/app/modules/dashboard/dashboard.component.ts","./src/app/modules/dashboard/dashboard.component.html","./src/app/modules/dashboard/dashboard.module.ts","./src/app/modules/dashboard/main-dashboard/main-dashboard.component.ts","./src/app/modules/dashboard/main-dashboard/main-dashboard.component.html"],"sourcesContent":["import { ChangeDetectorRef, Component, OnInit, ViewEncapsulation } from '@angular/core';\nimport { ColumnMode } from '@swimlane/ngx-datatable';\nimport { DashboardService } from '../../_services/dashboard.service';\nimport * as chartsData from '../../../../shared/data/chartjs';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport * as moment from 'moment';\nimport { CommonService } from 'app/core/service/common/common.service';\nimport { Subscription } from 'rxjs';\nimport { ActivatedRoute } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard-creator-listing',\n  templateUrl: './creator.component.html',\n  styleUrls: ['./creator.component.scss', '../../../../../assets/sass/libs/select.scss', '../../../../../assets/sass/libs/datatables.scss'],\n  encapsulation: ViewEncapsulation.None\n})\nexport class CreatorComponent implements OnInit {\n  isLoadingtable$;\n  dashboardListing: any;\n\n  public count: any;\n  public offset = 0;\n  public currentdocsize = 0;\n  public order = '-1';\n\n  public startDate = \"\";\n  public endDate = \"\";\n  public channel = \"\";\n  public page = 1;\n  public limit = 10;\n  public ascDesc = \"1\";\n  public sortByComment = \"\";\n  public sortByView = \"\";\n  public sortByLike = \"\";\n  public sortByDislike = \"\";\n  public sortByTotalEarning = \"\";\n  public sortByDrmRoyaltyShare = \"\";\n  public sortByYourShare = \"\";\n  public sortByVideoName = \"\";\n  public sortByChannelName = \"1\";\n  public graphData: Array<any> = [];\n  public channels: Array<any> = [];\n  public ColumnMode = ColumnMode;\n  filterGroup: FormGroup;\n  private subscriptions: Subscription[] = [];\n\n  my_messages = {\n    'emptyMessage': 'Loading...',\n    'totalMessage': 'Items'\n  };\n\n  public areaChartData: Array<any> = [{ label: '' }];\n  public areaChartLabels: Array<any> = [];\n  public areaChartOptions = chartsData.areaChartOptions;\n  public areaChartColors = chartsData.areaChartColors;\n  public areaChartLegend = chartsData.areaChartLegend;\n  public areaChartType = chartsData.areaChartType;\n\n  selectedChannel = \"\";\n\n  constructor(\n    private dashboardservice: DashboardService,\n    private cd: ChangeDetectorRef,\n    private fb: FormBuilder,\n    private commonservice: CommonService,\n    private route: ActivatedRoute\n  ) {\n    this.isLoadingtable$ = this.dashboardservice.isLoadingtable$;\n  }\n\n  public select_month: any;\n\n  public filters = <any>{\n    \"startDate\": '',\n    \"endDate\": '',\n  };\n\n  public startDateformonth: any = {\n    startDate: moment().subtract(1, 'month').startOf('month'),\n    endDate: moment().subtract(1, 'month').endOf('month')\n  };\n\n  daterangefilter = this.startDateformonth;\n  alwaysShowCalendars: boolean;\n  ranges: any = {\n    'Today': [moment(), moment()],\n    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],\n    'Last 1 Week': [moment().subtract(6, 'days'), moment()],\n    'Last 28 Days': [moment().subtract(27, 'days'), moment()],\n    'Last 90 Days': [moment().subtract(89, 'days'), moment()],\n    'Last 365 Days': [moment().subtract(364, 'days'), moment()],\n    // 'This Month': [moment().startOf('month'), moment().endOf('month')],\n    // 'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]\n  }\n  invalidDates: moment.Moment[] = [moment().add(2, 'days'), moment().add(3, 'days'), moment().add(5, 'days')];\n\n  isInvalidDate = (m: moment.Moment) => {\n    return this.invalidDates.some(d => d.isSame(m, 'day'))\n  }\n  initDate = true;\n\n  ngOnInit(): void {\n    this.daterangefilter = {\n      startDate: moment().subtract(27, 'days'),\n      endDate: moment()\n    };\n    this.filterForm(null);\n\n    this.channel = history.state.id;\n    this.getDashboardList();\n\n    this.getchannellist();\n  }\n\n  getchannellist() {\n    this.commonservice.getallchannel({ search: \"\" }).subscribe((data: any) => {\n      if (data.result) {\n        this.channels = data.result;\n        const channelId = history.state.id;\n        this.filterForm(channelId);\n      }\n      this.cd.markForCheck();\n    }, err => {\n\n    })\n  }\n\n  public getByDate(event) {\n    if (event.startDate && event.endDate) {\n      this.filters['startDate'] = moment(event.startDate._d).format(\"YYYY-MM-DD\");\n      this.filters['endDate'] = moment(event.endDate._d).format(\"YYYY-MM-DD\");\n    } else {\n      if (this.initDate) {\n        this.filters['startDate'] = moment(this.daterangefilter.startDate).format('YYYY-MM-DD');\n        this.filters['endDate'] = moment(this.daterangefilter.endDate).format('YYYY-MM-DD');\n        this.initDate = false;\n      } else {\n        this.filters['startDate'] = this.filters['endDate'] = null;\n      }\n\n    }\n    // if (event.startDate && event.endDate) {\n    //     this.filters['startDate'] = moment(event.startDate._d).format(\"YYYY-MM-DD\");\n    //     this.filters['endDate'] = moment(event.endDate._d).format(\"YYYY-MM-DD\");\n    // } else {\n    //     this.filters['startDate'] = \"\";\n    //     this.filters['endDate'] = \"\";\n    // }\n    this.creatorgraph();\n  }\n\n  /**\n   * Populate the table with new data based on the page number\n   * @param page The page to select\n   */\n  setPage(pageInfo) {\n    this.page = pageInfo.offset + 1;\n    this.offset = pageInfo.offset;\n    //this.limit = pageInfo.limit;\n    this.getDashboardList();\n  }\n\n  /**\n   * Populate the table with new data based on the page number\n   * Short event\n   */\n  onSort(event) {\n    const sort = event.sorts[0];\n    const prop = sort.prop;\n    const dir = sort.dir;\n    this.page = 1;\n    this.offset = 0;\n\n    this.sortByComment = this.sortByView = this.sortByLike = this.sortByDislike = this.sortByTotalEarning = this.sortByDrmRoyaltyShare = this.sortByYourShare = this.sortByVideoName = this.sortByChannelName = \"\";\n\n    switch (prop) {\n      case 'comment':\n        this.sortByComment = \"1\"\n        break;\n      case 'view':\n        this.sortByView = \"1\"\n        break;\n      case 'like':\n        this.sortByLike = \"1\"\n        break;\n      case 'dislike':\n        this.sortByDislike = \"1\"\n        break;\n      case 'total_earning':\n        this.sortByTotalEarning = \"1\"\n        break;\n      case 'drm_royalty_share':\n        this.sortByDrmRoyaltyShare = \"1\"\n        break;\n      case 'your_share':\n        this.sortByYourShare = \"1\"\n        break;\n      case 'vedio_name':\n        this.sortByVideoName = \"1\"\n        break;\n      case 'channel_name':\n        this.sortByChannelName = \"1\"\n        break;\n      default:\n        this.sortByChannelName = \"1\"\n    }\n\n\n    if (dir == 'asc') {\n      this.ascDesc = \"1\";\n    }\n    if (dir == 'desc') {\n      this.ascDesc = \"-1\";\n    }\n    this.getDashboardList();\n  }\n\n  getDashboardList() {\n    const params = {\n      \"startDate\": this.startDate,\n      \"endDate\": this.endDate,\n      \"channel\": this.channel,\n      \"page\": this.page ?? 1,\n      \"limit\": this.limit ?? 10,\n      \"ascDesc\": this.ascDesc ?? 1,\n      \"sortByComment\": this.sortByComment,\n      \"sortByView\": this.sortByView,\n      \"sortByLike\": this.sortByLike,\n      \"sortByDislike\": this.sortByDislike,\n      \"sortByTotalEarning\": this.sortByTotalEarning,\n      \"sortByDrmRoyaltyShare\": this.sortByDrmRoyaltyShare,\n      \"sortByYourShare\": this.sortByYourShare,\n      \"sortByVideoName\": this.sortByVideoName,\n      \"sortByChannelName\": this.sortByChannelName,\n    };\n    this.dashboardservice.getDashboardTableListing(params).subscribe((data: any) => {\n      if (data.result) {\n        this.dashboardListing = data.result.docs;\n        this.count = data.result.totalDocs\n        this.offset = data.result.page - 1;\n        this.currentdocsize = this.dashboardListing.length;\n        if (this.dashboardListing.length == 0) {\n          this.my_messages.emptyMessage = \"No data found.\"\n        }\n      }\n    })\n  }\n\n  filterForm(channelId) {\n    this.filterGroup = this.fb.group({\n      channel: [channelId ?? null],\n    });\n\n\n\n    this.subscriptions.push(\n      this.filterGroup.controls.channel.valueChanges.subscribe((value) => {\n        this.channel = value;\n        this.page = 1;\n        this.offset = 0;\n        this.creatorgraph();\n        this.getDashboardList();\n      }\n      )\n    );\n  }\n\n  creatorgraph() {\n    const params = {\n      startDate: this.filters['startDate'],\n      endDate: this.filters['endDate'],\n    };\n    const channels = this.filterGroup.get('channel').value;\n    if (channels) {\n      params['channel'] = channels;\n    }\n    this.dashboardservice.getDashboardCreatorGraph(params).subscribe((data: any) => {\n      if (data.result) {\n        this.graphData = data.result;\n\n        var creator_comments_data = [];\n        this.graphData.forEach((item) => {\n          creator_comments_data.push(item.comments.toFixed(2));\n        });\n        var creator_dislikes_data = [];\n        this.graphData.forEach((item) => {\n          creator_dislikes_data.push(item.dislikes.toFixed(2));\n        });\n        var creator_drm_royality_share_data = [];\n        this.graphData.forEach((item) => {\n          creator_drm_royality_share_data.push(item.drm_royality_share.toFixed(2));\n        });\n        var creator_likes_data = [];\n        this.graphData.forEach((item) => {\n          creator_likes_data.push(item.likes.toFixed(2));\n        });\n        var creator_total_earning_data = [];\n        this.graphData.forEach((item) => {\n          creator_total_earning_data.push(item.total_earning.toFixed(2));\n        });\n        var creator_views_data = [];\n        this.graphData.forEach((item) => {\n          creator_views_data.push(item.views.toFixed(2));\n        });\n        var creator_your_share_data = [];\n        this.graphData.forEach((item) => {\n          creator_your_share_data.push(item.your_share.toFixed(2));\n        });\n\n        var creator_earning_dates = [];\n        this.graphData.forEach((item) => {\n          creator_earning_dates.push(item._id);\n        });\n\n        var graph_data = [\n          { data: creator_comments_data, label: 'Total Comments' },\n          { data: creator_dislikes_data, label: 'Total DisLikes' },\n          { data: creator_drm_royality_share_data, label: 'Total Royalty Share' },\n          { data: creator_likes_data, label: 'Total Likes' },\n          { data: creator_total_earning_data, label: 'Total Earnings' },\n          { data: creator_views_data, label: 'Total Views' },\n          { data: creator_your_share_data, label: 'Total Share' },\n        ]\n\n        this.areaChartData = graph_data;\n        this.areaChartLabels = creator_earning_dates;\n\n        if (this.graphData.length == 0) {\n          this.my_messages.emptyMessage = \"No data found.\"\n        }\n      }\n    })\n  }\n\n}\n","<!-- Basic Datatables -->\n<section id=\"ngx-datatable-basic\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div class=\"card customisecard\">\n                <!-- <div class=\"card-header\">\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <h4 class=\"card-title mt-1\">Dashboard listing</h4>\n                        </div>\n                    </div>  \n                </div> -->\n                <!-- Area Chart Starts -->\n                <div class=\"row text-left\">\n                    <div class=\"col-sm-12\">\n                        <div class=\"card\">\n                            <div class=\"card-header\">\n                                <h4 class=\"card-title\">Creators</h4>\n                            </div>\n                            <div class=\"card-content\">\n                                <div class=\"card-body\">\n                                    <fieldset class=\"form-group role_filter mb-2\" [formGroup]=\"filterGroup\">\n                                        <input class=\"form-control form-control-sm d-inline-block width-200 mr-1\"\n                                        type=\"text\" ngxDaterangepickerMd [(ngModel)]=\"daterangefilter\"\n                                        [showCustomRangeLabel]=\"true\" [alwaysShowCalendars]=\"true\"\n                                        [ngModelOptions]=\"{standalone: true}\" [ranges]=\" ranges\"\n                                        [linkedCalendars]=\"true\" (change)=\"getByDate($event)\"\n                                        [isInvalidDate]=\"isInvalidDate\" [showClearButton]=\"true\"\n                                        placeholder=\"Start Date - End Date\" />\n                                        <i *ngIf=\"isLoadingtable$ | async\" class=\"fa fa-spin fa-spinner mr-1\" ></i>\n\n                                        <ng-select class=\"d-inline-block form-control-sm width-200 mr-1\"\n                                            placeholder=\"Select Channel\" formControlName=\"channel\">\n                                            <ng-option value=\"\">Select Channel</ng-option>\n                                            <ng-option value=\"{{channel._id}}\" *ngFor=\"let channel of channels\">\n                                                {{channel.channel_title}}\n                                            </ng-option>\n                                        </ng-select>\n                                    </fieldset>\n\n                                    <div class=\"height-400\">\n                                        <canvas height=\"400\" baseChart class=\"chart\" [datasets]=\"areaChartData\"\n                                            [labels]=\"areaChartLabels\" [options]=\"areaChartOptions\"\n                                            [colors]=\"areaChartColors\" [legend]=\"areaChartLegend\"\n                                            [chartType]=\"areaChartType\"></canvas>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!-- Area Chart Ends -->\n                <div class=\"card-content\">\n                    <div class=\"card-body\">\n\n                        <!-- ngx-datatable Basic -->\n                        <ngx-datatable class=\"bootstrap core-bootstrap\" [rows]=\"dashboardListing\" rowHeight=\"auto\"\n                            [messages]=\"my_messages\" [columnMode]=\"ColumnMode.force\" [scrollbarH]=\"true\"\n                            [headerHeight]=\"50\" [footerHeight]=\"50\" [count]=\"count\" [externalPaging]=\"true\"\n                            [externalSorting]=\"true\" [limit]=\"limit\" [offset]=\"offset\" (page)=\"setPage($event)\"\n                            (sort)=\"onSort($event)\">\n\n                            <ngx-datatable-column class=\"datatable-row-left\" [frozenLeft]=\"true\" name=\"Audio\"\n                                prop=\"vedio_name\" [width]=\"260\">\n                                <ng-template let-row=\"row\" let-name=\"value\" ngx-datatable-cell-template>\n                                    {{ row.video_name }}\n                                </ng-template>\n                            </ngx-datatable-column>\n\n                            <ngx-datatable-column name=\"Views\" prop=\"view\">\n                                <ng-template ngx-datatable-cell-template let-row=\"row\">\n                                  {{ row.views | number: \"1.0-2\" }}\n                                </ng-template>\n                              </ngx-datatable-column>\n                              <ngx-datatable-column name=\"Likes\" prop=\"like\">\n                                <ng-template ngx-datatable-cell-template let-row=\"row\">\n                                  {{ row.likes | number: \"1.0-2\" }}\n                                </ng-template>\n                              </ngx-datatable-column>\n                              <ngx-datatable-column name=\"Dislikes\" prop=\"dislike\">\n                                <ng-template ngx-datatable-cell-template let-row=\"row\">\n                                  {{ row.dislikes | number: \"1.0-2\" }}\n                                </ng-template>\n                              </ngx-datatable-column>\n                              <ngx-datatable-column name=\"Comments\" prop=\"comment\">\n                                <ng-template ngx-datatable-cell-template let-row=\"row\">\n                                  {{ row.comments | number: \"1.0-2\" }}\n                                </ng-template>\n                              </ngx-datatable-column>\n                              <ngx-datatable-column name=\"Revenue\" prop=\"total_earning\">\n                                <ng-template ngx-datatable-cell-template let-row=\"row\">\n                                  {{ row.total_earning | number: \"1.0-2\" }}\n                                </ng-template>\n                              </ngx-datatable-column>\n                        </ngx-datatable>\n                        <div class=\"spinner_loading\" *ngIf=\"isLoadingtable$ | async\">\n                            <i class=\"fa fa-spinner fa-spin \"></i> Loading...\n                        </div>\n                        <!--/ ngx-datatable Basic -->\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import {\n  ChangeDetectorRef,\n  Component,\n  OnInit,\n  ViewEncapsulation,\n} from \"@angular/core\";\nimport { ColumnMode } from \"@swimlane/ngx-datatable\";\nimport { DashboardService } from \"../../_services/dashboard.service\";\nimport * as chartsData from \"../../../../shared/data/chartjs\";\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\nimport { Subscription } from \"rxjs\";\nimport { CommonService } from \"app/core/service/common/common.service\";\nimport * as moment from \"moment\";\nimport { ActivatedRoute, Router } from \"@angular/router\";\n\n@Component({\n  selector: \"app-dashboard-right-holder-listing\",\n  templateUrl: \"./right-holder.component.html\",\n  styleUrls: [\n    \"./right-holder.component.scss\",\n    \"../../../../../assets/sass/libs/select.scss\",\n    \"../../../../../assets/sass/libs/datatables.scss\",\n  ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class RightHolderComponent implements OnInit {\n  isLoadingtable$;\n  dashboardListing: any;\n\n  public count: any;\n  public offset = 0;\n  public currentdocsize = 0;\n  public order = \"-1\";\n\n  public startDate = \"\";\n  public endDate = \"\";\n  public channel = \"\";\n  public page = 1;\n  public limit = 10;\n  public ascDesc = \"1\";\n  public sortByComment = \"\";\n  public sortByView = \"\";\n  public sortByLike = \"\";\n  public sortByDislike = \"\";\n  public sortByTotalEarning = \"\";\n  public sortByDrmRoyaltyShare = \"\";\n  public sortByYourShare = \"\";\n  public sortByVideoName = \"\";\n  public sortByChannelName = \"1\";\n\n  public graphData: Array<any> = [];\n  public channels: Array<any> = [];\n  public ColumnMode = ColumnMode;\n  filterGroup: FormGroup;\n  private subscriptions: Subscription[] = [];\n\n  my_messages = {\n    emptyMessage: \"Loading...\",\n    totalMessage: \"Items\",\n  };\n\n  public areaChartData: Array<any> = [{ label: \"\" }];\n  public areaChartLabels: Array<any> = [];\n  public areaChartOptions = chartsData.areaChartOptions;\n  public areaChartColors = chartsData.areaChartColors;\n  public areaChartLegend = chartsData.areaChartLegend;\n  public areaChartType = chartsData.areaChartType;\n\n  constructor(\n    private dashboardservice: DashboardService,\n    private cd: ChangeDetectorRef,\n    private fb: FormBuilder,\n    private commonservice: CommonService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.isLoadingtable$ = this.dashboardservice.isLoadingtable$;\n  }\n\n  public select_month: any;\n\n  public filters = <any>{\n    startDate: \"\",\n    endDate: \"\",\n  };\n\n  public startDateformonth: any = {\n    startDate: moment().subtract(1, \"month\").startOf(\"month\"),\n    endDate: moment().subtract(1, \"month\").endOf(\"month\"),\n  };\n\n  daterangefilter = this.startDateformonth;\n  alwaysShowCalendars: boolean;\n  ranges: any = {\n    Today: [moment(), moment()],\n    Yesterday: [moment().subtract(1, \"days\"), moment().subtract(1, \"days\")],\n    \"Last 1 Week\": [moment().subtract(6, \"days\"), moment()],\n    \"Last 28 Days\": [moment().subtract(27, \"days\"), moment()],\n    \"Last 90 Days\": [moment().subtract(89, \"days\"), moment()],\n    \"Last 365 Days\": [moment().subtract(364, \"days\"), moment()],\n    // 'This Month': [moment().startOf('month'), moment().endOf('month')],\n    // 'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]\n  };\n  invalidDates: moment.Moment[] = [\n    moment().add(2, \"days\"),\n    moment().add(3, \"days\"),\n    moment().add(5, \"days\"),\n  ];\n  initDate = true;\n  isInvalidDate = (m: moment.Moment) => {\n    return this.invalidDates.some((d) => d.isSame(m, \"day\"));\n  };\n\n  ngOnInit(): void {\n    this.daterangefilter = {\n      startDate: moment().subtract(27, \"days\"),\n      endDate: moment(),\n    };\n    this.filterForm(null);\n\n    this.channel = history.state.id;\n    this.getDashboardList();\n\n    this.getchannellist();\n  }\n\n  getchannellist() {\n    this.commonservice.getallchannel({ search: \"\" }).subscribe(\n      (data: any) => {\n        if (data.result) {\n          this.channels = data.result;\n          const channelId = history.state.id;\n          this.filterForm(channelId);\n        }\n        this.cd.markForCheck();\n      },\n      (err) => {}\n    );\n  }\n\n  public getByDate(event) {\n    if (event.startDate && event.endDate) {\n      this.filters[\"startDate\"] = moment(event.startDate._d).format(\n        \"YYYY-MM-DD\"\n      );\n      this.filters[\"endDate\"] = moment(event.endDate._d).format(\"YYYY-MM-DD\");\n    } else {\n      if (this.initDate) {\n        this.filters[\"startDate\"] = moment(\n          this.daterangefilter.startDate\n        ).format(\"YYYY-MM-DD\");\n        this.filters[\"endDate\"] = moment(this.daterangefilter.endDate).format(\n          \"YYYY-MM-DD\"\n        );\n        this.initDate = false;\n      } else {\n        this.filters[\"startDate\"] = this.filters[\"endDate\"] = null;\n      }\n    }\n    this.creatorgraph();\n    this.cd.markForCheck();\n  }\n\n  /**\n   * Populate the table with new data based on the page number\n   * @param page The page to select\n   */\n  setPage(pageInfo) {\n    this.page = pageInfo.offset + 1;\n    this.offset = pageInfo.offset;\n    //this.limit = pageInfo.limit;\n    this.getDashboardList();\n  }\n\n  /**\n   * Populate the table with new data based on the page number\n   * Short event\n   */\n  onSort(event) {\n    const sort = event.sorts[0];\n    const prop = sort.prop;\n    const dir = sort.dir;\n    this.page = 1;\n    this.offset = 0;\n\n    this.sortByComment =\n      this.sortByView =\n      this.sortByLike =\n      this.sortByDislike =\n      this.sortByTotalEarning =\n      this.sortByDrmRoyaltyShare =\n      this.sortByYourShare =\n      this.sortByVideoName =\n      this.sortByChannelName =\n        \"\";\n\n    switch (prop) {\n      case \"comment\":\n        this.sortByComment = \"1\";\n        break;\n      case \"view\":\n        this.sortByView = \"1\";\n        break;\n      case \"like\":\n        this.sortByLike = \"1\";\n        break;\n      case \"dislike\":\n        this.sortByDislike = \"1\";\n        break;\n      case \"total_earning\":\n        this.sortByTotalEarning = \"1\";\n        break;\n      case \"drm_royalty_share\":\n        this.sortByDrmRoyaltyShare = \"1\";\n        break;\n      case \"your_share\":\n        this.sortByYourShare = \"1\";\n        break;\n      case \"vedio_name\":\n        this.sortByVideoName = \"1\";\n        break;\n      case \"channel_name\":\n        this.sortByChannelName = \"1\";\n        break;\n      default:\n        this.sortByChannelName = \"1\";\n    }\n\n    if (dir == \"asc\") {\n      this.ascDesc = \"1\";\n    }\n    if (dir == \"desc\") {\n      this.ascDesc = \"-1\";\n    }\n\n    this.getDashboardList();\n  }\n\n  getDashboardList() {\n    const params = {\n      startDate: this.startDate,\n      endDate: this.endDate,\n      channel: this.channel,\n      page: this.page ?? 1,\n      limit: this.limit ?? 10,\n      ascDesc: this.ascDesc ?? 1,\n      sortByComment: this.sortByComment,\n      sortByView: this.sortByView,\n      sortByLike: this.sortByLike,\n      sortByDislike: this.sortByDislike,\n      sortByTotalEarning: this.sortByTotalEarning,\n      sortByDrmRoyaltyShare: this.sortByDrmRoyaltyShare,\n      sortByYourShare: this.sortByYourShare,\n      sortByVideoName: this.sortByVideoName,\n      sortByChannelName: this.sortByChannelName,\n    };\n    this.dashboardservice\n      .getDashboardTableListing(params)\n      .subscribe((data: any) => {\n        if (data.result) {\n          this.dashboardListing = data.result.docs;\n          this.count = data.result.totalDocs;\n          this.offset = data.result.page - 1;\n          this.currentdocsize = this.dashboardListing.length;\n          if (this.dashboardListing.length == 0) {\n            this.my_messages.emptyMessage = \"No data found.\";\n          }\n        }\n      });\n  }\n\n  filterForm(channelId) {\n    this.filterGroup = this.fb.group({\n      channel: [channelId ?? null],\n    });\n    this.subscriptions.push(\n      this.filterGroup.controls.channel.valueChanges.subscribe((value) => {\n        this.channel = value;\n        this.page = 1;\n        this.offset = 0;\n        this.creatorgraph();\n        this.getDashboardList();\n      })\n    );\n  }\n\n  creatorgraph() {\n    const params = {\n      startDate: this.filters[\"startDate\"],\n      endDate: this.filters[\"endDate\"],\n    };\n    const channels = this.filterGroup.get(\"channel\").value;\n    if (channels) {\n      params[\"channel\"] = channels;\n    }\n    this.dashboardservice\n      .getDashboardRightHolderGraph(params)\n      .subscribe((data: any) => {\n        if (data.result) {\n          this.graphData = data.result;\n\n          var creator_comments_data = [];\n          this.graphData.forEach((item) => {\n            creator_comments_data.push(item.comments.toFixed(2));\n          });\n          var creator_dislikes_data = [];\n          this.graphData.forEach((item) => {\n            creator_dislikes_data.push(item.dislikes.toFixed(2));\n          });\n          var creator_drm_royality_share_data = [];\n          this.graphData.forEach((item) => {\n            creator_drm_royality_share_data.push(\n              item.drm_royality_share.toFixed(2)\n            );\n          });\n          var creator_likes_data = [];\n          this.graphData.forEach((item) => {\n            creator_likes_data.push(item.likes.toFixed(2));\n          });\n          var creator_total_earning_data = [];\n          this.graphData.forEach((item) => {\n            creator_total_earning_data.push(item.total_earning.toFixed(2));\n          });\n          var creator_views_data = [];\n          this.graphData.forEach((item) => {\n            creator_views_data.push(item.views.toFixed(2));\n          });\n          var creator_your_share_data = [];\n          this.graphData.forEach((item) => {\n            creator_your_share_data.push(item.your_share.toFixed(2));\n          });\n\n          var creator_earning_dates = [];\n          this.graphData.forEach((item) => {\n            creator_earning_dates.push(item._id);\n          });\n\n          var graph_data = [\n            { data: creator_comments_data, label: \"Total Comments\" },\n            { data: creator_dislikes_data, label: \"Total DisLikes\" },\n            {\n              data: creator_drm_royality_share_data,\n              label: \"Total Royalty Share\",\n            },\n            { data: creator_likes_data, label: \"Total Likes\" },\n            { data: creator_total_earning_data, label: \"Total Earnings\" },\n            { data: creator_views_data, label: \"Total Views\" },\n            { data: creator_your_share_data, label: \"Total Share\" },\n          ];\n\n          this.areaChartData = graph_data;\n          this.areaChartLabels = creator_earning_dates;\n\n          if (this.graphData.length == 0) {\n            this.my_messages.emptyMessage = \"No data found.\";\n          }\n          this.cd.markForCheck();\n        }\n      });\n  }\n}\n","<!-- Basic Datatables -->\n<section id=\"ngx-datatable-basic\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n            <div class=\"card customisecard\">\n                <!-- <div class=\"card-header\">\n                    <div class=\"row\">\n                        <div class=\"col-md-6\">\n                            <h4 class=\"card-title mt-1\">Dashboard listing</h4>\n                        </div>\n                    </div>  \n                </div> -->\n                <!-- Area Chart Starts -->\n                <div class=\"row text-left\">\n                    <div class=\"col-sm-12\">\n                        <div class=\"card\">\n                            <div class=\"card-header\">\n                                <h4 class=\"card-title\">Rights Holder</h4>\n                            </div>\n                            <div class=\"card-content\">\n                                <div class=\"card-body\">\n                                    <fieldset class=\"form-group role_filter mb-2\" [formGroup]=\"filterGroup\">\n                                        <input class=\"form-control form-control-sm d-inline-block width-200 mr-1\"\n                                            type=\"text\" ngxDaterangepickerMd [(ngModel)]=\"daterangefilter\"\n                                            [showCustomRangeLabel]=\"true\" [alwaysShowCalendars]=\"true\"\n                                            [ngModelOptions]=\"{standalone: true}\" [ranges]=\" ranges\"\n                                            [linkedCalendars]=\"true\" (change)=\"getByDate($event)\"\n                                            [isInvalidDate]=\"isInvalidDate\" [showClearButton]=\"true\"\n                                            placeholder=\"Start Date - End Date\" />\n                                            <i *ngIf=\"isLoadingtable$ | async\" class=\"fa fa-spin fa-spinner mr-1\" ></i>\n\n                                        <ng-select class=\"d-inline-block form-control-sm width-200 mr-1\"\n                                            placeholder=\"Select Channel\" formControlName=\"channel\">\n                                            <ng-option value=\"\">Select Channel</ng-option>\n                                            <ng-option value=\"{{channel._id}}\" *ngFor=\"let channel of channels\">\n                                                {{channel.channel_title}}\n                                            </ng-option>\n                                        </ng-select>\n                                    </fieldset>\n                                    <div class=\"height-400\">\n                                        <canvas height=\"400\" baseChart class=\"chart\" [datasets]=\"areaChartData\"\n                                            [labels]=\"areaChartLabels\" [options]=\"areaChartOptions\"\n                                            [colors]=\"areaChartColors\" [legend]=\"areaChartLegend\"\n                                            [chartType]=\"areaChartType\"></canvas>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <!-- Area Chart Ends -->\n                <div class=\"card-content\">\n                    <div class=\"card-body\">\n\n                        <!-- ngx-datatable Basic -->\n                        <ngx-datatable class=\"bootstrap core-bootstrap\" [rows]=\"dashboardListing\" rowHeight=\"auto\"\n                            [messages]=\"my_messages\" [columnMode]=\"ColumnMode.force\" [scrollbarH]=\"true\"\n                            [headerHeight]=\"50\" [footerHeight]=\"50\" [count]=\"count\" [externalPaging]=\"true\"\n                            [externalSorting]=\"true\" [limit]=\"limit\" [offset]=\"offset\" (page)=\"setPage($event)\"\n                            (sort)=\"onSort($event)\">\n\n                            <ngx-datatable-column class=\"datatable-row-left\" [frozenLeft]=\"true\" name=\"Audio\"\n                                prop=\"vedio_name\" [width]=\"260\">\n                                <ng-template let-row=\"row\" let-name=\"value\" ngx-datatable-cell-template>\n                                    {{ row.video_name}}\n                                </ng-template>\n                            </ngx-datatable-column>\n\n                            <ngx-datatable-column name=\"Views\" prop=\"view\">\n                                <ng-template ngx-datatable-cell-template let-row=\"row\">\n                                  {{ row.views | number: \"1.0-2\" }}\n                                </ng-template>\n                              </ngx-datatable-column>\n                              <ngx-datatable-column name=\"Likes\" prop=\"like\">\n                                <ng-template ngx-datatable-cell-template let-row=\"row\">\n                                  {{ row.likes | number: \"1.0-2\" }}\n                                </ng-template>\n                              </ngx-datatable-column>\n                              <ngx-datatable-column name=\"Dislikes\" prop=\"dislike\">\n                                <ng-template ngx-datatable-cell-template let-row=\"row\">\n                                  {{ row.dislikes | number: \"1.0-2\" }}\n                                </ng-template>\n                              </ngx-datatable-column>\n                              <ngx-datatable-column name=\"Comments\" prop=\"comment\">\n                                <ng-template ngx-datatable-cell-template let-row=\"row\">\n                                  {{ row.comments | number: \"1.0-2\" }}\n                                </ng-template>\n                              </ngx-datatable-column>\n                              <ngx-datatable-column name=\"Revenue\" prop=\"total_earning\">\n                                <ng-template ngx-datatable-cell-template let-row=\"row\">\n                                  {{ row.total_earning | number: \"1.0-2\" }}\n                                </ng-template>\n                              </ngx-datatable-column>\n                        </ngx-datatable>\n                        <div class=\"spinner_loading\" *ngIf=\"isLoadingtable$ | async\">\n                            <i class=\"fa fa-spinner fa-spin \"></i> Loading...\n                        </div>\n                        <!--/ ngx-datatable Basic -->\n\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</section>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PermissionGuard } from 'app/core/service/guard/permission.guard';\nimport { DashboardComponent } from './dashboard.component';\nimport { MainDashboardComponent } from './main-dashboard/main-dashboard.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: MainDashboardComponent,\n    canActivate: [PermissionGuard],\n    data: {\n      title: 'Dashboard',\n      permissionS: \"ALLOW-ALL\"\n    }\n  },\n  // {\n  //   path: ':id',\n  //   component: MainDashboardComponent,\n  //   data: {\n  //     title: 'Dashboard'\n  //   }\n  // },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class DashboardRoutingModule { }\n","import {\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  OnDestroy,\n  OnInit,\n  ViewChild,\n  ViewEncapsulation,\n} from \"@angular/core\";\nimport { FormBuilder, FormGroup } from \"@angular/forms\";\nimport { ActivatedRoute } from \"@angular/router\";\nimport { AuthService } from \"app/core/service/auth/auth.service\";\nimport { CommonService } from \"app/core/service/common/common.service\";\nimport { DashboardService } from \"app/modules/dashboard/_services/dashboard.service\";\nimport * as moment from \"moment\";\nimport { Subscription } from \"rxjs/internal/Subscription\";\nimport * as chartsData from \"../../shared/data/chartjs\";\n\n@Component({\n  selector: \"app-dashboard\",\n  templateUrl: \"./dashboard.component.html\",\n  styleUrls: [\n    \"./dashboard.component.scss\",\n    \"../../../assets/sass/pages/page-users.scss\",\n    \"../../../assets/sass/libs/select.scss\",\n  ],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class DashboardComponent implements OnInit, OnDestroy {\n  // lineChart\n  public lineChartDataForRoyalties: Array<any> = [{ label: \"\" }];\n  public lineChartLabelsForRoyalties: Array<any> = [];\n  public lineChartOptionsForRoyalties =\n    chartsData.lineChartOptionsForAccChannel;\n  public lineChartOptionsForAnalyticsChart =\n    chartsData.lineChartOptionsForAnalyticsChart;\n  public lineChartColorsForRoyalties = chartsData.lineChartColorsForAccChannel;\n  public lineChartLegend = chartsData.lineChartLegend;\n  public lineChartType = chartsData.lineChartType;\n\n  public lineChartDataForContent: Array<any> = [{ label: \"\" }];\n  public lineChartDataForAll: Array<any> = [{ label: \"\" }];\n  public lineChartDataForAnalysis: Array<any> = [{ label: \"\" }];\n\n  public lineChartLabelsForContent: Array<any> = [];\n  public lineChartLabelsForAll: Array<any> = [];\n  public lineChartLabelsForAnalysis: Array<any> = [];\n  public lineChartColorsForContent = chartsData.lineChartColorsForContent;\n  public lineChartColorsForAll = chartsData.lineChartColorsForAll;\n  public lineChartColorsForAnalysis = chartsData.lineChartColorsForAnalysis;\n  private subscriptions: Subscription[] = [];\n\n  public accountdata: any;\n  public contentdata: any;\n  public revenuedata: any;\n\n  public rows: Array<any> = [];\n  public graphData: any;\n  public graphDataContent: any;\n  public graphDataRevenue: any;\n  public graphDataAnalysis: any;\n  public channels: Array<any> = [];\n  public creators: Array<any> = [];\n  public right_holders: Array<any> = [];\n  public filter_chart_data_var: string;\n  public currenttab: string;\n  isLoadingtable$;\n  filterGroup: FormGroup;\n\n  // ngbNav's active parameter\n  activeTab = 1;\n\n  public filters = <any>{\n    startDate: \"\",\n    endDate: \"\",\n  };\n\n  public startDateformonth: any = {\n    startDate: moment().startOf(\"month\"),\n    endDate: moment().endOf(\"month\"),\n  };\n  daterangefilter: any = {};\n  alwaysShowCalendars: boolean;\n  ranges: any = {\n    Today: [moment(), moment()],\n    \"Last 1 Week\": [moment().subtract(6, \"days\"), moment()],\n    Yesterday: [moment().subtract(1, \"days\"), moment().subtract(1, \"days\")],\n    \"Last 28 Days\": [moment().subtract(27, \"days\"), moment()],\n    \"Last 90 Days\": [moment().subtract(89, \"days\"), moment()],\n    \"Last 365 Days\": [moment().subtract(364, \"days\"), moment()],\n    // 'This Month': [moment().startOf('month'), moment().endOf('month')],\n    // 'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]\n  };\n  invalidDates: moment.Moment[] = [\n    moment().add(2, \"days\"),\n    moment().add(3, \"days\"),\n    moment().add(5, \"days\"),\n  ];\n\n  isInvalidDate = (m: moment.Moment) => {\n    return this.invalidDates.some((d) => d.isSame(m, \"day\"));\n  };\n  initDate = true;\n  @ViewChild(\"dateInput\") dateInput: ElementRef;\n\n  constructor(\n    private dashboardservice: DashboardService,\n    private cd: ChangeDetectorRef,\n    private fb: FormBuilder,\n    private route: ActivatedRoute,\n    private commonService: CommonService,\n    public authService: AuthService\n  ) {\n    this.isLoadingtable$ = this.dashboardservice.isLoadingtable$;\n    this.alwaysShowCalendars = true;\n  }\n\n  ngOnInit(): void {\n    this.filter_chart_data_var = \"channel\";\n    this.currenttab = \"account\";\n    this.filterForm(null);\n    // this.daterangefilter = this.startDateformonth;\n    this.initDateRangeFilter();\n\n    if (history.state.isAnalyticsTab) {\n      this.changetab(\"analysis\");\n      this.activeTab = 4;\n    } else {\n      // this.loaddata();\n    }\n  }\n\n  private initDateRangeFilter() {\n    this.daterangefilter.startDate = moment().subtract(27, \"days\");\n    this.daterangefilter.endDate = moment();\n  }\n\n  getchannellist() {\n    this.commonService.getallchannel({ search: \"\" }).subscribe(\n      (data: any) => {\n        if (data.result) {\n          this.channels = data.result;\n          const channelId = history.state.id;\n          this.filterForm(channelId);\n          this.getGraphdataAnalysis();\n        }\n        this.cd.markForCheck();\n      },\n      (err) => {}\n    );\n  }\n\n  loaddata() {\n    if (this.currenttab == \"account\") {\n      this.getaccountcount();\n    }\n    if (this.currenttab == \"content\") {\n      this.getcontentcount();\n    }\n    if (this.currenttab == \"revenue\") {\n      this.getrevenuecount();\n    }\n    if (this.currenttab == \"analysis\") {\n      // No need to call any count method as there are no cards\n    }\n    this.graphload();\n  }\n\n  graphload() {\n    if (this.currenttab == \"account\") {\n      this.getGraphdataAccount();\n    }\n    if (this.currenttab == \"content\") {\n      this.getGraphdataContent();\n    }\n    if (this.currenttab == \"revenue\") {\n      this.getGraphdataRevenue();\n    }\n    if (this.currenttab == \"analysis\") {\n      this.getGraphdataAnalysis();\n    }\n  }\n\n  reset_chart_data() {\n    this.lineChartDataForRoyalties = [{ label: \"\" }];\n    this.lineChartLabelsForRoyalties = [];\n    this.lineChartDataForContent = [{ label: \"\" }];\n    this.lineChartDataForAll = [{ label: \"\" }];\n    this.lineChartDataForAnalysis = [{ label: \"\" }];\n    this.lineChartLabelsForContent = [];\n    this.lineChartLabelsForAll = [];\n    this.lineChartLabelsForAnalysis = [];\n  }\n\n  changetab(tabtype) {\n    this.initDate = true;\n    this.reset_chart_data();\n    if (tabtype == \"account\") {\n      this.filter_chart_data_var = \"channel\";\n    }\n    if (tabtype == \"content\") {\n      this.filter_chart_data_var = \"youtube_video\";\n    }\n    if (tabtype == \"revenue\") {\n      this.filter_chart_data_var = \"All\";\n    }\n    if (tabtype == \"analysis\") {\n      this.filter_chart_data_var = \"analysis\";\n      this.currenttab = tabtype;\n      this.getchannellist();\n      return;\n    }\n    this.currenttab = tabtype;\n    // this.loaddata();\n    // No need as getByDate will be called already\n  }\n\n  getByDate(event) {\n    if (event.startDate && event.endDate) {\n      this.filters[\"startDate\"] = moment(event.startDate._d).format(\n        \"YYYY-MM-DD\"\n      );\n      this.filters[\"endDate\"] = moment(event.endDate._d).format(\"YYYY-MM-DD\");\n    } else {\n      if (this.initDate) {\n        this.initDateRangeFilter();\n\n        this.filters[\"startDate\"] = moment(\n          this.daterangefilter.startDate\n        ).format(\"YYYY-MM-DD\");\n        this.filters[\"endDate\"] = moment(this.daterangefilter.endDate).format(\n          \"YYYY-MM-DD\"\n        );\n        this.initDate = false;\n        // return;\n      } else {\n        this.filters[\"startDate\"] = this.filters[\"endDate\"] = null;\n      }\n    }\n\n    this.loaddata();\n  }\n\n  filterForm(channelId) {\n    this.filterGroup = this.fb.group({\n      channel: [channelId ?? null],\n    });\n    this.subscriptions.push(\n      this.filterGroup.controls.channel.valueChanges.subscribe(() => {\n        this.getGraphdataAnalysis();\n      })\n    );\n  }\n\n  getaccountcount() {\n    const params = {\n      startDate: this.filters[\"startDate\"] ?? \"\",\n      endDate: this.filters[\"endDate\"] ?? \"\",\n    };\n    this.dashboardservice.getaccountdata(params).subscribe((data: any) => {\n      this.cd.markForCheck();\n      if (data.result) {\n        this.accountdata = data.result;\n      }\n    });\n  }\n\n  getcontentcount() {\n    const params = {\n      startDate: this.filters[\"startDate\"] ?? \"\",\n      endDate: this.filters[\"endDate\"] ?? \"\",\n    };\n    this.dashboardservice.getcontentdata(params).subscribe((data: any) => {\n      this.cd.markForCheck();\n      if (data.result) {\n        this.contentdata = data.result;\n      }\n    });\n  }\n\n  getrevenuecount() {\n    const params = {\n      startDate: this.filters[\"startDate\"] ?? \"\",\n      endDate: this.filters[\"endDate\"] ?? \"\",\n    };\n    this.dashboardservice.getrevenuedata(params).subscribe((data: any) => {\n      this.cd.markForCheck();\n      if (data.result) {\n        this.revenuedata = data.result;\n      }\n    });\n  }\n\n  getGraphdataAccount() {\n    const params = {\n      startDate: this.filters[\"startDate\"] ?? \"\",\n      endDate: this.filters[\"endDate\"] ?? \"\",\n    };\n    this.dashboardservice.getallDataGraphAccount(params).subscribe(\n      (data: any) => {\n        this.cd.markForCheck();\n        if (data.result) {\n          this.graphData = data.result;\n          this.changecard(this.filter_chart_data_var);\n        }\n      },\n      (err) => {}\n    );\n  }\n\n  getGraphdataContent() {\n    const params = {\n      startDate: this.filters[\"startDate\"] ?? \"\",\n      endDate: this.filters[\"endDate\"] ?? \"\",\n    };\n    this.dashboardservice.getallDataGraphContent(params).subscribe(\n      (data: any) => {\n        this.cd.markForCheck();\n        if (data.result) {\n          this.graphDataContent = data.result;\n          this.changecard(this.filter_chart_data_var);\n        }\n      },\n      (err) => {}\n    );\n  }\n\n  getGraphdataRevenue() {\n    const params = {\n      startDate: this.filters[\"startDate\"] ?? \"\",\n      endDate: this.filters[\"endDate\"] ?? \"\",\n    };\n    this.dashboardservice.getallDataGraphRevenue(params).subscribe(\n      (data: any) => {\n        this.cd.markForCheck();\n        if (data.result) {\n          this.graphDataRevenue = data.result;\n          this.changecard(this.filter_chart_data_var);\n        }\n      },\n      (err) => {}\n    );\n  }\n\n  getGraphdataAnalysis() {\n    const params = {\n      startDate: this.filters[\"startDate\"] ?? \"\",\n      endDate: this.filters[\"endDate\"] ?? \"\",\n    };\n    const channels = this.filterGroup.get(\"channel\").value;\n    if (channels) {\n      params[\"channel\"] = channels;\n    }\n    this.dashboardservice.getDashboardCreatorGraph(params).subscribe(\n      (data: any) => {\n        if (data.result) {\n          this.graphDataAnalysis = data.result;\n          this.changecard(this.filter_chart_data_var);\n        }\n        this.cd.markForCheck();\n      },\n      (err) => {}\n    );\n  }\n\n  changecard(chart_type) {\n    this.filter_chart_data_var = chart_type;\n    if (chart_type === \"channel\") {\n      var chart_channel_count = [];\n      this.graphData.channel.forEach((item) => {\n        chart_channel_count.push(item.count.toFixed(2));\n      });\n      var chart_channel_dates = [];\n      this.graphData.channel.forEach((item) => {\n        chart_channel_dates.push(item._id);\n      });\n      var graph_data = [{ data: chart_channel_count, label: \"Channels\" }];\n      this.lineChartDataForRoyalties = graph_data;\n      this.lineChartLabelsForRoyalties = chart_channel_dates;\n      this.lineChartColorsForRoyalties =\n        chartsData.lineChartColorsForAccChannel;\n    }\n    if (chart_type === \"creators\") {\n      var chart_creator_count = [];\n      this.graphData.creator.forEach((item) => {\n        chart_creator_count.push(item.count.toFixed(2));\n      });\n      var chart_creator_dates = [];\n      this.graphData.creator.forEach((item) => {\n        chart_creator_dates.push(item._id);\n      });\n      var graph_data = [{ data: chart_creator_count, label: \"Creators\" }];\n      this.lineChartDataForRoyalties = graph_data;\n      this.lineChartLabelsForRoyalties = chart_creator_dates;\n      this.lineChartColorsForRoyalties =\n        chartsData.lineChartColorsForAccCreator;\n    }\n    if (chart_type === \"rights_holder\") {\n      var chart_rights_holder_count = [];\n      this.graphData.rights_holder.forEach((item) => {\n        chart_rights_holder_count.push(item.count.toFixed(2));\n      });\n      var chart_rights_holder_dates = [];\n      this.graphData.rights_holder.forEach((item) => {\n        chart_rights_holder_dates.push(item._id);\n      });\n      var graph_data = [\n        { data: chart_rights_holder_count, label: \"Rights Holder\" },\n      ];\n      this.lineChartDataForRoyalties = graph_data;\n      this.lineChartLabelsForRoyalties = chart_rights_holder_dates;\n      this.lineChartColorsForRoyalties =\n        chartsData.lineChartColorsForAccRightsHolder;\n    }\n    if (chart_type === \"artist\") {\n      var chart_artist_count = [];\n      this.graphData.artist.forEach((item) => {\n        chart_artist_count.push(item.count.toFixed(2));\n      });\n      var chart_artist_dates = [];\n      this.graphData.artist.forEach((item) => {\n        chart_artist_dates.push(item._id);\n      });\n      var graph_data = [{ data: chart_artist_count, label: \"Speakers\" }];\n      this.lineChartDataForRoyalties = graph_data;\n      this.lineChartLabelsForRoyalties = chart_artist_dates;\n      this.lineChartColorsForRoyalties = chartsData.lineChartColorsForAccArtist;\n    }\n    if (chart_type === \"youtube_video\") {\n      var chart_youtube_count = [];\n      this.graphDataContent.youtube_video.forEach((item) => {\n        chart_youtube_count.push(item.count.toFixed(2));\n      });\n      var chart_youtube_dates = [];\n      this.graphDataContent.youtube_video.forEach((item) => {\n        chart_youtube_dates.push(item._id);\n      });\n      var graph_data = [{ data: chart_youtube_count, label: \"Youtube Videos\" }];\n      this.lineChartDataForContent = graph_data;\n      this.lineChartLabelsForContent = chart_youtube_dates;\n      this.lineChartColorsForContent = chartsData.lineChartColorsForContent;\n    }\n    if (chart_type === \"clips\") {\n      var chart_youtube_count = [];\n      this.graphDataContent.clips.forEach((item) => {\n        chart_youtube_count.push(item.count);\n      });\n      var chart_youtube_dates = [];\n      this.graphDataContent.clips.forEach((item) => {\n        chart_youtube_dates.push(item._id);\n      });\n      var graph_data = [\n        { data: chart_youtube_count, label: \"Audios Available\" },\n      ];\n      this.lineChartDataForContent = graph_data;\n      this.lineChartLabelsForContent = chart_youtube_dates;\n      this.lineChartColorsForContent =\n        chartsData.lineChartColorsForAudioAvailable;\n    }\n    if (chart_type === \"contract\") {\n      var chart_youtube_count = [];\n      this.graphDataContent.contract.forEach((item) => {\n        chart_youtube_count.push(item.count.toFixed(2));\n      });\n      var chart_youtube_dates = [];\n      this.graphDataContent.contract.forEach((item) => {\n        chart_youtube_dates.push(item._id);\n      });\n      var graph_data = [\n        { data: chart_youtube_count, label: \"Creatoe Agreement\" },\n      ];\n      this.lineChartDataForContent = graph_data;\n      this.lineChartLabelsForContent = chart_youtube_dates;\n      this.lineChartColorsForContent =\n        chartsData.lineChartColorsForCreatorAgreement;\n    }\n    if (chart_type === \"contract_assigned\") {\n      var chart_youtube_count = [];\n      this.graphDataContent.contract_assigned.forEach((item) => {\n        chart_youtube_count.push(item.count.toFixed(2));\n      });\n      var chart_youtube_dates = [];\n      this.graphDataContent.contract_assigned.forEach((item) => {\n        chart_youtube_dates.push(item._id);\n      });\n      var graph_data = [\n        { data: chart_youtube_count, label: \"Contract Assigned\" },\n      ];\n      this.lineChartDataForContent = graph_data;\n      this.lineChartLabelsForContent = chart_youtube_dates;\n      this.lineChartColorsForContent =\n        chartsData.lineChartColorsForContractAssigned;\n    }\n    if (chart_type === \"All\") {\n      var rights_holder_earning = [];\n      this.graphDataRevenue.forEach((item) => {\n        rights_holder_earning.push(item.rights_holder_earning.toFixed(2));\n      });\n      var creator_earning = [];\n      this.graphDataRevenue.forEach((item) => {\n        creator_earning.push(item.creator_earning.toFixed(2));\n      });\n      var mindset_earning = [];\n      this.graphDataRevenue.forEach((item) => {\n        mindset_earning.push(item.mindset_earning.toFixed(2));\n      });\n      var chart_youtube_dates = [];\n      this.graphDataRevenue.forEach((item) => {\n        chart_youtube_dates.push(item._id);\n      });\n      var graph_data = [\n        { data: rights_holder_earning, label: \"Rights Holder Revenue\" },\n        { data: creator_earning, label: \"Creator Revenue\" },\n        { data: mindset_earning, label: \"Mindset Revenue\" },\n      ];\n      this.lineChartDataForAll = graph_data;\n      this.lineChartLabelsForAll = chart_youtube_dates;\n      this.lineChartColorsForAll = chartsData.lineChartColorsForAll;\n    }\n    if (chart_type === \"analysis\") {\n      var creator_comments_data = [];\n      this.graphDataAnalysis.forEach((item) => {\n        creator_comments_data.push(item.comments.toFixed(2));\n      });\n      var creator_dislikes_data = [];\n      this.graphDataAnalysis.forEach((item) => {\n        creator_dislikes_data.push(item.dislikes.toFixed(2));\n      });\n      var creator_drm_royality_share_data = [];\n      this.graphDataAnalysis.forEach((item) => {\n        creator_drm_royality_share_data.push(\n          item.drm_royality_share.toFixed(2)\n        );\n      });\n      var creator_likes_data = [];\n      this.graphDataAnalysis.forEach((item) => {\n        creator_likes_data.push(item.likes.toFixed(2));\n      });\n      var creator_total_earning_data = [];\n      this.graphDataAnalysis.forEach((item) => {\n        creator_total_earning_data.push(item.total_earning.toFixed(2));\n      });\n      var creator_views_data = [];\n      this.graphDataAnalysis.forEach((item) => {\n        creator_views_data.push(item.views.toFixed(2));\n      });\n      var creator_your_share_data = [];\n      this.graphDataAnalysis.forEach((item) => {\n        creator_your_share_data.push(item.your_share.toFixed(2));\n      });\n\n      var creator_earning_dates = [];\n      this.graphDataAnalysis.forEach((item) => {\n        creator_earning_dates.push(item._id);\n      });\n\n      var graph_data = [\n        { data: creator_comments_data, label: \"Total Comments\" },\n        { data: creator_dislikes_data, label: \"Total DisLikes\" },\n        { data: creator_drm_royality_share_data, label: \"Total Royalty Share\" },\n        { data: creator_likes_data, label: \"Total Likes\" },\n        { data: creator_total_earning_data, label: \"Total Revenue\" },\n        { data: creator_views_data, label: \"Total Views\" },\n        { data: creator_your_share_data, label: \"Total Share\" },\n      ];\n\n      this.lineChartDataForAnalysis = graph_data;\n      this.lineChartLabelsForAnalysis = creator_earning_dates;\n      this.lineChartColorsForAnalysis = chartsData.lineChartColorsForAnalysis;\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.subscriptions.forEach((s) => s.unsubscribe());\n  }\n}\n","<section class=\"users-edit dashboard\">\n  <div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"card\">\n        <div class=\"card-content\">\n          <div class=\"card-body\">\n            <!-- Nav-tabs -->\n            <ul\n              ngbNav\n              #nav=\"ngbNav\"\n              [activeId]=\"activeTab\"\n              class=\"nav-tabs dashboard-tabs justify-content-left\"\n            >\n              <li [ngbNavItem]=\"1\">\n                <a\n                  (click)=\"changetab('account')\"\n                  ngbNavLink\n                  class=\"nav-link d-flex align-items-center\"\n                >\n                  <span class=\"d-none d-sm-block\">Accounts</span>\n                </a>\n                <ng-template ngbNavContent>\n                  <!-- Minimal statistics section start -->\n                  <section id=\"minimal-statistics\">\n                    <fieldset class=\"form-group role_filter mt-2\">\n                      <input\n                        class=\"form-control form-control-sm d-inline-block width-200 mr-1\"\n                        type=\"text\"\n                        #dateInput\n                        name=\"dateInput\"\n                        ngxDaterangepickerMd\n                        [(ngModel)]=\"daterangefilter\"\n                        [showCustomRangeLabel]=\"true\"\n                        [alwaysShowCalendars]=\"true\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [ranges]=\"ranges\"\n                        [linkedCalendars]=\"true\"\n                        (change)=\"getByDate($event)\"\n                        [isInvalidDate]=\"isInvalidDate\"\n                        [showClearButton]=\"true\"\n                        placeholder=\"Start Date - End Date\"\n                      />\n\n                      <i\n                        *ngIf=\"isLoadingtable$ | async\"\n                        class=\"fa fa-spin fa-spinner\"\n                      ></i>\n                    </fieldset>\n                    <div class=\"row\">\n                      <div\n                        role=\"button\"\n                        class=\"col-xl-3 col-lg-6 col-12\"\n                        (click)=\"changecard('channel')\"\n                      >\n                        <div class=\"card\">\n                          <div\n                            class=\"card-content\"\n                            [class.card-active]=\"\n                              filter_chart_data_var == 'channel'\n                            \"\n                          >\n                            <div class=\"card-body box-shadow-block\">\n                              <div class=\"media\">\n                                <div class=\"media-body text-left\">\n                                  <h3 class=\"mb-1 danger\">\n                                    <i\n                                      class=\"fa fa-spin fa-spinner\"\n                                      *ngIf=\"!accountdata\"\n                                    ></i>\n                                    <ng-container *ngIf=\"accountdata\"\n                                      >{{ accountdata.channels }}\n                                    </ng-container>\n                                  </h3>\n                                  <span>Channels</span>\n                                </div>\n                                <div class=\"media-right align-self-center\">\n                                  <i\n                                    class=\"ft-briefcase danger font-large-2 float-right\"\n                                  ></i>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div\n                        role=\"button\"\n                        class=\"col-xl-3 col-lg-6 col-12\"\n                        (click)=\"changecard('creators')\"\n                      >\n                        <div class=\"card\">\n                          <div\n                            class=\"card-content\"\n                            [class.card-active]=\"\n                              filter_chart_data_var == 'creators'\n                            \"\n                          >\n                            <div class=\"card-body box-shadow-block\">\n                              <div class=\"media\">\n                                <div class=\"media-body text-left\">\n                                  <h3 class=\"mb-1 success\">\n                                    <i\n                                      class=\"fa fa-spin fa-spinner\"\n                                      *ngIf=\"!accountdata\"\n                                    ></i>\n                                    <ng-container *ngIf=\"accountdata\"\n                                      >{{ accountdata.creators }}\n                                    </ng-container>\n                                  </h3>\n                                  <span>Creators</span>\n                                </div>\n                                <div class=\"media-right align-self-center\">\n                                  <i\n                                    class=\"ft-user success font-large-2 float-right\"\n                                  ></i>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div\n                        role=\"button\"\n                        class=\"col-xl-3 col-lg-6 col-12\"\n                        (click)=\"changecard('rights_holder')\"\n                      >\n                        <div class=\"card\">\n                          <div\n                            class=\"card-content\"\n                            [class.card-active]=\"\n                              filter_chart_data_var == 'rights_holder'\n                            \"\n                          >\n                            <div class=\"card-body box-shadow-block\">\n                              <div class=\"media\">\n                                <div class=\"media-body text-left\">\n                                  <h3 class=\"mb-1 warning\">\n                                    <i\n                                      class=\"fa fa-spin fa-spinner\"\n                                      *ngIf=\"!accountdata\"\n                                    ></i>\n                                    <ng-container *ngIf=\"accountdata\"\n                                      >{{ accountdata.rights_holders }}\n                                    </ng-container>\n                                  </h3>\n                                  <span>Rights Holders</span>\n                                </div>\n                                <div class=\"media-right align-self-center\">\n                                  <i\n                                    class=\"ft-pie-chart warning font-large-2 float-right\"\n                                  ></i>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div\n                        role=\"button\"\n                        class=\"col-xl-3 col-lg-6 col-12\"\n                        (click)=\"changecard('artist')\"\n                      >\n                        <div class=\"card\">\n                          <div\n                            class=\"card-content\"\n                            [class.card-active]=\"\n                              filter_chart_data_var == 'artist'\n                            \"\n                          >\n                            <div class=\"card-body box-shadow-block\">\n                              <div class=\"media\">\n                                <div class=\"media-body text-left\">\n                                  <h3 class=\"mb-1 info\">\n                                    <i\n                                      class=\"fa fa-spin fa-spinner\"\n                                      *ngIf=\"!accountdata\"\n                                    ></i>\n                                    <ng-container *ngIf=\"accountdata\"\n                                      >{{ accountdata.artists }}\n                                    </ng-container>\n                                  </h3>\n                                  <span>Speakers</span>\n                                </div>\n                                <div class=\"media-right align-self-center\">\n                                  <i\n                                    class=\"ft-life-buoy info font-large-2 float-right\"\n                                  ></i>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </section>\n                  <!-- // Minimal statistics section end -->\n                  <div class=\"row text-left\">\n                    <div class=\"col-sm-12\">\n                      <div class=\"card\">\n                        <div class=\"card-header\">\n                          <h4 class=\"card-title\">\n                            <span *ngIf=\"filter_chart_data_var == 'channel'\"\n                              >Channels</span\n                            >\n                            <span *ngIf=\"filter_chart_data_var == 'creators'\"\n                              >Creators</span\n                            >\n                            <span\n                              *ngIf=\"filter_chart_data_var == 'rights_holder'\"\n                              >Rights Holder</span\n                            >\n                            <span *ngIf=\"filter_chart_data_var == 'artist'\"\n                              >Speakers</span\n                            >\n                            <ng-container\n                              *ngIf=\"filters.startDate && filters.endDate\"\n                            >\n                              - ({{ filters.startDate }} To\n                              {{ filters.endDate }})</ng-container\n                            >\n                          </h4>\n                        </div>\n                        <div class=\"card-content\">\n                          <div class=\"card-body\">\n                            <div class=\"height-400\">\n                              <canvas\n                                height=\"400\"\n                                baseChart\n                                class=\"chart\"\n                                [datasets]=\"lineChartDataForRoyalties\"\n                                [labels]=\"lineChartLabelsForRoyalties\"\n                                [options]=\"lineChartOptionsForRoyalties\"\n                                [colors]=\"lineChartColorsForRoyalties\"\n                                [legend]=\"lineChartLegend\"\n                                [chartType]=\"lineChartType\"\n                              ></canvas>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <!-- Line Chart Ends -->\n                </ng-template>\n              </li>\n              <li [ngbNavItem]=\"2\">\n                <a\n                  (click)=\"changetab('content')\"\n                  ngbNavLink\n                  class=\"nav-link d-flex align-items-center\"\n                >\n                  <span class=\"d-none d-sm-block\">Content</span>\n                </a>\n                <ng-template ngbNavContent>\n                  <!-- Minimal statistics section start -->\n                  <section id=\"minimal-statistics\">\n                    <fieldset\n                      class=\"form-group role_filter mt-2\"\n                      [formGroup]=\"filterGroup\"\n                    >\n                      <input\n                        class=\"form-control form-control-sm d-inline-block width-200 mr-1\"\n                        type=\"text\"\n                        ngxDaterangepickerMd\n                        [(ngModel)]=\"daterangefilter\"\n                        [showCustomRangeLabel]=\"true\"\n                        [alwaysShowCalendars]=\"true\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [ranges]=\"ranges\"\n                        [linkedCalendars]=\"true\"\n                        (change)=\"getByDate($event)\"\n                        [isInvalidDate]=\"isInvalidDate\"\n                        [showClearButton]=\"true\"\n                        placeholder=\"Start Date - End Date\"\n                      />\n                      <i\n                        *ngIf=\"isLoadingtable$ | async\"\n                        class=\"fa fa-spin fa-spinner\"\n                      ></i>\n                    </fieldset>\n                    <div class=\"row\">\n                      <div\n                        role=\"button\"\n                        class=\"col-xl-3 col-lg-6 col-12\"\n                        (click)=\"\n                          changecard('youtube_video'); getGraphdataContent()\n                        \"\n                      >\n                        <div class=\"card\">\n                          <div\n                            class=\"card-content\"\n                            [class.card-active]=\"\n                              filter_chart_data_var == 'youtube_video'\n                            \"\n                          >\n                            <div class=\"card-body box-shadow-block\">\n                              <div class=\"media\">\n                                <div class=\"media-body text-left\">\n                                  <h3 class=\"mb-1 danger\">\n                                    <i\n                                      class=\"fa fa-spin fa-spinner\"\n                                      *ngIf=\"!contentdata\"\n                                    ></i>\n                                    <ng-container *ngIf=\"contentdata\"\n                                      >{{ contentdata.youtube_video }}\n                                    </ng-container>\n                                  </h3>\n                                  <span>YouTube Videos</span>\n                                </div>\n                                <div class=\"media-right align-self-center\">\n                                  <i\n                                    class=\"ft-video danger font-large-2 float-right\"\n                                  ></i>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div\n                        role=\"button\"\n                        class=\"col-xl-3 col-lg-6 col-12\"\n                        (click)=\"changecard('clips')\"\n                      >\n                        <div class=\"card\">\n                          <div\n                            class=\"card-content\"\n                            [class.card-active]=\"\n                              filter_chart_data_var == 'clips'\n                            \"\n                          >\n                            <div class=\"card-body box-shadow-block\">\n                              <div class=\"media\">\n                                <div class=\"media-body text-left\">\n                                  <h3 class=\"mb-1 success\">\n                                    <i\n                                      class=\"fa fa-spin fa-spinner\"\n                                      *ngIf=\"!contentdata\"\n                                    ></i>\n                                    <ng-container *ngIf=\"contentdata\"\n                                      >{{ contentdata.clips }}\n                                    </ng-container>\n                                  </h3>\n                                  <span>Audios Available</span>\n                                </div>\n                                <div class=\"media-right align-self-center\">\n                                  <i\n                                    class=\"ft-music success font-large-2 float-right\"\n                                  ></i>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div\n                        role=\"button\"\n                        class=\"col-xl-3 col-lg-6 col-12\"\n                        (click)=\"changecard('contract')\"\n                      >\n                        <div class=\"card\">\n                          <div\n                            class=\"card-content\"\n                            [class.card-active]=\"\n                              filter_chart_data_var == 'contract'\n                            \"\n                          >\n                            <div class=\"card-body box-shadow-block\">\n                              <div class=\"media\">\n                                <div class=\"media-body text-left\">\n                                  <h3 class=\"mb-1 warning\">\n                                    <i\n                                      class=\"fa fa-spin fa-spinner\"\n                                      *ngIf=\"!contentdata\"\n                                    ></i>\n                                    <ng-container *ngIf=\"contentdata\"\n                                      >{{ contentdata.contract }}\n                                    </ng-container>\n                                  </h3>\n                                  <span>Creator Agreements</span>\n                                </div>\n                                <div class=\"media-right align-self-center\">\n                                  <i\n                                    class=\"ft-file-text warning font-large-2 float-right\"\n                                  ></i>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div\n                        role=\"button\"\n                        class=\"col-xl-3 col-lg-6 col-12\"\n                        (click)=\"changecard('contract_assigned')\"\n                      >\n                        <div class=\"card\">\n                          <div\n                            class=\"card-content\"\n                            [class.card-active]=\"\n                              filter_chart_data_var == 'contract_assigned'\n                            \"\n                          >\n                            <div class=\"card-body box-shadow-block\">\n                              <div class=\"media\">\n                                <div class=\"media-body text-left\">\n                                  <h3 class=\"mb-1 info\">\n                                    <i\n                                      class=\"fa fa-spin fa-spinner\"\n                                      *ngIf=\"!contentdata\"\n                                    ></i>\n                                    <ng-container *ngIf=\"contentdata\"\n                                      >{{ contentdata.contract_assigned }}\n                                    </ng-container>\n                                  </h3>\n                                  <span>Contracts Assigned</span>\n                                </div>\n                                <div class=\"media-right align-self-center\">\n                                  <i\n                                    class=\"ft-mic info font-large-2 float-right\"\n                                  ></i>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </section>\n                  <!-- // Minimal statistics section end -->\n                  <div class=\"row text-left\">\n                    <div class=\"col-sm-12\">\n                      <div class=\"card\">\n                        <div class=\"card-header\">\n                          <h4 class=\"card-title\">\n                            <span\n                              *ngIf=\"filter_chart_data_var == 'youtube_video'\"\n                              >Youtube Video</span\n                            >\n                            <span *ngIf=\"filter_chart_data_var == 'clips'\"\n                              >Audio Available</span\n                            >\n                            <span *ngIf=\"filter_chart_data_var == 'contract'\"\n                              >Contract Agreements</span\n                            >\n                            <span\n                              *ngIf=\"\n                                filter_chart_data_var == 'contract_assigned'\n                              \"\n                              >Contract Assigned</span\n                            >\n                            <ng-container\n                              *ngIf=\"filters.startDate && filters.endDate\"\n                            >\n                              - ({{ filters.startDate }} To\n                              {{ filters.endDate }})</ng-container\n                            >\n                          </h4>\n                        </div>\n                        <div class=\"card-content\">\n                          <div class=\"card-body\">\n                            <div class=\"height-400\">\n                              <canvas\n                                height=\"400\"\n                                baseChart\n                                class=\"chart\"\n                                [datasets]=\"lineChartDataForContent\"\n                                [labels]=\"lineChartLabelsForContent\"\n                                [options]=\"lineChartOptionsForRoyalties\"\n                                [colors]=\"lineChartColorsForContent\"\n                                [legend]=\"lineChartLegend\"\n                                [chartType]=\"lineChartType\"\n                              ></canvas>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <!-- Line Chart Ends -->\n                </ng-template>\n              </li>\n              <li [ngbNavItem]=\"3\" *ngIf=\"authService.isEarningAdmin()\">\n                <a\n                  (click)=\"changetab('revenue')\"\n                  ngbNavLink\n                  class=\"nav-link d-flex align-items-center\"\n                >\n                  <span class=\"d-none d-sm-block\">Revenue</span>\n                </a>\n                <ng-template ngbNavContent>\n                  <!-- Minimal statistics section start -->\n                  <section id=\"minimal-statistics\">\n                    <fieldset\n                      class=\"form-group role_filter mt-2\"\n                      [formGroup]=\"filterGroup\"\n                    >\n                      <input\n                        class=\"form-control form-control-sm d-inline-block width-200 mr-1\"\n                        type=\"text\"\n                        ngxDaterangepickerMd\n                        [(ngModel)]=\"daterangefilter\"\n                        [showCustomRangeLabel]=\"true\"\n                        [alwaysShowCalendars]=\"true\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [ranges]=\"ranges\"\n                        [linkedCalendars]=\"true\"\n                        (change)=\"getByDate($event)\"\n                        [isInvalidDate]=\"isInvalidDate\"\n                        [showClearButton]=\"true\"\n                        placeholder=\"Start Date - End Date\"\n                      />\n\n                      <i\n                        *ngIf=\"isLoadingtable$ | async\"\n                        class=\"fa fa-spin fa-spinner\"\n                      ></i>\n                    </fieldset>\n                    <div class=\"row\">\n                      <div role=\"button\" class=\"col-xl-4 col-lg-6 col-12\">\n                        <div class=\"card\">\n                          <div class=\"card-content\">\n                            <div class=\"card-body box-shadow-block\">\n                              <div class=\"media\">\n                                <div class=\"media-body text-left\">\n                                  <h3 class=\"mb-1 danger\">\n                                    <i\n                                      class=\"fa fa-spin fa-spinner\"\n                                      *ngIf=\"!revenuedata\"\n                                    ></i>\n                                    <ng-container *ngIf=\"revenuedata\">\n                                      ${{\n                                        revenuedata.rights_holder_earning\n                                          | number: \"1.0-2\"\n                                      }}\n                                    </ng-container>\n                                  </h3>\n                                  <span>Rights Holder Revenue</span>\n                                </div>\n                                <div class=\"media-right align-self-center\">\n                                  <i\n                                    class=\"ft-dollar-sign danger font-large-2 float-right\"\n                                  ></i>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div role=\"button\" class=\"col-xl-4 col-lg-6 col-12\">\n                        <div class=\"card\">\n                          <div class=\"card-content\">\n                            <div class=\"card-body box-shadow-block\">\n                              <div class=\"media\">\n                                <div class=\"media-body text-left\">\n                                  <h3 class=\"mb-1 success\">\n                                    <i\n                                      class=\"fa fa-spin fa-spinner\"\n                                      *ngIf=\"!revenuedata\"\n                                    ></i>\n                                    <ng-container *ngIf=\"revenuedata\">\n                                      ${{\n                                        revenuedata.creator_earning\n                                          | number: \"1.0-2\"\n                                      }}\n                                    </ng-container>\n                                  </h3>\n                                  <span>Creator Revenue</span>\n                                </div>\n                                <div class=\"media-right align-self-center\">\n                                  <i\n                                    class=\"ft-dollar-sign success font-large-2 float-right\"\n                                  ></i>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div role=\"button\" class=\"col-xl-4 col-lg-6 col-12\">\n                        <div class=\"card\">\n                          <div class=\"card-content\">\n                            <div class=\"card-body box-shadow-block\">\n                              <div class=\"media\">\n                                <div class=\"media-body text-left\">\n                                  <h3 class=\"mb-1 warning\">\n                                    <i\n                                      class=\"fa fa-spin fa-spinner\"\n                                      *ngIf=\"!revenuedata\"\n                                    ></i>\n                                    <ng-container *ngIf=\"revenuedata\">\n                                      ${{\n                                        revenuedata.mindset_earning\n                                          | number: \"1.0-2\"\n                                      }}\n                                    </ng-container>\n                                  </h3>\n                                  <span>Mindset Revenue</span>\n                                </div>\n                                <div class=\"media-right align-self-center\">\n                                  <i\n                                    class=\"ft-dollar-sign warning font-large-2 float-right\"\n                                  ></i>\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </section>\n                  <!-- // Minimal statistics section end -->\n                  <div class=\"row text-left\">\n                    <div class=\"col-sm-12\">\n                      <div class=\"card\">\n                        <div class=\"card-header\">\n                          <h4 class=\"card-title\">\n                            <ng-container\n                              *ngIf=\"filters.startDate && filters.endDate\"\n                            >\n                              Revenue - {{ filters.startDate }} To\n                              {{ filters.endDate }}</ng-container\n                            >\n                          </h4>\n                        </div>\n                        <div class=\"card-content\">\n                          <div class=\"card-body\">\n                            <div class=\"height-400\">\n                              <canvas\n                                height=\"400\"\n                                baseChart\n                                class=\"chart\"\n                                [datasets]=\"lineChartDataForAll\"\n                                [labels]=\"lineChartLabelsForAll\"\n                                [options]=\"lineChartOptionsForRoyalties\"\n                                [colors]=\"lineChartColorsForAll\"\n                                [legend]=\"lineChartLegend\"\n                                [chartType]=\"lineChartType\"\n                              ></canvas>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <!-- Line Chart Ends -->\n                </ng-template>\n              </li>\n              <li [ngbNavItem]=\"authService.isEarningAdmin() ? 4 : 3\">\n                <a\n                  (click)=\"changetab('analysis')\"\n                  ngbNavLink\n                  class=\"nav-link d-flex align-items-center\"\n                >\n                  <span class=\"d-none d-sm-block\">Analytics</span>\n                </a>\n                <ng-template ngbNavContent>\n                  <!-- Minimal statistics section start -->\n                  <section id=\"minimal-statistics\">\n                    <fieldset\n                      class=\"form-group role_filter mb-2\"\n                      [formGroup]=\"filterGroup\"\n                    >\n                      <input\n                        class=\"form-control form-control-sm d-inline-block width-200 mr-1\"\n                        type=\"text\"\n                        ngxDaterangepickerMd\n                        [(ngModel)]=\"daterangefilter\"\n                        [showCustomRangeLabel]=\"true\"\n                        [alwaysShowCalendars]=\"true\"\n                        [ngModelOptions]=\"{ standalone: true }\"\n                        [ranges]=\"ranges\"\n                        [linkedCalendars]=\"true\"\n                        (change)=\"getByDate($event)\"\n                        [isInvalidDate]=\"isInvalidDate\"\n                        [showClearButton]=\"true\"\n                        placeholder=\"Start Date - End Date\"\n                      />\n                      <i\n                        *ngIf=\"isLoadingtable$ | async\"\n                        class=\"fa fa-spin fa-spinner mr-1\"\n                      ></i>\n\n                      <ng-select\n                        class=\"d-inline-block form-control-sm width-200 mr-1\"\n                        placeholder=\"Select Channel\"\n                        formControlName=\"channel\"\n                      >\n                        <ng-option value=\"\">Select Channel</ng-option>\n                        <ng-option\n                          value=\"{{ channel._id }}\"\n                          *ngFor=\"let channel of channels\"\n                        >\n                          {{ channel.channel_title }}\n                        </ng-option>\n                      </ng-select>\n                    </fieldset>\n                  </section>\n                  <!-- // Minimal statistics section end -->\n                  <div class=\"row text-left\">\n                    <div class=\"col-sm-12\">\n                      <div class=\"card\">\n                        <div class=\"card-header\">\n                          <h4 class=\"card-title\">\n                            <ng-container\n                              *ngIf=\"filters.startDate && filters.endDate\"\n                            >\n                              Analytics - {{ filters.startDate }} To\n                              {{ filters.endDate }}</ng-container\n                            >\n                          </h4>\n                        </div>\n                        <div class=\"card-content\">\n                          <div class=\"card-body\">\n                            <div class=\"height-400\">\n                              <canvas\n                                height=\"400\"\n                                baseChart\n                                class=\"chart\"\n                                [datasets]=\"lineChartDataForAnalysis\"\n                                [labels]=\"lineChartLabelsForAnalysis\"\n                                [options]=\"lineChartOptionsForAnalyticsChart\"\n                                [colors]=\"lineChartColorsForAnalysis\"\n                                [legend]=\"lineChartLegend\"\n                                [chartType]=\"lineChartType\"\n                              >\n                              </canvas>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                  <!-- Line Chart Ends -->\n                </ng-template>\n              </li>\n            </ul>\n            <div class=\"tab-content\">\n              <div [ngbNavOutlet]=\"nav\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DashboardRoutingModule } from './dashboard-routing.module';\nimport { DashboardComponent } from './dashboard.component';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { MatchHeightModule } from 'app/shared/directives/match-height.directive';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { ChartsModule } from 'ng2-charts';\nimport { NgxDaterangepickerMd } from 'ngx-daterangepicker-material';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgSelectModule } from '@ng-select/ng-select';\nimport { NgxDatatableModule } from '@swimlane/ngx-datatable';\nimport { CreatorComponent } from './dashboard-listing/creator/creator.component';\nimport { RightHolderComponent } from './dashboard-listing/right-holder/right-holder.component';\nimport { MainDashboardComponent } from './main-dashboard/main-dashboard.component';\n\n@NgModule({\n  declarations: [\n    DashboardComponent,\n    CreatorComponent,\n    RightHolderComponent,\n    MainDashboardComponent\n  ],\n  imports: [\n    CommonModule,\n    DashboardRoutingModule,\n    ChartsModule,\n    NgxChartsModule,\n    NgbModule,\n    MatchHeightModule,\n    CommonModule,\n    ReactiveFormsModule,\n    NgxDatatableModule,\n    NgSelectModule,\n    FormsModule,\n    NgxDaterangepickerMd.forRoot({\n      clearLabel: 'Lifetime',\n    })\n  ]\n})\nexport class DashboardModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from 'app/core/service/auth/auth.service';\n\n@Component({\n  selector: 'app-main-dashboard',\n  templateUrl: './main-dashboard.component.html',\n  styleUrls: ['./main-dashboard.component.scss']\n})\nexport class MainDashboardComponent implements OnInit {\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<app-dashboard *ngIf=\"authService.isAdminCategory()\"></app-dashboard>\n<app-dashboard-creator-listing *ngIf=\"authService.isCreator()\"></app-dashboard-creator-listing>\n<app-dashboard-right-holder-listing *ngIf=\"authService.isRH()\"></app-dashboard-right-holder-listing>"],"names":[],"sourceRoot":"webpack:///"}